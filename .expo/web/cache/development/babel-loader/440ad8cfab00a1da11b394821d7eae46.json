{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\91944\\\\Dropbox\\\\My PC (LAPTOP-4MDLAJMG)\\\\Desktop\\\\react_test2\\\\teacherScreens\\\\ccaAnnouncement.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { Input, Icon, ListItem, Overlay } from \"react-native-elements\";\nimport MyHeader from \"../components/MyHeader\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport DatePicker from \"react-native-datepicker\";\n\nvar ccaAnnouncement = function (_Component) {\n  _inherits(ccaAnnouncement, _Component);\n\n  var _super = _createSuper(ccaAnnouncement);\n\n  function ccaAnnouncement() {\n    var _this;\n\n    _classCallCheck(this, ccaAnnouncement);\n\n    var _date = new Date().getFullYear() + (new Date().getMonth() + 1) + new Date().getDate();\n\n    var date1 = new Date().getDate() + '/' + (new Date().getMonth() + 1) + '/' + new Date().getFullYear();\n    _this = _super.call(this);\n\n    _this.getAnnouncement = function () {\n      _this.announcementRef = db.collection('ccaAnnouncement').where('lastDate', '>=', new Date().getDate() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getFullYear()).orderBy('lastDate', 'asc').onSnapshot(function (snapshot) {\n        var announcement = snapshot.docs.map(function (doc) {\n          return doc.data();\n        });\n\n        _this.setState({\n          announcements: announcement\n        });\n      });\n    };\n\n    _this.getUserDetails = function () {\n      db.collection(\"teacher\").where(\"email_id\", \"==\", _this.state.userid).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.setState({\n            name: doc.data().name,\n            class_teacher_grade: doc.data().class_teacher_grade,\n            class_teacher_section: doc.data().class_teacher_section,\n            contact: doc.data().contact,\n            id: doc.data().id,\n            docId: doc.id,\n            teacherstate: doc.data().state\n          });\n        });\n      });\n    };\n\n    _this.addAnnouncement = function () {\n      var randomRequestId = _this.createUniqueId();\n\n      db.collection('ccaAnnouncement').add({\n        announcementId: randomRequestId,\n        announcementTopic: _this.state.announcementTopic,\n        announcementDetails: _this.state.announcementDetails,\n        refDate: new Date().getDate() + '/' + (new Date().getMonth() + 1) + '/' + new Date().getFullYear(),\n        date: firebase.firestore.FieldValue.serverTimestamp(),\n        teacherName: _this.state.name,\n        teacherId: _this.state.userid,\n        time: new Date().getHours() + ':' + new Date().getMinutes(),\n        teacherstate: _this.state.teacherstate,\n        lastDate: _this.state.date\n      });\n      ToastAndroid.showWithGravityAndOffset(\"Announcement Added Successfully\", ToastAndroid.LONG, ToastAndroid.BOTTOM, 25, 50);\n\n      _this.setState({\n        isAnnouncementModalVisible: false\n      });\n    };\n\n    _this.keyExtractor = function (index) {\n      return index.toString();\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i;\n      return React.createElement(ListItem, {\n        key: i,\n        bottomDivider: true,\n        title: 'Topic: ' + item.announcementTopic,\n        subtitle: 'Last Date: ' + item.lastDate + '\\nAnnouncement date: ' + item.refDate + '\\nAnnouncement time: ' + item.time,\n        rightElement: React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this.setState({\n              textTeacherstate: item.teacherstate,\n              textTeacherName: item.teacherName,\n              textTopic: item.announcementTopic,\n              textDetails: item.announcementDetails,\n              announcementVisible: true,\n              textLastDate: item.lastDate\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }\n        }, React.createElement(Icon, {\n          name: \"torah\",\n          size: RFValue(35),\n          color: \"#FC46AA\",\n          type: \"font-awesome-5\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }\n        })),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this.addAnnouncementModal = function () {\n      return React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: _this.state.isAnnouncementModalVisible,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.scrollview,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.signupView,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.signupText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, \" Add Announcement \")), React.createElement(Text, {\n        style: styles.label,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }, \"Announcement  Topic\"), React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'Announcement Topic',\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            announcementTopic: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"bullhorn\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }\n        }),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: styles.label,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      }, \"Announcement Details\"), React.createElement(Input, {\n        style: [styles.formTextInput, {\n          height: RFValue(200)\n        }],\n        containerStyle: {\n          marginTop: RFValue(30),\n          marginLeft: 10\n        },\n        multiline: true,\n        placeholder: \"Announcement Details\",\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            announcementDetails: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"scroll\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }\n        }),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: styles.label,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, \"Last Date\"), React.createElement(DatePicker, {\n        style: {\n          width: 200,\n          marginLeft: 10\n        },\n        date: _this.state.date,\n        mode: \"date\",\n        placeholder: \"select date\",\n        format: \"DD-MM-YYYY\",\n        minDate: _this.state.minDate,\n        maxDate: _this.state.maxDate,\n        confirmBtnText: \"Confirm\",\n        cancelBtnText: \"Cancel\",\n        customStyles: {\n          dateIcon: {\n            position: 'absolute',\n            left: 0,\n            top: 4,\n            marginLeft: 0\n          },\n          dateInput: {\n            marginLeft: 36\n          }\n        },\n        onDateChange: function onDateChange(date) {\n          _this.setState({\n            date: date\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.registerButton,\n        onPress: function onPress() {\n          if (_this.state.announcementDetails.length != '' && _this.state.announcementTopic.length != '') {\n            if (_this.state.date != null) {\n              _this.addAnnouncement();\n            } else {\n              ToastAndroid.showWithGravityAndOffset(\"Please Add Last Date or go to Announcement screen and add Announcement\", ToastAndroid.LONG, ToastAndroid.BOTTOM, 25, 50);\n            }\n          } else {\n            ToastAndroid.showWithGravityAndOffset(\"Please Enter Announcement Details or Announcement Topic\", ToastAndroid.LONG, ToastAndroid.BOTTOM, 25, 50);\n          }\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.registerButtonText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 29\n        }\n      }, \"Add Announcement\")), React.createElement(Text, {\n        style: styles.cancelButtonText,\n        onPress: function onPress() {\n          _this.setState({\n            isAnnouncementModalVisible: false\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }\n      }, \"Cancel\"))));\n    };\n\n    _this.state = {\n      contact: \"\",\n      userid: firebase.auth().currentUser.email,\n      name: \"\",\n      docId: \"\",\n      class_teacher_section: '',\n      class_teacher_grade: '',\n      id: '',\n      refDate: date1,\n      announcements: [],\n      isAnnouncementModalVisible: false,\n      announcementDetails: '',\n      announcementTopic: '',\n      announcementVisible: false,\n      textDetails: '',\n      textTopic: '',\n      teacherstate: '',\n      textTeacherName: '',\n      textTeacherstate: '',\n      date: null,\n      minDate: new Date().getDate() + 1 + '-' + (new Date().getMonth() + 1) + '-' + new Date().getFullYear(),\n      maxDate: \"31-01-2022\",\n      textLastDate: ''\n    };\n    return _this;\n  }\n\n  _createClass(ccaAnnouncement, [{\n    key: \"createUniqueId\",\n    value: function createUniqueId() {\n      return Math.random().toString(36).substring(7);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserDetails();\n      this.getAnnouncement();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.announcements.length === 0) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            backgroundColor: '#fff5dc'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }\n        }, this.addAnnouncementModal(), React.createElement(View, {\n          style: {\n            flex: 0.12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 21\n          }\n        }, React.createElement(MyHeader, {\n          title: \"CCA Announcement\",\n          navigation: this.props.navigation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }\n        })), React.createElement(View, {\n          style: {\n            flex: 0.88,\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: RFValue(300)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 21\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/Notification.png\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }\n        }), React.createElement(Text, {\n          style: {\n            fontSize: RFValue(23)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }\n        }, \"No CCA Announcement Found\")), React.createElement(View, {\n          style: {\n            marginTop: RFValue(300)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 21\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.add1,\n          onPress: function onPress() {\n            _this2.setState({\n              isAnnouncementModalVisible: true\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/announcements.png\"),\n          style: {\n            height: RFValue(50),\n            width: RFValue(50)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }\n        }))));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            backgroundColor: '#fff5dc'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }\n        }, React.createElement(Overlay, {\n          isVisible: this.state.announcementVisible,\n          overlayStyle: {\n            width: '90%',\n            marginTop: RFValue(20),\n            marginBottom: RFValue(20)\n          },\n          onBackdropPress: function onBackdropPress() {\n            _this2.setState({\n              announcementVisible: false\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 21\n          }\n        }, React.createElement(ScrollView, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: {\n            marginTop: RFValue(15)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }\n        }, React.createElement(View, {\n          style: styles.signupView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: styles.signupText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 37\n          }\n        }, \" \", this.state.textTopic)), React.createElement(View, {\n          style: {\n            marginTop: RFValue(20)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            marginLeft: RFValue(5),\n            marginRight: RFValue(5),\n            marginBottom: RFValue(10)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 37\n          }\n        }, this.state.textDetails), React.createElement(Text, {\n          style: {\n            textAlign: 'left',\n            marginTop: RFValue(5)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 37\n          }\n        }, \"Last Date: \", this.state.textLastDate)), React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'left',\n            marginTop: RFValue(10)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 37\n          }\n        }, \"Regards,\"), React.createElement(Text, {\n          style: {\n            textAlign: 'left',\n            marginTop: RFValue(3),\n            marginLeft: RFValue(5)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 37\n          }\n        }, this.state.textTeacherName, \",\"), React.createElement(Text, {\n          style: {\n            textAlign: 'left',\n            marginLeft: RFValue(5)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 37\n          }\n        }, \"VIS Team\"))))), React.createElement(View, {\n          style: {\n            flex: 0.12\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 21\n          }\n        }, React.createElement(MyHeader, {\n          title: \"CCA Announcement\",\n          navigation: this.props.navigation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }\n        })), React.createElement(View, {\n          style: {\n            flex: 0.88,\n            marginTop: RFValue(10)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 21\n          }\n        }, this.addAnnouncementModal(), React.createElement(FlatList, {\n          keyExtractor: this.keyExtractor,\n          data: this.state.announcements,\n          renderItem: this.renderItem,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }\n        })), React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 21\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.add1,\n          onPress: function onPress() {\n            _this2.setState({\n              isAnnouncementModalVisible: true\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/announcements.png\"),\n          style: {\n            height: RFValue(50),\n            width: RFValue(50)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 29\n          }\n        }))));\n      }\n    }\n  }]);\n\n  return ccaAnnouncement;\n}(Component);\n\nexport { ccaAnnouncement as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#E5F7FE\"\n  },\n  formContainer: {\n    flex: 0.88,\n    justifyContent: 'center'\n  },\n  label: {\n    fontSize: RFValue(15),\n    color: \"#717D7E\",\n    fontWeight: 'bold',\n    padding: RFValue(10),\n    marginLeft: RFValue(20)\n  },\n  registerButton: {\n    width: \"80%\",\n    height: RFValue(50),\n    marginTop: RFValue(20),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(3),\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: RFValue(10)\n  },\n  start: {\n    borderRadius: RFValue(5),\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: RFValue(35),\n    paddingLeft: RFValue(5),\n    paddingRight: RFValue(5)\n  },\n  registerButtonText: {\n    fontSize: RFValue(23),\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  label1: {\n    fontSize: RFValue(18),\n    color: \"#a901ff\",\n    fontWeight: 'bold',\n    marginLeft: RFValue(50)\n  },\n  button: {\n    width: \"75%\",\n    height: RFValue(60),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(50),\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: RFValue(35)\n  },\n  buttonView: {\n    flex: 0.22,\n    alignItems: \"center\",\n    marginTop: RFValue(150)\n  },\n  buttonView1: {\n    flex: 0.22,\n    alignItems: \"center\",\n    marginTop: RFValue(50)\n  },\n  buttonText: {\n    fontSize: RFValue(23),\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  cancelButtonText: {\n    fontSize: RFValue(20),\n    fontWeight: 'bold',\n    color: \"#32867d\",\n    marginTop: RFValue(10),\n    textAlign: 'center'\n  },\n  scrollview: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  firstNameModal: {\n    flex: 0.5,\n    height: 150\n  },\n  logo: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: RFValue(10),\n    height: RFValue(280)\n  },\n  loginBox: {\n    width: \"80%\",\n    height: RFValue(50),\n    borderWidth: 1.5,\n    borderColor: \"#ffffff\",\n    fontSize: RFValue(20),\n    paddingLeft: RFValue(10)\n  },\n  add1: {\n    width: RFValue(65),\n    height: RFValue(65),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(100),\n    backgroundColor: \"#a901ff\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16\n  },\n  signupView: {\n    flex: 0.05,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  signupText: {\n    fontSize: RFValue(20),\n    fontWeight: \"bold\",\n    color: \"#32867d\"\n  },\n  formTextInput: {\n    width: \"75%\",\n    height: RFValue(45),\n    borderWidth: 1,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/91944/Dropbox/My PC (LAPTOP-4MDLAJMG)/Desktop/react_test2/teacherScreens/ccaAnnouncement.js"],"names":["React","Component","Input","Icon","ListItem","Overlay","MyHeader","db","firebase","RFValue","DatePicker","ccaAnnouncement","date","Date","getFullYear","getMonth","getDate","date1","getAnnouncement","announcementRef","collection","where","orderBy","onSnapshot","snapshot","announcement","docs","map","doc","data","setState","announcements","getUserDetails","state","userid","querySnapshot","forEach","name","class_teacher_grade","class_teacher_section","contact","id","docId","teacherstate","addAnnouncement","randomRequestId","createUniqueId","add","announcementId","announcementTopic","announcementDetails","refDate","firestore","FieldValue","serverTimestamp","teacherName","teacherId","time","getHours","getMinutes","lastDate","ToastAndroid","showWithGravityAndOffset","LONG","BOTTOM","isAnnouncementModalVisible","keyExtractor","index","toString","renderItem","item","i","textTeacherstate","textTeacherName","textTopic","textDetails","announcementVisible","textLastDate","addAnnouncementModal","styles","scrollview","signupView","signupText","label","loginBox","text","formTextInput","height","marginTop","marginLeft","width","minDate","maxDate","dateIcon","position","left","top","dateInput","alignItems","registerButton","length","registerButtonText","cancelButtonText","auth","currentUser","email","Math","random","substring","flex","backgroundColor","props","navigation","justifyContent","require","fontSize","add1","marginBottom","textAlign","marginRight","StyleSheet","create","container","formContainer","color","fontWeight","padding","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","start","paddingLeft","paddingRight","label1","button","buttonView","buttonView1","buttonText","firstNameModal","logo","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    Modal,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Alert,\r\n    Image,\r\n    ScrollView,\r\n    FlatList,\r\n    Linking,\r\n    ToastAndroid\r\n} from \"react-native\";\r\nimport { Input, Icon, ListItem, Overlay } from \"react-native-elements\";\r\nimport MyHeader from \"../components/MyHeader\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport DatePicker from \"react-native-datepicker\";\r\n\r\nexport default class ccaAnnouncement extends Component {\r\n    constructor() {\r\n        var date = new Date().getFullYear() + (new Date().getMonth() + 1) + new Date().getDate()\r\n        var date1 = new Date().getDate() + '/' + (new Date().getMonth() + 1) + '/' + new Date().getFullYear()\r\n        super();\r\n        this.state = {\r\n            contact: \"\",\r\n            userid: firebase.auth().currentUser.email,\r\n            name: \"\",\r\n            docId: \"\",\r\n            class_teacher_section: '',\r\n            class_teacher_grade: '',\r\n            id: '',\r\n            refDate: date1,\r\n            announcements: [],\r\n            isAnnouncementModalVisible: false,\r\n            announcementDetails: '',\r\n            announcementTopic: '',\r\n            announcementVisible: false,\r\n            textDetails: '',\r\n            textTopic: '',\r\n            teacherstate: '',\r\n            textTeacherName: '',\r\n            textTeacherstate: '',\r\n            date: null,\r\n            minDate: (new Date().getDate() + 1) + '-' + (new Date().getMonth() + 1) + '-' + new Date().getFullYear(),\r\n            maxDate: \"31-01-2022\",\r\n            textLastDate: '',\r\n        };\r\n    }\r\n\r\n    getAnnouncement = () => {\r\n        this.announcementRef = db.collection('ccaAnnouncement')\r\n            .where('lastDate', '>=', new Date().getDate() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getFullYear())\r\n            .orderBy('lastDate', 'asc')\r\n            .onSnapshot((snapshot) => {\r\n                var announcement = snapshot.docs.map((doc) => doc.data())\r\n                this.setState({\r\n                    announcements: announcement\r\n                });\r\n            })\r\n    }\r\n\r\n    getUserDetails = () => {\r\n        db.collection(\"teacher\")\r\n            .where(\"email_id\", \"==\", this.state.userid)\r\n            .onSnapshot((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    this.setState({\r\n                        name: doc.data().name,\r\n                        class_teacher_grade: doc.data().class_teacher_grade,\r\n                        class_teacher_section: doc.data().class_teacher_section,\r\n                        contact: doc.data().contact,\r\n                        id: doc.data().id,\r\n                        docId: doc.id,\r\n                        teacherstate: doc.data().state,\r\n                    });\r\n                });\r\n            });\r\n    }\r\n    createUniqueId() {\r\n        return Math.random().toString(36).substring(7);\r\n    }\r\n\r\n    addAnnouncement = () => {\r\n        var randomRequestId = this.createUniqueId();\r\n        db.collection('ccaAnnouncement')\r\n            .add({\r\n                announcementId: randomRequestId,\r\n                announcementTopic: this.state.announcementTopic,\r\n                announcementDetails: this.state.announcementDetails,\r\n                refDate: new Date().getDate() + '/' + (new Date().getMonth() + 1) + '/' + new Date().getFullYear(),\r\n                date: firebase.firestore.FieldValue.serverTimestamp(),\r\n                teacherName: this.state.name,\r\n                teacherId: this.state.userid,\r\n                time: new Date().getHours() + ':' + new Date().getMinutes(),\r\n                teacherstate: this.state.teacherstate,\r\n                lastDate: this.state.date\r\n            })\r\n        ToastAndroid.showWithGravityAndOffset(\r\n            \"Announcement Added Successfully\",\r\n            ToastAndroid.LONG,\r\n            ToastAndroid.BOTTOM,\r\n            25,\r\n            50\r\n        );\r\n        this.setState({\r\n            isAnnouncementModalVisible: false\r\n        })\r\n    }\r\n\r\n    keyExtractor = (index) => index.toString()\r\n\r\n    renderItem = ({ item, i }) => {\r\n        return (\r\n            <ListItem\r\n                key={i}\r\n                bottomDivider\r\n                title={'Topic: ' + item.announcementTopic}\r\n                subtitle={'Last Date: ' + item.lastDate + '\\nAnnouncement date: ' + item.refDate + '\\nAnnouncement time: ' + item.time}\r\n                rightElement={\r\n                    <TouchableOpacity\r\n                        //style={[styles.start, { backgroundColor: item.color }]}\r\n                        onPress={() => {\r\n                            this.setState({\r\n                                textTeacherstate: item.teacherstate,\r\n                                textTeacherName: item.teacherName,\r\n                                textTopic: item.announcementTopic,\r\n                                textDetails: item.announcementDetails,\r\n                                announcementVisible: true,\r\n                                textLastDate: item.lastDate,\r\n                            })\r\n                        }}\r\n                    >\r\n                        <Icon\r\n                            name=\"torah\"\r\n                            size={RFValue(35)}\r\n                            color=\"#FC46AA\"\r\n                            type=\"font-awesome-5\"\r\n                        />\r\n                    </TouchableOpacity>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    addAnnouncementModal = () => {\r\n        return (\r\n            <Modal\r\n                animationType=\"slide\"\r\n                transparent={true}\r\n                visible={this.state.isAnnouncementModalVisible}\r\n            >\r\n                <ScrollView style={styles.scrollview}>\r\n                    <View style={styles.signupView}>\r\n                        <Text style={styles.signupText}> Add Announcement </Text>\r\n                    </View>\r\n                    <Text style={styles.label}>Announcement  Topic</Text>\r\n                    <Input\r\n                        style={styles.loginBox}\r\n                        placeholder={'Announcement Topic'}\r\n                        onChangeText={(text) => {\r\n                            this.setState({\r\n                                announcementTopic: text,\r\n                            });\r\n                        }}\r\n                        leftIcon={\r\n                            <Icon\r\n                                name=\"bullhorn\"\r\n                                size={RFValue(35)}\r\n                                color=\"#fabf10\"\r\n                                type=\"font-awesome-5\"\r\n                            />\r\n                        }\r\n                    />\r\n                    <Text style={styles.label}>Announcement Details</Text>\r\n                    <Input\r\n                        style={[styles.formTextInput, { height: RFValue(200) }]}\r\n                        containerStyle={{ marginTop: RFValue(30), marginLeft: 10 }}\r\n                        multiline\r\n                        placeholder={\"Announcement Details\"}\r\n                        onChangeText={(text) => {\r\n                            this.setState({\r\n                                announcementDetails: text,\r\n                            });\r\n                        }}\r\n                        leftIcon={\r\n                            <Icon\r\n                                name=\"scroll\"\r\n                                size={RFValue(35)}\r\n                                color=\"#fabf10\"\r\n                                type=\"font-awesome-5\"\r\n                            />\r\n                        }\r\n                    />\r\n                    <Text style={styles.label}>Last Date</Text>\r\n                    <DatePicker\r\n                        style={{ width: 200, marginLeft: 10 }}\r\n                        date={this.state.date}\r\n                        mode=\"date\"\r\n                        placeholder=\"select date\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        minDate={this.state.minDate}\r\n                        maxDate={this.state.maxDate}\r\n                        confirmBtnText=\"Confirm\"\r\n                        cancelBtnText=\"Cancel\"\r\n                        customStyles={{\r\n                            dateIcon: {\r\n                                position: 'absolute',\r\n                                left: 0,\r\n                                top: 4,\r\n                                marginLeft: 0\r\n                            },\r\n                            dateInput: {\r\n                                marginLeft: 36\r\n                            }\r\n                        }}\r\n                        onDateChange={(date) => { this.setState({ date: date }) }}\r\n                    />\r\n                    <View style={{ alignItems: 'center' }}>\r\n                        <TouchableOpacity\r\n                            style={styles.registerButton}\r\n                            onPress={() => {\r\n                                if (this.state.announcementDetails.length != '' && this.state.announcementTopic.length != '') {\r\n                                    if (this.state.date != null) {\r\n                                        this.addAnnouncement()\r\n                                    }\r\n                                    else {\r\n                                        ToastAndroid.showWithGravityAndOffset(\r\n                                            \"Please Add Last Date or go to Announcement screen and add Announcement\",\r\n                                            ToastAndroid.LONG,\r\n                                            ToastAndroid.BOTTOM,\r\n                                            25,\r\n                                            50\r\n                                        );\r\n                                    }\r\n                                } else {\r\n                                    ToastAndroid.showWithGravityAndOffset(\r\n                                        \"Please Enter Announcement Details or Announcement Topic\",\r\n                                        ToastAndroid.LONG,\r\n                                        ToastAndroid.BOTTOM,\r\n                                        25,\r\n                                        50\r\n                                    );\r\n                                }\r\n                            }}>\r\n                            <Text style={styles.registerButtonText}>Add Announcement</Text>\r\n                        </TouchableOpacity>\r\n                        <Text\r\n                            style={styles.cancelButtonText}\r\n                            onPress={() => {\r\n                                this.setState({ isAnnouncementModalVisible: false })\r\n                            }}\r\n                        >\r\n                            Cancel</Text>\r\n                    </View>\r\n                </ScrollView>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserDetails();\r\n        this.getAnnouncement();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.announcements.length === 0) {\r\n            return (\r\n                <View style={{ flex: 1, backgroundColor: '#fff5dc' }}>\r\n                    {this.addAnnouncementModal()}\r\n                    <View style={{ flex: 0.12 }}>\r\n                        <MyHeader title=\"CCA Announcement\" navigation={this.props.navigation} />\r\n                    </View>\r\n                    <View style={{\r\n                        flex: 0.88,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        marginTop: RFValue(300),\r\n                    }}>\r\n                        <Image\r\n                            source={require('../assets/Notification.png')} />\r\n                        <Text style={{ fontSize: RFValue(23) }}>No CCA Announcement Found</Text>\r\n                    </View>\r\n                    <View style={{ marginTop: RFValue(300) }}>\r\n                        <TouchableOpacity style={styles.add1}\r\n                            onPress={() => {\r\n                                this.setState({\r\n                                    isAnnouncementModalVisible: true\r\n                                })\r\n                            }}\r\n                        >\r\n                            <Image\r\n                                source={require('../assets/announcements.png')}\r\n                                style={{ height: RFValue(50), width: RFValue(50) }}\r\n                            />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <View style={{ flex: 1, backgroundColor: '#fff5dc' }}>\r\n                    <Overlay\r\n                        isVisible={this.state.announcementVisible}\r\n                        overlayStyle={{ width: '90%', marginTop: RFValue(20), marginBottom: RFValue(20) }}\r\n                        onBackdropPress={() => {\r\n                            this.setState({\r\n                                announcementVisible: false\r\n                            })\r\n                        }}>\r\n                        <ScrollView>\r\n                            <View style={{ marginTop: RFValue(15), }}>\r\n                                <View style={styles.signupView}>\r\n                                    <Text style={styles.signupText}> {this.state.textTopic}</Text>\r\n                                </View>\r\n                                <View style={{ marginTop: RFValue(20) }}>\r\n                                    <Text style={{ textAlign: 'center', marginLeft: RFValue(5), marginRight: RFValue(5), marginBottom: RFValue(10) }}>{this.state.textDetails}</Text>\r\n                                    <Text style={{ textAlign: 'left', marginTop: RFValue(5) }}>Last Date: {this.state.textLastDate}</Text>\r\n                                </View>\r\n                                <View>\r\n                                    <Text style={{ textAlign: 'left', marginTop: RFValue(10) }}>Regards,</Text>\r\n                                    <Text style={{ textAlign: 'left', marginTop: RFValue(3), marginLeft: RFValue(5) }}>{this.state.textTeacherName},</Text>\r\n                                    <Text style={{ textAlign: 'left', marginLeft: RFValue(5) }}>VIS Team</Text>\r\n                                </View>\r\n                            </View>\r\n                        </ScrollView>\r\n                    </Overlay>\r\n                    <View style={{ flex: 0.12 }}>\r\n                        <MyHeader title=\"CCA Announcement\" navigation={this.props.navigation} />\r\n                    </View>\r\n                    <View style={{ flex: 0.88, marginTop: RFValue(10) }}>\r\n                        {this.addAnnouncementModal()}\r\n                        <FlatList\r\n                            keyExtractor={this.keyExtractor}\r\n                            data={this.state.announcements}\r\n                            renderItem={this.renderItem}\r\n                        />\r\n                    </View>\r\n                    <View>\r\n                        <TouchableOpacity style={styles.add1}\r\n                            onPress={() => {\r\n                                this.setState({\r\n                                    isAnnouncementModalVisible: true\r\n                                })\r\n                            }}\r\n                        >\r\n                            <Image\r\n                                source={require('../assets/announcements.png')}\r\n                                style={{ height: RFValue(50), width: RFValue(50) }}\r\n                            />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#E5F7FE\"\r\n    },\r\n    formContainer: {\r\n        flex: 0.88,\r\n        justifyContent: 'center',\r\n    },\r\n    label: {\r\n        fontSize: RFValue(15),\r\n        color: \"#717D7E\",\r\n        fontWeight: 'bold',\r\n        padding: RFValue(10),\r\n        marginLeft: RFValue(20)\r\n    },\r\n    registerButton: {\r\n        width: \"80%\",\r\n        height: RFValue(50),\r\n        marginTop: RFValue(20),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(3),\r\n        backgroundColor: \"#32867d\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.44,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n        marginTop: RFValue(10),\r\n    },\r\n    start: {\r\n        borderRadius: RFValue(5),\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.44,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: RFValue(35),\r\n        paddingLeft: RFValue(5),\r\n        paddingRight: RFValue(5)\r\n    },\r\n    registerButtonText: {\r\n        fontSize: RFValue(23),\r\n        fontWeight: \"bold\",\r\n        color: \"#fff\",\r\n    },\r\n    label1: {\r\n        fontSize: RFValue(18),\r\n        color: \"#a901ff\",\r\n        fontWeight: 'bold',\r\n        marginLeft: RFValue(50)\r\n    },\r\n    button: {\r\n        width: \"75%\",\r\n        height: RFValue(60),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(50),\r\n        backgroundColor: \"#32867d\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.44,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n        marginTop: RFValue(35),\r\n    },\r\n    buttonView: {\r\n        flex: 0.22,\r\n        alignItems: \"center\",\r\n        marginTop: RFValue(150),\r\n    },\r\n    buttonView1: {\r\n        flex: 0.22,\r\n        alignItems: \"center\",\r\n        marginTop: RFValue(50),\r\n    },\r\n    buttonText: {\r\n        fontSize: RFValue(23),\r\n        fontWeight: \"bold\",\r\n        color: \"#fff\",\r\n    },\r\n    cancelButtonText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: 'bold',\r\n        color: \"#32867d\",\r\n        marginTop: RFValue(10),\r\n        textAlign: 'center'\r\n    },\r\n    scrollview: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\"\r\n    },\r\n    firstNameModal: {\r\n        flex: 0.5,\r\n        height: 150\r\n    },\r\n    logo: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: RFValue(10),\r\n        height: RFValue(280)\r\n    },\r\n    loginBox: {\r\n        width: \"80%\",\r\n        height: RFValue(50),\r\n        borderWidth: 1.5,\r\n        borderColor: \"#ffffff\",\r\n        fontSize: RFValue(20),\r\n        paddingLeft: RFValue(10),\r\n    },\r\n    add1: {\r\n        width: RFValue(65),\r\n        height: RFValue(65),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(100),\r\n        backgroundColor: \"#a901ff\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.44,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n    },\r\n    signupView: {\r\n        flex: 0.05,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    signupText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: \"bold\",\r\n        color: \"#32867d\"\r\n    },\r\n    formTextInput: {\r\n        width: \"75%\",\r\n        height: RFValue(45),\r\n        borderWidth: 1,\r\n        padding: 10,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}