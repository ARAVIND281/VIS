{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\91944\\\\Dropbox\\\\My PC (LAPTOP-4MDLAJMG)\\\\Desktop\\\\react_test2\\\\studentScreens\\\\ChatClassTeacher.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Icon, Input, ListItem, Avatar } from 'react-native-elements';\nimport MyHeader from \"../components/MyHeader\";\nimport { RFValue } from 'react-native-responsive-fontsize';\nimport firebase from 'firebase';\nimport db from \"../config\";\nimport { GiftedChat, Actions, Day } from 'react-native-gifted-chat';\nimport * as ImagePicker from \"expo-image-picker\";\n\nvar ChatClassTeacher = function (_Component) {\n  _inherits(ChatClassTeacher, _Component);\n\n  var _super = _createSuper(ChatClassTeacher);\n\n  function ChatClassTeacher(props) {\n    var _this;\n\n    _classCallCheck(this, ChatClassTeacher);\n\n    _this = _super.call(this, props);\n    _this.uid = '';\n    _this.messagesRef = null;\n\n    _this.forceUpdateHandler = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.check == 0)) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(_this.studentIdToOne());\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getUserDetails = function () {\n      db.collection(\"students\").where(\"email_id\", \"==\", _this.state.userid).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.setState({\n            name: doc.data().name,\n            grade: doc.data().grade,\n            section: doc.data().section,\n            contact: doc.data().contact,\n            id: doc.data().id,\n            docId: doc.id,\n            image: '',\n            check: doc.data().first\n          });\n\n          if (_this.state.messages.length == 0) {\n            _this.loadMessages(doc.data().id + doc.data().grade + doc.data().section, function (message) {\n              _this.setState(function (previousState) {\n                return {\n                  messages: GiftedChat.append(previousState.messages, message)\n                };\n              });\n            });\n          }\n        });\n      });\n    };\n\n    _this.fetchImage = function (imageName) {\n      var storageRef = firebase.storage().ref().child(\"user_profiles/\" + imageName);\n      storageRef.getDownloadURL().then(function (url) {\n        _this.setState({\n          image: url\n        });\n      }).catch(function (error) {\n        _this.setState({\n          image: \"https://firebasestorage.googleapis.com/v0/b/inbo-chat-a81c7.appspot.com/o/user_profiles%2F0c3b3adb1a7530892e55ef36d3be6cb8.png?alt=media&token=7818f4b2-e6cf-4342-8666-424c4636a430\"\n        });\n      });\n    };\n\n    _this.loadMessages = function (where, callback) {\n      _this.messagesRef = firebase.database().ref(where + 'chatclassteacher');\n\n      _this.messagesRef.off();\n\n      var onReceive = function onReceive(data) {\n        var message = data.val();\n        callback({\n          _id: data.key,\n          text: message.text,\n          createdAt: new Date(message.createdAt),\n          user: {\n            _id: message.user._id,\n            name: message.user.name,\n            avatar: message.user.avatar\n          }\n        });\n      };\n\n      _this.messagesRef.limitToLast(900000).on('child_added', onReceive);\n    };\n\n    _this.studentIdToOne = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(_this.studentIdToOne2());\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.studentIdToOne2 = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(db.collection('students').doc(_this.state.userid).update({\n                first: '1'\n              }));\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      userid: firebase.auth().currentUser.email,\n      docId: '',\n      messages: [],\n      name: '',\n      grade: '',\n      section: '',\n      docId: '',\n      id: '',\n      check: '',\n      image: ''\n    };\n    _this.forceUpdateHandler = _this.forceUpdateHandler.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ChatClassTeacher, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserDetails();\n      this.fetchImage(this.state.userid);\n    }\n  }, {\n    key: \"renderDay\",\n    value: function renderDay(props) {\n      return React.createElement(Day, _extends({}, props, {\n        textStyle: {\n          color: '#000',\n          fontWeight: 'bold',\n          fontSize: RFValue(14)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 16\n        }\n      }));\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(message) {\n      for (var i = 0; i < message.length; i++) {\n        this.messagesRef.push({\n          text: message[i].text,\n          user: message[i].user,\n          createdAt: firebase.database.ServerValue.TIMESTAMP\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: '#ffefff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../assets/bg.png\"),\n        style: styles.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          marginTop: RFValue(10)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Talk with Class Teacher\",\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      })), React.createElement(GiftedChat, {\n        messages: this.state.messages,\n        onSend: function _callee4(message) {\n          return _regeneratorRuntime.async(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _this2.sendMessage(message);\n\n                  _context4.next = 3;\n                  return _regeneratorRuntime.awrap(_this2.forceUpdateHandler());\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        user: {\n          _id: this.state.userid,\n          name: this.state.name,\n          avatar: this.state.image\n        },\n        scrollToBottom: true,\n        alwaysShowSend: true,\n        renderUsernameOnMessage: true,\n        scrollToBottomComponent: function scrollToBottomComponent() {\n          return React.createElement(Icon, {\n            name: \"arrow-down\",\n            type: \"font-awesome-5\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }\n          });\n        },\n        isTyping: true,\n        isLoadingEarlier: true,\n        timeTextStyle: {\n          left: {\n            color: 'green'\n          },\n          right: {\n            color: 'yellow'\n          }\n        },\n        isTyping: true,\n        infiniteScroll: true,\n        renderActions: this.renderActions,\n        showAvatarForEveryMessage: true,\n        renderDay: this.renderDay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return ChatClassTeacher;\n}(Component);\n\nexport { ChatClassTeacher as default };\nvar styles = StyleSheet.create({\n  add1: {\n    width: RFValue(65),\n    height: RFValue(65),\n    marginTop: RFValue(20),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(100),\n    backgroundColor: \"#a901ff\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: RFValue(10)\n  },\n  scrollview: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  signupView: {\n    flex: 0.05,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  signupText: {\n    fontSize: RFValue(20),\n    fontWeight: \"bold\",\n    color: \"#32867d\"\n  },\n  registerButton: {\n    width: \"75%\",\n    height: RFValue(50),\n    marginTop: RFValue(20),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(3),\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: RFValue(10)\n  },\n  registerButtonText: {\n    fontSize: RFValue(23),\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  label: {\n    fontSize: RFValue(17),\n    color: \"#717D7E\",\n    fontWeight: 'bold',\n    paddingLeft: RFValue(10),\n    marginLeft: RFValue(20)\n  },\n  registerButton: {\n    width: \"75%\",\n    height: RFValue(50),\n    marginTop: RFValue(20),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(3),\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: RFValue(10)\n  },\n  registerButtonText: {\n    fontSize: RFValue(23),\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  cancelButtonText: {\n    fontSize: RFValue(20),\n    fontWeight: 'bold',\n    color: \"#32867d\",\n    marginTop: RFValue(10)\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n    shadowOpacity: 0.3\n  }\n});","map":{"version":3,"sources":["C:/Users/91944/Dropbox/My PC (LAPTOP-4MDLAJMG)/Desktop/react_test2/studentScreens/ChatClassTeacher.js"],"names":["React","Component","Icon","Input","ListItem","Avatar","MyHeader","RFValue","firebase","db","GiftedChat","Actions","Day","ImagePicker","ChatClassTeacher","props","uid","messagesRef","forceUpdateHandler","state","check","studentIdToOne","getUserDetails","collection","where","userid","onSnapshot","querySnapshot","forEach","doc","setState","name","data","grade","section","contact","id","docId","image","first","messages","length","loadMessages","message","previousState","append","fetchImage","imageName","storageRef","storage","ref","child","getDownloadURL","then","url","catch","error","callback","database","off","onReceive","val","_id","key","text","createdAt","Date","user","avatar","limitToLast","on","studentIdToOne2","update","auth","currentUser","email","bind","color","fontWeight","fontSize","i","push","ServerValue","TIMESTAMP","flex","backgroundColor","require","styles","marginTop","navigation","sendMessage","left","right","renderActions","renderDay","StyleSheet","create","add1","width","height","justifyContent","alignItems","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","scrollview","signupView","signupText","registerButton","registerButtonText","label","paddingLeft","marginLeft","cancelButtonText","resizeMode"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;AAWA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,QAAtB,EAAgCC,MAAhC,QAA8C,uBAA9C;AACA,OAAOC,QAAP;AACA,SAASC,OAAT,QAAwB,kCAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,EAAP;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,GAA9B,QAA0C,0BAA1C;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;IAEqBC,gB;;;;;AAGjB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AADe,UAFnBC,GAEmB,GAFb,EAEa;AAAA,UADnBC,WACmB,GADL,IACK;;AAAA,UAgBnBC,kBAhBmB,GAgBE;AAAA;AAAA;AAAA;AAAA;AAAA,oBACb,MAAKC,KAAL,CAAWC,KAAX,IAAoB,CADP;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAEP,MAAKC,cAAL,EAFO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAhBF;;AAAA,UAsBnBC,cAtBmB,GAsBF,YAAM;AACnBb,MAAAA,EAAE,CAACc,UAAH,CAAc,UAAd,EACKC,KADL,CACW,UADX,EACuB,IADvB,EAC6B,MAAKL,KAAL,CAAWM,MADxC,EAEKC,UAFL,CAEgB,UAACC,aAAD,EAAmB;AAC3BA,QAAAA,aAAa,CAACC,OAAd,CAAsB,UAACC,GAAD,EAAS;AAC3B,gBAAKC,QAAL,CAAc;AACVC,YAAAA,IAAI,EAAEF,GAAG,CAACG,IAAJ,GAAWD,IADP;AAEVE,YAAAA,KAAK,EAAEJ,GAAG,CAACG,IAAJ,GAAWC,KAFR;AAGVC,YAAAA,OAAO,EAAEL,GAAG,CAACG,IAAJ,GAAWE,OAHV;AAIVC,YAAAA,OAAO,EAAEN,GAAG,CAACG,IAAJ,GAAWG,OAJV;AAKVC,YAAAA,EAAE,EAAEP,GAAG,CAACG,IAAJ,GAAWI,EALL;AAMVC,YAAAA,KAAK,EAAER,GAAG,CAACO,EAND;AAOVE,YAAAA,KAAK,EAAE,EAPG;AAQVlB,YAAAA,KAAK,EAAES,GAAG,CAACG,IAAJ,GAAWO;AARR,WAAd;;AAUA,cAAI,MAAKpB,KAAL,CAAWqB,QAAX,CAAoBC,MAApB,IAA8B,CAAlC,EAAqC;AACjC,kBAAKC,YAAL,CAAkBb,GAAG,CAACG,IAAJ,GAAWI,EAAX,GAAgBP,GAAG,CAACG,IAAJ,GAAWC,KAA3B,GAAmCJ,GAAG,CAACG,IAAJ,GAAWE,OAAhE,EAAyE,UAACS,OAAD,EAAa;AAClF,oBAAKb,QAAL,CAAc,UAACc,aAAD,EAAmB;AAC7B,uBAAO;AACHJ,kBAAAA,QAAQ,EAAE9B,UAAU,CAACmC,MAAX,CAAkBD,aAAa,CAACJ,QAAhC,EAA0CG,OAA1C;AADP,iBAAP;AAGH,eAJD;AAKH,aAND;AAOH;AACJ,SApBD;AAqBH,OAxBL;AAyBH,KAhDkB;;AAAA,UAkDnBG,UAlDmB,GAkDN,UAACC,SAAD,EAAe;AACxB,UAAIC,UAAU,GAAGxC,QAAQ,CACpByC,OADY,GAEZC,GAFY,GAGZC,KAHY,CAGN,mBAAmBJ,SAHb,CAAjB;AAKAC,MAAAA,UAAU,CACLI,cADL,GAEKC,IAFL,CAEU,UAACC,GAAD,EAAS;AACX,cAAKxB,QAAL,CAAc;AAAEQ,UAAAA,KAAK,EAAEgB;AAAT,SAAd;AACH,OAJL,EAKKC,KALL,CAKW,UAACC,KAAD,EAAW;AACd,cAAK1B,QAAL,CAAc;AAAEQ,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH,OAPL;AAQH,KAhEkB;;AAAA,UAyEnBI,YAzEmB,GAyEJ,UAAClB,KAAD,EAAQiC,QAAR,EAAqB;AAChC,YAAKxC,WAAL,GAAmBT,QAAQ,CAACkD,QAAT,GAAoBR,GAApB,CAAwB1B,KAAK,GAAG,kBAAhC,CAAnB;;AACA,YAAKP,WAAL,CAAiB0C,GAAjB;;AACA,UAAMC,SAAS,GAAG,SAAZA,SAAY,CAAC5B,IAAD,EAAU;AACxB,YAAMW,OAAO,GAAGX,IAAI,CAAC6B,GAAL,EAAhB;AACAJ,QAAAA,QAAQ,CAAC;AACLK,UAAAA,GAAG,EAAE9B,IAAI,CAAC+B,GADL;AAELC,UAAAA,IAAI,EAAErB,OAAO,CAACqB,IAFT;AAGLC,UAAAA,SAAS,EAAE,IAAIC,IAAJ,CAASvB,OAAO,CAACsB,SAAjB,CAHN;AAILE,UAAAA,IAAI,EAAE;AACFL,YAAAA,GAAG,EAAEnB,OAAO,CAACwB,IAAR,CAAaL,GADhB;AAEF/B,YAAAA,IAAI,EAAEY,OAAO,CAACwB,IAAR,CAAapC,IAFjB;AAGFqC,YAAAA,MAAM,EAAEzB,OAAO,CAACwB,IAAR,CAAaC;AAHnB;AAJD,SAAD,CAAR;AAUH,OAZD;;AAaA,YAAKnD,WAAL,CAAiBoD,WAAjB,CAA6B,MAA7B,EAAqCC,EAArC,CAAwC,aAAxC,EAAuDV,SAAvD;AACH,KA1FkB;;AAAA,UA4FnBvC,cA5FmB,GA4FF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACP,MAAKkD,eAAL,EADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5FE;;AAAA,UAgGnBA,eAhGmB,GAgGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACR9D,EAAE,CAACc,UAAH,CAAc,UAAd,EACDM,GADC,CACG,MAAKV,KAAL,CAAWM,MADd,EAED+C,MAFC,CAEM;AACJjC,gBAAAA,KAAK,EAAE;AADH,eAFN,CADQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAhGC;;AAEf,UAAKpB,KAAL,GAAa;AACTM,MAAAA,MAAM,EAAEjB,QAAQ,CAACiE,IAAT,GAAgBC,WAAhB,CAA4BC,KAD3B;AAETtC,MAAAA,KAAK,EAAE,EAFE;AAGTG,MAAAA,QAAQ,EAAE,EAHD;AAITT,MAAAA,IAAI,EAAE,EAJG;AAKTE,MAAAA,KAAK,EAAE,EALE;AAMTC,MAAAA,OAAO,EAAE,EANA;AAOTG,MAAAA,KAAK,EAAE,EAPE;AAQTD,MAAAA,EAAE,EAAE,EARK;AASThB,MAAAA,KAAK,EAAE,EATE;AAUTkB,MAAAA,KAAK,EAAC;AAVG,KAAb;AAYA,UAAKpB,kBAAL,GAA0B,MAAKA,kBAAL,CAAwB0D,IAAxB,+BAA1B;AAde;AAelB;;;;wCAmDmB;AAChB,WAAKtD,cAAL;AACA,WAAKwB,UAAL,CAAgB,KAAK3B,KAAL,CAAWM,MAA3B;AAEH;;;8BAkCSV,K,EAAO;AACb,aAAO,oBAAC,GAAD,eAASA,KAAT;AAAgB,QAAA,SAAS,EAAE;AAAE8D,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,UAAU,EAAE,MAA7B;AAAqCC,UAAAA,QAAQ,EAAExE,OAAO,CAAC,EAAD;AAAtD,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;;gCAEWoC,O,EAAS;AACjB,WAAK,IAAIqC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrC,OAAO,CAACF,MAA5B,EAAoCuC,CAAC,EAArC,EAAyC;AACrC,aAAK/D,WAAL,CAAiBgE,IAAjB,CAAsB;AAClBjB,UAAAA,IAAI,EAAErB,OAAO,CAACqC,CAAD,CAAP,CAAWhB,IADC;AAElBG,UAAAA,IAAI,EAAExB,OAAO,CAACqC,CAAD,CAAP,CAAWb,IAFC;AAGlBF,UAAAA,SAAS,EAAEzD,QAAQ,CAACkD,QAAT,CAAkBwB,WAAlB,CAA8BC;AAHvB,SAAtB;AAKH;AACJ;;;6BAEQ;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,eAAe,EAAE;AAA5B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,eAAD;AAAiB,QAAA,MAAM,EAAEC,OAAO,oBAAhC;AAAsD,QAAA,KAAK,EAAEC,MAAM,CAACjD,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEkD,UAAAA,SAAS,EAAEjF,OAAO,CAAC,EAAD;AAApB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,yBAAhB;AAA0C,QAAA,UAAU,EAAE,KAAKQ,KAAL,CAAW0E,UAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,UAAD;AACI,QAAA,QAAQ,EAAE,KAAKtE,KAAL,CAAWqB,QADzB;AAEI,QAAA,MAAM,EAAE,kBAAOG,OAAP;AAAA;AAAA;AAAA;AAAA;AACJ,kBAAA,MAAI,CAAC+C,WAAL,CAAiB/C,OAAjB;;AADI;AAAA,mDAEE,MAAI,CAACzB,kBAAL,EAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFZ;AAMI,QAAA,IAAI,EAAE;AACF4C,UAAAA,GAAG,EAAE,KAAK3C,KAAL,CAAWM,MADd;AAEFM,UAAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWY,IAFf;AAGFqC,UAAAA,MAAM,EAAE,KAAKjD,KAAL,CAAWmB;AAHjB,SANV;AAWI,QAAA,cAAc,MAXlB;AAYI,QAAA,cAAc,EAAE,IAZpB;AAaI,QAAA,uBAAuB,EAAE,IAb7B;AAcI,QAAA,uBAAuB,EAAE;AAAA,iBACrB,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAC,YAAX;AAAwB,YAAA,IAAI,EAAC,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADqB;AAAA,SAd7B;AAiBI,QAAA,QAAQ,EAAE,IAjBd;AAkBI,QAAA,gBAAgB,EAAE,IAlBtB;AAmBI,QAAA,aAAa,EAAE;AAAEqD,UAAAA,IAAI,EAAE;AAAEd,YAAAA,KAAK,EAAE;AAAT,WAAR;AAA4Be,UAAAA,KAAK,EAAE;AAAEf,YAAAA,KAAK,EAAE;AAAT;AAAnC,SAnBnB;AAoBI,QAAA,QAAQ,EAAE,IApBd;AAqBI,QAAA,cAAc,MArBlB;AAsBI,QAAA,aAAa,EAAE,KAAKgB,aAtBxB;AAuBI,QAAA,yBAAyB,EAAE,IAvB/B;AAwBI,QAAA,SAAS,EAAE,KAAKC,SAxBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ,CADJ;AAmCH;;;;EA7JyC7F,S;;SAAzBa,gB;AAgKrB,IAAMyE,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE3F,OAAO,CAAC,EAAD,CADZ;AAEF4F,IAAAA,MAAM,EAAE5F,OAAO,CAAC,EAAD,CAFb;AAGFiF,IAAAA,SAAS,EAAEjF,OAAO,CAAC,EAAD,CAHhB;AAIF6F,IAAAA,cAAc,EAAE,QAJd;AAKFC,IAAAA,UAAU,EAAE,QALV;AAMFC,IAAAA,YAAY,EAAE/F,OAAO,CAAC,GAAD,CANnB;AAOF8E,IAAAA,eAAe,EAAE,SAPf;AAQFkB,IAAAA,WAAW,EAAE,MARX;AASFC,IAAAA,YAAY,EAAE;AACVN,MAAAA,KAAK,EAAE,CADG;AAEVC,MAAAA,MAAM,EAAE;AAFE,KATZ;AAaFM,IAAAA,aAAa,EAAE,IAbb;AAcFC,IAAAA,YAAY,EAAE,KAdZ;AAeFC,IAAAA,SAAS,EAAE,EAfT;AAgBFnB,IAAAA,SAAS,EAAEjF,OAAO,CAAC,EAAD;AAhBhB,GADuB;AAmB7BqG,EAAAA,UAAU,EAAE;AACRxB,IAAAA,IAAI,EAAE,CADE;AAERC,IAAAA,eAAe,EAAE;AAFT,GAnBiB;AAuB7BwB,EAAAA,UAAU,EAAE;AACRzB,IAAAA,IAAI,EAAE,IADE;AAERgB,IAAAA,cAAc,EAAE,QAFR;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GAvBiB;AA4B7BS,EAAAA,UAAU,EAAE;AACR/B,IAAAA,QAAQ,EAAExE,OAAO,CAAC,EAAD,CADT;AAERuE,IAAAA,UAAU,EAAE,MAFJ;AAGRD,IAAAA,KAAK,EAAE;AAHC,GA5BiB;AAiC7BkC,EAAAA,cAAc,EAAE;AACZb,IAAAA,KAAK,EAAE,KADK;AAEZC,IAAAA,MAAM,EAAE5F,OAAO,CAAC,EAAD,CAFH;AAGZiF,IAAAA,SAAS,EAAEjF,OAAO,CAAC,EAAD,CAHN;AAIZ6F,IAAAA,cAAc,EAAE,QAJJ;AAKZC,IAAAA,UAAU,EAAE,QALA;AAMZC,IAAAA,YAAY,EAAE/F,OAAO,CAAC,CAAD,CANT;AAOZ8E,IAAAA,eAAe,EAAE,SAPL;AAQZkB,IAAAA,WAAW,EAAE,MARD;AASZC,IAAAA,YAAY,EAAE;AACVN,MAAAA,KAAK,EAAE,CADG;AAEVC,MAAAA,MAAM,EAAE;AAFE,KATF;AAaZM,IAAAA,aAAa,EAAE,IAbH;AAcZC,IAAAA,YAAY,EAAE,KAdF;AAeZC,IAAAA,SAAS,EAAE,EAfC;AAgBZnB,IAAAA,SAAS,EAAEjF,OAAO,CAAC,EAAD;AAhBN,GAjCa;AAmD7ByG,EAAAA,kBAAkB,EAAE;AAChBjC,IAAAA,QAAQ,EAAExE,OAAO,CAAC,EAAD,CADD;AAEhBuE,IAAAA,UAAU,EAAE,MAFI;AAGhBD,IAAAA,KAAK,EAAE;AAHS,GAnDS;AAwD7BoC,EAAAA,KAAK,EAAE;AACHlC,IAAAA,QAAQ,EAAExE,OAAO,CAAC,EAAD,CADd;AAEHsE,IAAAA,KAAK,EAAE,SAFJ;AAGHC,IAAAA,UAAU,EAAE,MAHT;AAIHoC,IAAAA,WAAW,EAAE3G,OAAO,CAAC,EAAD,CAJjB;AAKH4G,IAAAA,UAAU,EAAE5G,OAAO,CAAC,EAAD;AALhB,GAxDsB;AA+D7BwG,EAAAA,cAAc,EAAE;AACZb,IAAAA,KAAK,EAAE,KADK;AAEZC,IAAAA,MAAM,EAAE5F,OAAO,CAAC,EAAD,CAFH;AAGZiF,IAAAA,SAAS,EAAEjF,OAAO,CAAC,EAAD,CAHN;AAIZ6F,IAAAA,cAAc,EAAE,QAJJ;AAKZC,IAAAA,UAAU,EAAE,QALA;AAMZC,IAAAA,YAAY,EAAE/F,OAAO,CAAC,CAAD,CANT;AAOZ8E,IAAAA,eAAe,EAAE,SAPL;AAQZkB,IAAAA,WAAW,EAAE,MARD;AASZC,IAAAA,YAAY,EAAE;AACVN,MAAAA,KAAK,EAAE,CADG;AAEVC,MAAAA,MAAM,EAAE;AAFE,KATF;AAaZM,IAAAA,aAAa,EAAE,IAbH;AAcZC,IAAAA,YAAY,EAAE,KAdF;AAeZC,IAAAA,SAAS,EAAE,EAfC;AAgBZnB,IAAAA,SAAS,EAAEjF,OAAO,CAAC,EAAD;AAhBN,GA/Da;AAiF7ByG,EAAAA,kBAAkB,EAAE;AAChBjC,IAAAA,QAAQ,EAAExE,OAAO,CAAC,EAAD,CADD;AAEhBuE,IAAAA,UAAU,EAAE,MAFI;AAGhBD,IAAAA,KAAK,EAAE;AAHS,GAjFS;AAsF7BuC,EAAAA,gBAAgB,EAAE;AACdrC,IAAAA,QAAQ,EAAExE,OAAO,CAAC,EAAD,CADH;AAEduE,IAAAA,UAAU,EAAE,MAFE;AAGdD,IAAAA,KAAK,EAAE,SAHO;AAIdW,IAAAA,SAAS,EAAEjF,OAAO,CAAC,EAAD;AAJJ,GAtFW;AA4F7B+B,EAAAA,KAAK,EAAE;AACH8C,IAAAA,IAAI,EAAE,CADH;AAEHiC,IAAAA,UAAU,EAAE,OAFT;AAGHjB,IAAAA,cAAc,EAAE,QAHb;AAIHK,IAAAA,aAAa,EAAE;AAJZ;AA5FsB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Text,\r\n    View,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Modal,\r\n    ScrollView,\r\n    Alert,\r\n    ImageBackground\r\n} from 'react-native';\r\nimport { Icon, Input, ListItem, Avatar } from 'react-native-elements';\r\nimport MyHeader from \"../components/MyHeader\";\r\nimport { RFValue } from 'react-native-responsive-fontsize';\r\nimport firebase from 'firebase'\r\nimport db from '../config';\r\nimport { GiftedChat, Actions, Day, } from 'react-native-gifted-chat';\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nexport default class ChatClassTeacher extends Component {\r\n    uid = '';\r\n    messagesRef = null;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userid: firebase.auth().currentUser.email,\r\n            docId: '',\r\n            messages: [],\r\n            name: '',\r\n            grade: '',\r\n            section: '',\r\n            docId: '',\r\n            id: '',\r\n            check: '',\r\n            image:'',\r\n        }\r\n        this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\r\n    }\r\n    forceUpdateHandler = async () => {\r\n        if (this.state.check == 0) {\r\n            await this.studentIdToOne();\r\n        }\r\n    }\r\n\r\n    getUserDetails = () => {\r\n        db.collection(\"students\")\r\n            .where(\"email_id\", \"==\", this.state.userid)\r\n            .onSnapshot((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    this.setState({\r\n                        name: doc.data().name,\r\n                        grade: doc.data().grade,\r\n                        section: doc.data().section,\r\n                        contact: doc.data().contact,\r\n                        id: doc.data().id,\r\n                        docId: doc.id,\r\n                        image: '',\r\n                        check: doc.data().first,\r\n                    });\r\n                    if (this.state.messages.length == 0) {\r\n                        this.loadMessages(doc.data().id + doc.data().grade + doc.data().section, (message) => {\r\n                            this.setState((previousState) => {\r\n                                return {\r\n                                    messages: GiftedChat.append(previousState.messages, message),\r\n                                };\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    fetchImage = (imageName) => {\r\n        var storageRef = firebase\r\n            .storage()\r\n            .ref()\r\n            .child(\"user_profiles/\" + imageName);\r\n\r\n        storageRef\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n                this.setState({ image: url });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({ image: \"https://firebasestorage.googleapis.com/v0/b/inbo-chat-a81c7.appspot.com/o/user_profiles%2F0c3b3adb1a7530892e55ef36d3be6cb8.png?alt=media&token=7818f4b2-e6cf-4342-8666-424c4636a430\" });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserDetails();\r\n        this.fetchImage(this.state.userid);\r\n\r\n    }\r\n\r\n\r\n    loadMessages = (where, callback) => {\r\n        this.messagesRef = firebase.database().ref(where + 'chatclassteacher');\r\n        this.messagesRef.off();\r\n        const onReceive = (data) => {\r\n            const message = data.val();\r\n            callback({\r\n                _id: data.key,\r\n                text: message.text,\r\n                createdAt: new Date(message.createdAt),\r\n                user: {\r\n                    _id: message.user._id,\r\n                    name: message.user.name,\r\n                    avatar: message.user.avatar\r\n                },\r\n            });\r\n        };\r\n        this.messagesRef.limitToLast(900000).on('child_added', onReceive);\r\n    };\r\n\r\n    studentIdToOne = async () => {\r\n        await this.studentIdToOne2()\r\n    }\r\n\r\n    studentIdToOne2 = async () => {\r\n        await db.collection('students')\r\n            .doc(this.state.userid)\r\n            .update({\r\n                first: '1'\r\n            })\r\n    }\r\n\r\n    renderDay(props) {\r\n        return <Day {...props} textStyle={{ color: '#000', fontWeight: 'bold', fontSize: RFValue(14) }} />\r\n    }\r\n\r\n    sendMessage(message) {\r\n        for (let i = 0; i < message.length; i++) {\r\n            this.messagesRef.push({\r\n                text: message[i].text,\r\n                user: message[i].user,\r\n                createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={{ flex: 1, backgroundColor: '#ffefff' }}>\r\n                <ImageBackground source={require('../assets/bg.png')} style={styles.image}>\r\n                    <View style={{ marginTop: RFValue(10) }}>\r\n                        <MyHeader title='Talk with Class Teacher' navigation={this.props.navigation} />\r\n                    </View>\r\n                    <GiftedChat\r\n                        messages={this.state.messages}\r\n                        onSend={async (message) => {\r\n                            this.sendMessage(message);\r\n                            await this.forceUpdateHandler()\r\n                        }}\r\n                        user={{\r\n                            _id: this.state.userid,\r\n                            name: this.state.name,\r\n                            avatar: this.state.image\r\n                        }}\r\n                        scrollToBottom\r\n                        alwaysShowSend={true}\r\n                        renderUsernameOnMessage={true}\r\n                        scrollToBottomComponent={() => (\r\n                            <Icon name='arrow-down' type='font-awesome-5' />\r\n                        )}\r\n                        isTyping={true}\r\n                        isLoadingEarlier={true}\r\n                        timeTextStyle={{ left: { color: 'green' }, right: { color: 'yellow' } }}\r\n                        isTyping={true}\r\n                        infiniteScroll\r\n                        renderActions={this.renderActions}\r\n                        showAvatarForEveryMessage={true}\r\n                        renderDay={this.renderDay}\r\n                    />\r\n                </ImageBackground>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    add1: {\r\n        width: RFValue(65),\r\n        height: RFValue(65),\r\n        marginTop: RFValue(20),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(100),\r\n        backgroundColor: \"#a901ff\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.44,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n        marginTop: RFValue(10),\r\n    },\r\n    scrollview: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\"\r\n    },\r\n    signupView: {\r\n        flex: 0.05,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    signupText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: \"bold\",\r\n        color: \"#32867d\"\r\n    },\r\n    registerButton: {\r\n        width: \"75%\",\r\n        height: RFValue(50),\r\n        marginTop: RFValue(20),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(3),\r\n        backgroundColor: \"#32867d\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.44,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n        marginTop: RFValue(10),\r\n    },\r\n    registerButtonText: {\r\n        fontSize: RFValue(23),\r\n        fontWeight: \"bold\",\r\n        color: \"#fff\",\r\n    },\r\n    label: {\r\n        fontSize: RFValue(17),\r\n        color: \"#717D7E\",\r\n        fontWeight: 'bold',\r\n        paddingLeft: RFValue(10),\r\n        marginLeft: RFValue(20)\r\n    },\r\n    registerButton: {\r\n        width: \"75%\",\r\n        height: RFValue(50),\r\n        marginTop: RFValue(20),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(3),\r\n        backgroundColor: \"#32867d\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.44,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n        marginTop: RFValue(10),\r\n    },\r\n    registerButtonText: {\r\n        fontSize: RFValue(23),\r\n        fontWeight: \"bold\",\r\n        color: \"#fff\",\r\n    },\r\n    cancelButtonText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: 'bold',\r\n        color: \"#32867d\",\r\n        marginTop: RFValue(10)\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        resizeMode: \"cover\",\r\n        justifyContent: \"center\",\r\n        shadowOpacity: 0.3,\r\n\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}