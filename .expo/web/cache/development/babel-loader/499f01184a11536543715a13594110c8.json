{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\91944\\\\Dropbox\\\\My PC (LAPTOP-4MDLAJMG)\\\\Desktop\\\\react_test2\\\\teacherScreens\\\\ChatClassStudent1.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Input, Icon, ListItem, Avatar } from \"react-native-elements\";\nimport MyHeader from \"../components/MyHeader\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nvar ChatClassStudent1 = function (_Component) {\n  _inherits(ChatClassStudent1, _Component);\n\n  var _super = _createSuper(ChatClassStudent1);\n\n  function ChatClassStudent1() {\n    var _this;\n\n    _classCallCheck(this, ChatClassStudent1);\n\n    _this = _super.call(this);\n\n    _this.keyExtractor = function (index) {\n      return index.toString();\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i;\n\n      if (item.first == 1) {\n        return React.createElement(ListItem, {\n          key: i,\n          title: React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              _this.props.navigation.navigate(\"ChatClassStudent2\", {\n                \"details\": item\n              });\n\n              db.collection('students').doc(item.email_id).update({\n                first: '0'\n              });\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: RFValue(20)\n            }\n          }, item.name)),\n          leftAvatar: React.createElement(Avatar, {\n            rounded: true,\n            source: {\n              uri: item.imageurl\n            },\n            size: RFValue(50)\n          }),\n          rightElement: React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              _this.props.navigation.navigate(\"ChatClassStudent2\", {\n                \"details\": item\n              });\n\n              db.collection('students').doc(item.email_id).update({\n                first: '0'\n              });\n            }\n          }, React.createElement(Icon, {\n            name: \"comments\",\n            type: \"font-awesome-5\",\n            solid: true,\n            size: RFValue(35),\n            color: 'green'\n          })),\n          bottomDivider: true\n        });\n      } else {\n        return React.createElement(ListItem, {\n          key: i,\n          title: React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              _this.props.navigation.navigate(\"ChatClassStudent2\", {\n                \"details\": item\n              });\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: RFValue(20)\n            }\n          }, item.name)),\n          rightElement: React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              _this.props.navigation.navigate(\"ChatClassStudent2\", {\n                \"details\": item\n              });\n            }\n          }, React.createElement(Icon, {\n            name: \"arrow-alt-circle-right\",\n            type: \"font-awesome-5\",\n            solid: true,\n            size: RFValue(35)\n          })),\n          leftAvatar: React.createElement(Avatar, {\n            rounded: true,\n            source: {\n              uri: item.imageurl\n            },\n            size: RFValue(50)\n          }),\n          bottomDivider: true\n        });\n      }\n    };\n\n    _this.getUserDetails = function () {\n      db.collection(\"teacher\").where(\"email_id\", \"==\", _this.state.userid).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.setState({\n            name: doc.data().name,\n            class_teacher_grade: doc.data().class_teacher_grade,\n            class_teacher_section: doc.data().class_teacher_section,\n            contact: doc.data().contact,\n            id: doc.data().id,\n            docId: doc.id\n          });\n\n          _this.getClassStudents();\n        });\n      });\n    };\n\n    _this.getClassStudents = function () {\n      var grade = _this.state.class_teacher_grade;\n      var section = _this.state.class_teacher_section;\n      _this.studentsRef = db.collection('students').where(\"grade\", \"==\", grade).where(\"section\", \"==\", section).orderBy(\"first\", \"desc\").orderBy(\"name\", \"asc\").onSnapshot(function (snapshot) {\n        var students = snapshot.docs.map(function (doc) {\n          return doc.data();\n        });\n\n        _this.setState({\n          students: students\n        });\n      });\n    };\n\n    _this.state = {\n      contact: \"\",\n      userid: firebase.auth().currentUser.email,\n      name: \"\",\n      docId: \"\",\n      class_teacher_section: '',\n      class_teacher_grade: '',\n      id: '',\n      students: []\n    };\n    return _this;\n  }\n\n  _createClass(ChatClassStudent1, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserDetails();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.students.length == 0) {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 0.12\n          }\n        }, React.createElement(MyHeader, {\n          title: \"Talk With Students\",\n          navigation: this.props.navigation\n        })), React.createElement(View, {\n          style: {\n            flex: 0.88,\n            justifyContent: 'center',\n            alignItems: 'center'\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/Notification.png\")\n        }), React.createElement(Text, {\n          style: {\n            fontSize: RFValue(23)\n          }\n        }, \"Hope! Your not class Teacher\")));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            backgroundColor: '#fff5dc'\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 0.12\n          }\n        }, React.createElement(MyHeader, {\n          title: \"Talk With Students\",\n          navigation: this.props.navigation\n        })), React.createElement(View, {\n          style: {\n            flex: 0.88\n          }\n        }, React.createElement(FlatList, {\n          keyExtractor: this.keyExtractor,\n          data: this.state.students,\n          renderItem: this.renderItem\n        })));\n      }\n    }\n  }]);\n\n  return ChatClassStudent1;\n}(Component);\n\nexport { ChatClassStudent1 as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#E5F7FE\"\n  },\n  formContainer: {\n    flex: 0.88,\n    justifyContent: 'center'\n  },\n  label: {\n    fontSize: RFValue(15),\n    color: \"#717D7E\",\n    fontWeight: 'bold',\n    padding: RFValue(10),\n    marginLeft: RFValue(20)\n  },\n  label1: {\n    fontSize: RFValue(18),\n    color: \"#a901ff\",\n    fontWeight: 'bold',\n    marginLeft: RFValue(50)\n  },\n  button: {\n    width: \"75%\",\n    height: RFValue(60),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(50),\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: RFValue(35)\n  },\n  buttonView: {\n    flex: 0.22,\n    alignItems: \"center\",\n    marginTop: RFValue(150)\n  },\n  buttonView1: {\n    flex: 0.22,\n    alignItems: \"center\",\n    marginTop: RFValue(50)\n  },\n  buttonText: {\n    fontSize: RFValue(23),\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  cancelButtonText: {\n    fontSize: RFValue(20),\n    fontWeight: 'bold',\n    color: \"#32867d\",\n    marginTop: RFValue(10),\n    textAlign: 'center'\n  },\n  scrollview: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  firstNameModal: {\n    flex: 0.5,\n    height: 150\n  },\n  logo: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: RFValue(10),\n    height: RFValue(280)\n  },\n  loginBox: {\n    width: \"80%\",\n    height: RFValue(50),\n    borderWidth: 1.5,\n    borderColor: \"#ffffff\",\n    fontSize: RFValue(20),\n    paddingLeft: RFValue(10)\n  }\n});","map":{"version":3,"sources":["C:/Users/91944/Dropbox/My PC (LAPTOP-4MDLAJMG)/Desktop/react_test2/teacherScreens/ChatClassStudent1.js"],"names":["React","Component","Input","Icon","ListItem","Avatar","MyHeader","db","firebase","RFValue","ImagePicker","ChatClassStudent1","keyExtractor","index","toString","renderItem","item","i","first","props","navigation","navigate","collection","doc","email_id","update","fontSize","name","uri","imageurl","getUserDetails","where","state","userid","onSnapshot","querySnapshot","forEach","setState","data","class_teacher_grade","class_teacher_section","contact","id","docId","getClassStudents","grade","section","studentsRef","orderBy","snapshot","students","docs","map","auth","currentUser","email","length","flex","justifyContent","alignItems","require","backgroundColor","styles","StyleSheet","create","container","formContainer","label","color","fontWeight","padding","marginLeft","label1","button","width","height","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginTop","buttonView","buttonView1","buttonText","cancelButtonText","textAlign","scrollview","firstNameModal","logo","loginBox","borderWidth","borderColor","paddingLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    Modal,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Alert,\r\n    ScrollView,\r\n    FlatList,\r\n    Image\r\n} from \"react-native\";\r\nimport { Input, Icon, ListItem, Avatar } from \"react-native-elements\";\r\nimport MyHeader from \"../components/MyHeader\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nexport default class ChatClassStudent1 extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            contact: \"\",\r\n            userid: firebase.auth().currentUser.email,\r\n            name: \"\",\r\n            docId: \"\",\r\n            class_teacher_section: '',\r\n            class_teacher_grade: '',\r\n            id: '',\r\n            students: [],\r\n        };\r\n    }\r\n\r\n    keyExtractor = (index) => index.toString()\r\n\r\n    renderItem = ({ item, i }) => {\r\n        if (item.first == 1) {\r\n            return (\r\n                <ListItem\r\n                    key={i}\r\n                    title={\r\n                        <TouchableOpacity\r\n                            onPress={() => {\r\n                                this.props.navigation.navigate(\"ChatClassStudent2\", { \"details\": item })\r\n                                db.collection('students')\r\n                                .doc(item.email_id)\r\n                                .update({\r\n                                    first: '0'\r\n                                })\r\n                            }}\r\n                        >\r\n                            <Text\r\n                                style={{\r\n                                    fontSize: RFValue(20)\r\n                                }}\r\n                            >{item.name}</Text>\r\n                        </TouchableOpacity>}\r\n                    leftAvatar={\r\n                        <Avatar rounded source={{ uri: item.imageurl }} size={RFValue(50)} />\r\n                    }\r\n                    //titleStyle={{ color: 'black', fontWeight: 'bold' }}\r\n                    rightElement={\r\n                        <TouchableOpacity\r\n                            onPress={() => {\r\n                                this.props.navigation.navigate(\"ChatClassStudent2\", { \"details\": item })\r\n                                db.collection('students')\r\n                                    .doc(item.email_id)\r\n                                    .update({\r\n                                        first: '0'\r\n                                    })\r\n                            }}\r\n                        >\r\n                            <Icon name=\"comments\" type=\"font-awesome-5\" solid={true} size={RFValue(35)} color={'green'} />\r\n                        </TouchableOpacity>\r\n                    }\r\n                    bottomDivider\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <ListItem\r\n                    key={i}\r\n                    title={\r\n                        <TouchableOpacity\r\n                            onPress={() => {\r\n                                this.props.navigation.navigate(\"ChatClassStudent2\", { \"details\": item })\r\n                            }}\r\n                        >\r\n                            <Text\r\n                                style={{\r\n                                    fontSize: RFValue(20)\r\n                                }}\r\n                            >{item.name}</Text>\r\n                        </TouchableOpacity>}\r\n                    //titleStyle={{ color: 'black', fontWeight: 'bold' }}\r\n                    rightElement={\r\n                        <TouchableOpacity\r\n                            onPress={() => {\r\n                                this.props.navigation.navigate(\"ChatClassStudent2\", { \"details\": item })\r\n                            }}\r\n                        >\r\n                            <Icon name=\"arrow-alt-circle-right\" type=\"font-awesome-5\" solid={true} size={RFValue(35)} />\r\n                        </TouchableOpacity>\r\n                    }\r\n                    leftAvatar={\r\n                        <Avatar rounded source={{ uri: item.imageurl }} size={RFValue(50)} />\r\n                    }\r\n                    bottomDivider\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    getUserDetails = () => {\r\n        db.collection(\"teacher\")\r\n            .where(\"email_id\", \"==\", this.state.userid)\r\n            .onSnapshot((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    this.setState({\r\n                        name: doc.data().name,\r\n                        class_teacher_grade: doc.data().class_teacher_grade,\r\n                        class_teacher_section: doc.data().class_teacher_section,\r\n                        contact: doc.data().contact,\r\n                        id: doc.data().id,\r\n                        docId: doc.id,\r\n                    });\r\n                    this.getClassStudents()\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserDetails()\r\n    }\r\n\r\n    getClassStudents = () => {\r\n        var grade = this.state.class_teacher_grade\r\n        var section = this.state.class_teacher_section\r\n        this.studentsRef = db.collection('students')\r\n            .where(\"grade\", \"==\", grade)\r\n            .where(\"section\", \"==\", section)\r\n            .orderBy(\"first\", \"desc\")\r\n            .orderBy(\"name\", \"asc\")\r\n            .onSnapshot((snapshot) => {\r\n                var students = snapshot.docs.map((doc) => doc.data())\r\n                this.setState({\r\n                    students: students\r\n                });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.students.length == 0) {\r\n            return (\r\n                <View style={{ flex: 1 }}>\r\n                    <View style={{ flex: 0.12 }}>\r\n                        <MyHeader title=\"Talk With Students\" navigation={this.props.navigation} />\r\n                    </View>\r\n                    <View style={{\r\n                        flex: 0.88,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                    }}>\r\n                        <Image\r\n                            source={require('../assets/Notification.png')} />\r\n                        <Text style={{ fontSize: RFValue(23) }}>Hope! Your not class Teacher</Text>\r\n                    </View>\r\n                </View>\r\n            );\r\n        } else {\r\n            return (\r\n                <View style={{ flex: 1, backgroundColor: '#fff5dc' }}>\r\n                    <View style={{ flex: 0.12 }}>\r\n                        <MyHeader title=\"Talk With Students\" navigation={this.props.navigation} />\r\n                    </View>\r\n                    <View style={{ flex: 0.88 }}>\r\n                        <FlatList\r\n                            keyExtractor={this.keyExtractor}\r\n                            data={this.state.students}\r\n                            renderItem={this.renderItem}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#E5F7FE\"\r\n    },\r\n    formContainer: {\r\n        flex: 0.88,\r\n        justifyContent: 'center',\r\n    },\r\n    label: {\r\n        fontSize: RFValue(15),\r\n        color: \"#717D7E\",\r\n        fontWeight: 'bold',\r\n        padding: RFValue(10),\r\n        marginLeft: RFValue(20)\r\n    },\r\n    label1: {\r\n        fontSize: RFValue(18),\r\n        color: \"#a901ff\",\r\n        fontWeight: 'bold',\r\n        marginLeft: RFValue(50)\r\n    },\r\n    button: {\r\n        width: \"75%\",\r\n        height: RFValue(60),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(50),\r\n        backgroundColor: \"#32867d\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.44,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n        marginTop: RFValue(35),\r\n    },\r\n    buttonView: {\r\n        flex: 0.22,\r\n        alignItems: \"center\",\r\n        marginTop: RFValue(150),\r\n    },\r\n    buttonView1: {\r\n        flex: 0.22,\r\n        alignItems: \"center\",\r\n        marginTop: RFValue(50),\r\n    },\r\n    buttonText: {\r\n        fontSize: RFValue(23),\r\n        fontWeight: \"bold\",\r\n        color: \"#fff\",\r\n    },\r\n    cancelButtonText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: 'bold',\r\n        color: \"#32867d\",\r\n        marginTop: RFValue(10),\r\n        textAlign: 'center'\r\n    },\r\n    scrollview: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\"\r\n    },\r\n    firstNameModal: {\r\n        flex: 0.5,\r\n        height: 150\r\n    },\r\n    logo: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: RFValue(10),\r\n        height: RFValue(280)\r\n    },\r\n    loginBox: {\r\n        width: \"80%\",\r\n        height: RFValue(50),\r\n        borderWidth: 1.5,\r\n        borderColor: \"#ffffff\",\r\n        fontSize: RFValue(20),\r\n        paddingLeft: RFValue(10),\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}