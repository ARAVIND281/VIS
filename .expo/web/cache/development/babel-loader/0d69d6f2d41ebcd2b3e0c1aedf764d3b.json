{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\91944\\\\Dropbox\\\\My PC (LAPTOP-4MDLAJMG)\\\\Desktop\\\\react_test2\\\\studentScreens\\\\parentScreen1.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport MyHeader from \"../components/MyHeader\";\nimport { Header, Icon, ButtonGroup, Input, Overlay, Button } from \"react-native-elements\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\n\nvar parentScreen1 = function (_Component) {\n  _inherits(parentScreen1, _Component);\n\n  var _super = _createSuper(parentScreen1);\n\n  function parentScreen1() {\n    var _this;\n\n    _classCallCheck(this, parentScreen1);\n\n    _this = _super.call(this);\n\n    _this.sendReport = function () {\n      if (_this.state.view == 'academic/teaching') {\n        db.collection('parentFeedback').add({\n          Problem: 'academic/teaching',\n          subject: _this.state.academicProblem2,\n          TeacherName: _this.state.subject,\n          Description: _this.state.description,\n          studentName: _this.state.name,\n          studentGrade: _this.state.grade + ' ' + _this.state.section,\n          studentContact: _this.state.contact,\n          read: 'unread',\n          refDate: new Date().getDate() + '/' + (new Date().getMonth() + 1) + '/' + new Date().getFullYear(),\n          date: firebase.firestore.FieldValue.serverTimestamp()\n        });\n      }\n\n      if (_this.state.view == 'academic/HomeWork') {\n        db.collection('parentFeedback').add({\n          Problem: 'academic/HomeWork',\n          subject: _this.state.hwProblem1,\n          hwproblem: _this.state.hwProblem2,\n          studentName: _this.state.name,\n          studentGrade: _this.state.grade + ' ' + _this.state.section,\n          studentContact: _this.state.contact,\n          read: 'unread',\n          refDate: new Date().getDate() + '/' + (new Date().getMonth() + 1) + '/' + new Date().getFullYear(),\n          date: firebase.firestore.FieldValue.serverTimestamp()\n        });\n      }\n\n      if (_this.state.view == 'academic/other') {\n        db.collection('parentFeedback').add({\n          Problem: 'academic/other',\n          subject: _this.state.subject,\n          description: _this.state.description,\n          studentName: _this.state.name,\n          studentGrade: _this.state.grade + ' ' + _this.state.section,\n          studentContact: _this.state.contact,\n          read: 'unread',\n          refDate: new Date().getDate() + '/' + (new Date().getMonth() + 1) + '/' + new Date().getFullYear(),\n          date: firebase.firestore.FieldValue.serverTimestamp()\n        });\n      }\n    };\n\n    _this.getUserDetails = function () {\n      db.collection(\"students\").where(\"email_id\", \"==\", _this.state.userid).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.setState({\n            name: doc.data().name,\n            grade: doc.data().grade,\n            section: doc.data().section,\n            contact: doc.data().contact,\n            id: doc.data().id,\n            docId: doc.id,\n            password: doc.data().password\n          });\n        });\n      });\n    };\n\n    _this.updateIndex1 = function (selectedIndex1) {\n      _this.setState({\n        selectedIndex1: selectedIndex1\n      });\n\n      if (selectedIndex1 == 0) {\n        _this.setState({\n          problem1: 'Academic'\n        });\n      }\n\n      if (selectedIndex1 == 1) {\n        _this.setState({\n          problem1: 'Facility'\n        });\n      }\n    };\n\n    _this.academicProblem1 = function () {\n      if (_this.state.academicProblem1 == 'Teaching') {\n        return React.createElement(View, {\n          style: {\n            marginLeft: RFValue(20)\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: styles.Picker,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }\n        }, React.createElement(Picker, {\n          selectedValue: _this.state.academicProblem2,\n          style: {\n            height: RFValue(50),\n            width: RFValue(250)\n          },\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            _this.setState({\n              academicProblem2: itemValue\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }\n        }, React.createElement(Picker.Item, {\n          label: \"SELECT SUBJECT\",\n          value: \"SELECT PROBLEM\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Science\",\n          value: \"Science\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Maths\",\n          value: \"Maths\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"SST\",\n          value: \"SST\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"English\",\n          value: \"English\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"2L\",\n          value: \"2L\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"CS\",\n          value: \"CS\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }\n        }))), _this.state.academicProblem2 == null ? React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }\n        }) : React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }\n        }, React.createElement(View, {\n          style: {\n            marginLeft: RFValue(20)\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }\n        }, React.createElement(Input, {\n          style: styles.formTextInput,\n          label: \"Teacher Name\",\n          placeholder: \"Teacher Name\",\n          containerStyle: {\n            marginTop: RFValue(30)\n          },\n          onChangeText: function onChangeText(text) {\n            return _this.setState({\n              subject: text\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 37\n          }\n        }), React.createElement(Input, {\n          style: styles.formTextInput,\n          multiline: true,\n          label: \"Description\",\n          placeholder: \"Description\",\n          containerStyle: {\n            marginTop: RFValue(30)\n          },\n          onChangeText: function onChangeText(text) {\n            return _this.setState({\n              description: text\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 37\n          }\n        })), React.createElement(View, {\n          style: {\n            alignItems: 'center'\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 33\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.registerButton,\n          onPress: function onPress() {\n            _this.setState({\n              academicTeachingVisible: true,\n              view: 'academic/teaching'\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          style: styles.registerButtonText,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 41\n          }\n        }, \"SUBMIT\")))));\n      }\n\n      if (_this.state.academicProblem1 == 'Home Work') {\n        return React.createElement(View, {\n          style: {\n            marginLeft: RFValue(20)\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: styles.Picker,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }\n        }, React.createElement(Picker, {\n          selectedValue: _this.state.hwProblem1,\n          style: {\n            height: RFValue(50),\n            width: RFValue(250)\n          },\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            _this.setState({\n              hwProblem1: itemValue\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }\n        }, React.createElement(Picker.Item, {\n          label: \"SELECT SUBJECT\",\n          value: \"SELECT SUBJECT\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Science\",\n          value: \"Science\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Maths\",\n          value: \"Maths\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"SST\",\n          value: \"SST\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"English\",\n          value: \"English\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"2L\",\n          value: \"2L\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"CS\",\n          value: \"CS\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }\n        }))), _this.state.hwProblem1 == null ? React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 55\n          }\n        }) : React.createElement(View, {\n          style: {\n            marginLeft: RFValue(20)\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }\n        }, React.createElement(View, {\n          style: styles.Picker,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }\n        }, React.createElement(Picker, {\n          selectedValue: _this.state.hwProblem2,\n          style: {\n            height: RFValue(50),\n            width: RFValue(250)\n          },\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            _this.setState({\n              hwProblem2: itemValue\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 37\n          }\n        }, React.createElement(Picker.Item, {\n          label: \"SELECT PROBLEM\",\n          value: \"SELECT PROBLEM\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 41\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Lot of H/W\",\n          value: \"Lot of H/W\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 41\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Not completing H/W\",\n          value: \"Not completing H/W\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 41\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Not Correcting Homework\",\n          value: \"Not Correcting Homework\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 41\n          }\n        }))), React.createElement(View, {\n          style: {\n            alignItems: 'center'\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 33\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.registerButton,\n          onPress: function onPress() {\n            _this.setState({\n              academicTeachingVisible: true,\n              view: 'academic/HomeWork'\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          style: styles.registerButtonText,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 41\n          }\n        }, \"SUBMIT\")))));\n      }\n\n      if (_this.state.academicProblem1 == 'Other') {\n        return React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }\n        }, React.createElement(Input, {\n          style: styles.formTextInput,\n          label: \"Subject\",\n          placeholder: \"Subject\",\n          containerStyle: {\n            marginTop: RFValue(30)\n          },\n          onChangeText: function onChangeText(text) {\n            return _this.setState({\n              subject: text\n            });\n          },\n          value: _this.state.subject,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }\n        }), React.createElement(Input, {\n          style: [styles.formTextInput, {\n            height: RFValue(200)\n          }],\n          multiline: true,\n          numberOfLines: 8,\n          label: \"Description\",\n          placeholder: \"Description\",\n          onChangeText: function onChangeText(text) {\n            _this.setState({\n              description: text\n            });\n          },\n          value: _this.state.description,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 21\n          }\n        }), React.createElement(View, {\n          style: {\n            alignItems: 'center'\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 21\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.registerButton,\n          onPress: function onPress() {\n            _this.setState({\n              academicTeachingVisible: true,\n              view: 'academic/other'\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: styles.registerButtonText,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }\n        }, \"SUBMIT\"))));\n      }\n    };\n\n    _this.problem1 = function () {\n      if (_this.state.problem1 == 'Academic') {\n        return React.createElement(ScrollView, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: styles.Picker,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 21\n          }\n        }, React.createElement(Picker, {\n          selectedValue: _this.state.academicProblem1,\n          style: {\n            height: RFValue(50),\n            width: RFValue(250)\n          },\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            _this.setState({\n              academicProblem1: itemValue\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }\n        }, React.createElement(Picker.Item, {\n          label: \"SELECT PROBLEM\",\n          value: \"SELECT PROBLEM\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Teaching\",\n          value: \"Teaching\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Home Work\",\n          value: \"Home Work\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Other\",\n          value: \"Other\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }\n        }))), React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 21\n          }\n        }, _this.academicProblem1()));\n      }\n\n      if (_this.state.problem1 == 'Facility') {\n        return React.createElement(ScrollView, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: styles.Picker,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 21\n          }\n        }, React.createElement(Picker, {\n          selectedValue: _this.state.facilityProblem1,\n          style: {\n            height: RFValue(50),\n            width: RFValue(250)\n          },\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            _this.setState({\n              facilityProblem1: itemValue\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }\n        }, React.createElement(Picker.Item, {\n          label: \"SELECT PROBLEM\",\n          value: \"SELECT PROBLEM\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Transport\",\n          value: \"Transport\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Food\",\n          value: \"Food\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 29\n          }\n        }))), React.createElement(View, {\n          style: {\n            alignItems: 'flex-start',\n            marginLeft: RFValue(40),\n            marginTop: RFValue(20),\n            fontSize: RFValue(15)\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }\n        }, \"Due COVID-19 lockdown the Facility are not working so you can't Report Problem in Facility\")), React.createElement(View, {\n          style: {\n            alignItems: 'center',\n            marginTop: RFValue(50)\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 21\n          }\n        }, React.createElement(Button, {\n          title: \"Reset    \",\n          type: \"outline\",\n          buttonStyle: {\n            width: '40%'\n          },\n          titleStyle: {\n            textAlign: 'center'\n          },\n          onPress: function onPress() {\n            _this.setState({\n              problem1: null,\n              selectedIndex1: null\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }\n        })));\n      }\n\n      if (_this.state.problem1 == null) {\n        return React.createElement(ScrollView, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: {\n            alignItems: 'center',\n            marginTop: RFValue(20)\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 21\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            backgroundColor: 'red',\n            borderRadius: RFValue(10)\n          },\n          onPress: function onPress() {\n            _this.setState({\n              visible: true\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: RFValue(20),\n            marginLeft: RFValue(10),\n            fontWeight: 'bold',\n            marginRight: RFValue(10)\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 29\n          }\n        }, \"Parent Password Reset\"))));\n      }\n    };\n\n    _this.state = {\n      contact: \"\",\n      docId: \"\",\n      userid: firebase.auth().currentUser.email,\n      name: \"\",\n      section: '',\n      grade: '',\n      id: '',\n      selectedIndex1: null,\n      problem1: null,\n      academicProblem1: null,\n      description: null,\n      subject: null,\n      password: null,\n      visible: false,\n      visible2: false,\n      oldPassword: '',\n      newPassword: '',\n      newPassword1: '',\n      facilityProblem1: \"null\",\n      academicProblem2: null,\n      academicTeachingVisible: false,\n      hwProblem1: null,\n      hwProblem2: null\n    };\n    return _this;\n  }\n\n  _createClass(parentScreen1, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserDetails();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1.12,\n          backgroundColor: '#ffefff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }\n      }, React.createElement(Header, {\n        leftComponent: React.createElement(Icon, {\n          name: \"sign-out-alt\",\n          type: \"font-awesome-5\",\n          color: \"#fff\",\n          solid: false,\n          size: RFValue(40),\n          onPress: function onPress() {\n            _this2.props.navigation.navigate(\"parentScreen\");\n\n            ToastAndroid.showWithGravityAndOffset(\"Sign out Successfully\", ToastAndroid.LONG, ToastAndroid.BOTTOM, 25, 50);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 44\n          }\n        }),\n        centerComponent: {\n          text: 'Parent Corner',\n          style: {\n            color: '#fff',\n            fontSize: 20,\n            fontWeight: \"bold\"\n          }\n        },\n        rightComponent: React.createElement(Image, {\n          source: require(\"../assets/logo.png\"),\n          style: {\n            width: '92%',\n            height: '100%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 45\n          }\n        }),\n        backgroundColor: \"#1338BF\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 0.08\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: RFValue(17),\n          marginLeft: RFValue(10),\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 25\n        }\n      }, \"Report a Problem\"), React.createElement(ButtonGroup, {\n        onPress: this.updateIndex1,\n        selectedIndex: this.state.selectedIndex1,\n        buttons: ['Academic', 'Facility'],\n        containerStyle: {\n          height: RFValue(50),\n          borderRadius: RFValue(10)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 0.8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 21\n        }\n      }, this.problem1(), React.createElement(Overlay, {\n        isVisible: this.state.visible,\n        overlayStyle: {\n          width: '80%',\n          marginTop: RFValue(20),\n          marginBottom: RFValue(20)\n        },\n        onBackdropPress: function onBackdropPress() {\n          _this2.setState({\n            visible: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          marginTop: RFValue(15),\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 33\n        }\n      }, \"Reset Password \"), React.createElement(View, {\n        style: {\n          marginTop: RFValue(20)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 33\n        }\n      }), React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'Old Password',\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            oldPassword: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"key\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 41\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 33\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.registerButton,\n        onPress: function onPress() {\n          if (_this2.state.oldPassword == _this2.state.password) {\n            _this2.setState({\n              visible: false,\n              visible2: true\n            });\n          }\n\n          if (_this2.state.oldPassword.length == 0) {\n            Alert.alert(\"Invalid password\", \"Please Enter Passward\", [{\n              text: \"Forgot Password\",\n              onPress: function onPress() {\n                Alert.alert(\"Forgot Password\", \"For Recovery Password Call School\", [{\n                  text: \"Call\",\n                  onPress: function onPress() {\n                    Linking.openURL(\"tel:\" + 9384507030);\n                  }\n                }, {\n                  text: \"Cancel\"\n                }]);\n              }\n            }, {\n              text: \"OK\"\n            }]);\n            Vibration.vibrate();\n          }\n\n          if (_this2.state.oldPassword != _this2.state.password) {\n            Alert.alert(\"Invalid password\", \"Please Enter valid Passward\", [{\n              text: \"Forgot Password\",\n              onPress: function onPress() {\n                Alert.alert(\"Forgot Password\", \"For Recovery Password Call School\", [{\n                  text: \"Call\",\n                  onPress: function onPress() {\n                    Linking.openURL(\"tel:\" + 9384507030);\n                  }\n                }, {\n                  text: \"Cancel\"\n                }]);\n              }\n            }, {\n              text: \"OK\"\n            }]);\n            Vibration.vibrate();\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.registerButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 37\n        }\n      }, \"NEXT\")))), React.createElement(Overlay, {\n        isVisible: this.state.visible2,\n        overlayStyle: {\n          width: '80%',\n          marginTop: RFValue(20),\n          marginBottom: RFValue(20)\n        },\n        onBackdropPress: function onBackdropPress() {\n          _this2.setState({\n            visible2: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          marginTop: RFValue(15),\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 33\n        }\n      }, \"Reset Password \"), React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'Password',\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            newPassword: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"user-lock\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 41\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 33\n        }\n      }), React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'Confrim Password',\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            newPassword1: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"user-lock\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 41\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 33\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.registerButton,\n        onPress: function onPress() {\n          if (_this2.state.newPassword.length == 0) {\n            Alert.alert(\"Invalid New Password\", \"Please Enter Passward\", [{\n              text: \"Ok\"\n            }]);\n            Vibration.vibrate();\n          }\n\n          if (_this2.state.newPassword != _this2.state.newPassword1) {\n            Alert.alert(\"Invalid New Password\", \"password doesn't match\\nCheck your password.\", [{\n              text: \"Ok\"\n            }]);\n            Vibration.vibrate();\n          }\n\n          if (_this2.state.newPassword == _this2.state.newPassword1) {\n            db.collection('students').doc(_this2.state.userid).update({\n              password: _this2.state.newPassword\n            });\n            ToastAndroid.showWithGravityAndOffset(\"Password updated Successfully\", ToastAndroid.LONG, ToastAndroid.BOTTOM, 25, 50);\n\n            _this2.setState({\n              visible2: false,\n              oldPassword: '',\n              newPassword1: '',\n              newPassword: ''\n            });\n\n            _this2.props.navigation.navigate(\"parentScreen\");\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.registerButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 37\n        }\n      }, \"Reset Password\"))))), React.createElement(Overlay, {\n        isVisible: this.state.academicTeachingVisible,\n        overlayStyle: {\n          width: '80%',\n          marginTop: RFValue(20),\n          marginBottom: RFValue(20)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 29\n        }\n      }, \"Are you will to submit the Report will send to administrator\"), React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 29\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.registerButton,\n        onPress: function onPress() {\n          _this2.sendReport();\n\n          ToastAndroid.showWithGravityAndOffset(\"Successfully Problem Reported\", ToastAndroid.LONG, ToastAndroid.BOTTOM, 25, 50);\n\n          _this2.setState({\n            academicTeachingVisible: false,\n            selectedIndex1: null,\n            problem1: null,\n            academicProblem1: null,\n            description: null,\n            subject: null,\n            facilityProblem1: null,\n            academicProblem2: null\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.registerButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 37\n        }\n      }, \"SUBMIT\")), React.createElement(Text, {\n        style: styles.cancelButtonText,\n        onPress: function onPress() {\n          _this2.setState({\n            academicTeachingVisible: false,\n            selectedIndex1: null,\n            problem1: null,\n            academicProblem1: null,\n            description: null,\n            subject: null,\n            facilityProblem1: null,\n            academicProblem2: null\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 33\n        }\n      }, \"Cancel\"))))));\n    }\n  }]);\n\n  return parentScreen1;\n}(Component);\n\nexport { parentScreen1 as default };\nvar styles = StyleSheet.create({\n  Picker: {\n    backgroundColor: '#fff',\n    marginTop: RFValue(10),\n    height: RFValue(50),\n    width: RFValue(250),\n    borderRadius: RFValue(10),\n    marginLeft: RFValue(20)\n  },\n  registerButton: {\n    width: \"75%\",\n    height: RFValue(50),\n    marginTop: RFValue(20),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(3),\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: RFValue(10)\n  },\n  registerButtonText: {\n    fontSize: RFValue(20),\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  label: {\n    fontSize: RFValue(20),\n    fontWeight: \"bold\",\n    color: \"#32867d\"\n  },\n  formTextInput: {\n    width: \"75%\",\n    height: RFValue(45),\n    borderWidth: 1,\n    padding: 10\n  },\n  cancelButtonText: {\n    fontSize: RFValue(20),\n    fontWeight: 'bold',\n    color: \"#32867d\",\n    marginTop: RFValue(10)\n  }\n});","map":{"version":3,"sources":["C:/Users/91944/Dropbox/My PC (LAPTOP-4MDLAJMG)/Desktop/react_test2/studentScreens/parentScreen1.js"],"names":["React","Component","RFValue","MyHeader","Header","Icon","ButtonGroup","Input","Overlay","Button","db","firebase","parentScreen1","sendReport","state","view","collection","add","Problem","subject","academicProblem2","TeacherName","Description","description","studentName","name","studentGrade","grade","section","studentContact","contact","read","refDate","Date","getDate","getMonth","getFullYear","date","firestore","FieldValue","serverTimestamp","hwProblem1","hwproblem","hwProblem2","getUserDetails","where","userid","onSnapshot","querySnapshot","forEach","doc","setState","data","id","docId","password","updateIndex1","selectedIndex1","problem1","academicProblem1","marginLeft","styles","Picker","height","width","itemValue","itemIndex","formTextInput","marginTop","text","alignItems","registerButton","academicTeachingVisible","registerButtonText","facilityProblem1","fontSize","textAlign","backgroundColor","borderRadius","visible","fontWeight","marginRight","auth","currentUser","email","visible2","oldPassword","newPassword","newPassword1","flex","props","navigation","navigate","ToastAndroid","showWithGravityAndOffset","LONG","BOTTOM","style","color","require","marginBottom","label","loginBox","length","Alert","alert","onPress","Linking","openURL","Vibration","vibrate","update","cancelButtonText","StyleSheet","create","justifyContent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderWidth","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Alert,\r\n    Image,\r\n    ScrollView,\r\n    Modal,\r\n    Picker,\r\n    Vibration,\r\n    ToastAndroid,\r\n    Linking\r\n} from \"react-native\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport MyHeader from \"../components/MyHeader\";\r\nimport { Header, Icon, ButtonGroup, Input, Overlay, Button } from \"react-native-elements\"\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\n\r\nexport default class parentScreen1 extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            contact: \"\",\r\n            docId: \"\",\r\n            userid: firebase.auth().currentUser.email,\r\n            name: \"\",\r\n            section: '',\r\n            grade: '',\r\n            id: '',\r\n            selectedIndex1: null,\r\n            problem1: null,\r\n            academicProblem1: null,\r\n            description: null,\r\n            subject: null,\r\n            password: null,\r\n            visible: false,\r\n            visible2: false,\r\n            oldPassword: '',\r\n            newPassword: '',\r\n            newPassword1: '',\r\n            facilityProblem1: \"null\",\r\n            academicProblem2: null,\r\n            academicTeachingVisible: false,\r\n            hwProblem1: null,\r\n            hwProblem2: null,\r\n        };\r\n    }\r\n\r\n    sendReport = () => {\r\n        if (this.state.view == 'academic/teaching') {\r\n            db.collection('parentFeedback')\r\n                .add({\r\n                    Problem: 'academic/teaching',\r\n                    subject: this.state.academicProblem2,\r\n                    TeacherName: this.state.subject,\r\n                    Description: this.state.description,\r\n                    studentName: this.state.name,\r\n                    studentGrade: this.state.grade + ' ' + this.state.section,\r\n                    studentContact: this.state.contact,\r\n                    read: 'unread',\r\n                    refDate: new Date().getDate() + '/' + (new Date().getMonth() + 1) + '/' + new Date().getFullYear(),\r\n                    date: firebase.firestore.FieldValue.serverTimestamp(),\r\n                })\r\n        }\r\n        if (this.state.view == 'academic/HomeWork') {\r\n            db.collection('parentFeedback')\r\n                .add({\r\n                    Problem: 'academic/HomeWork',\r\n                    subject: this.state.hwProblem1,\r\n                    hwproblem: this.state.hwProblem2,\r\n                    studentName: this.state.name,\r\n                    studentGrade: this.state.grade + ' ' + this.state.section,\r\n                    studentContact: this.state.contact,\r\n                    read: 'unread',\r\n                    refDate: new Date().getDate() + '/' + (new Date().getMonth() + 1) + '/' + new Date().getFullYear(),\r\n                    date: firebase.firestore.FieldValue.serverTimestamp(),\r\n                })\r\n        }\r\n        if (this.state.view == 'academic/other') {\r\n            db.collection('parentFeedback')\r\n                .add({\r\n                    Problem: 'academic/other',\r\n                    subject: this.state.subject,\r\n                    description: this.state.description,\r\n                    studentName: this.state.name,\r\n                    studentGrade: this.state.grade + ' ' + this.state.section,\r\n                    studentContact: this.state.contact,\r\n                    read: 'unread',\r\n                    refDate: new Date().getDate() + '/' + (new Date().getMonth() + 1) + '/' + new Date().getFullYear(),\r\n                    date: firebase.firestore.FieldValue.serverTimestamp(),\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    getUserDetails = () => {\r\n        db.collection(\"students\")\r\n            .where(\"email_id\", \"==\", this.state.userid)\r\n            .onSnapshot((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    this.setState({\r\n                        name: doc.data().name,\r\n                        grade: doc.data().grade,\r\n                        section: doc.data().section,\r\n                        contact: doc.data().contact,\r\n                        id: doc.data().id,\r\n                        docId: doc.id,\r\n                        password: doc.data().password,\r\n                    });\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserDetails();\r\n    }\r\n\r\n    updateIndex1 = (selectedIndex1) => {\r\n        this.setState({ selectedIndex1 })\r\n        if (selectedIndex1 == 0) {\r\n            this.setState({\r\n                problem1: 'Academic',\r\n            })\r\n        }\r\n        if (selectedIndex1 == 1) {\r\n            this.setState({\r\n                problem1: 'Facility',\r\n            })\r\n        }\r\n    }\r\n    academicProblem1 = () => {\r\n        if (this.state.academicProblem1 == 'Teaching') {\r\n            return (\r\n                <View style={{ marginLeft: RFValue(20) }}>\r\n                    <View style={styles.Picker}>\r\n                        <Picker\r\n                            selectedValue={this.state.academicProblem2}\r\n                            style={{ height: RFValue(50), width: RFValue(250) }}\r\n                            onValueChange={(itemValue, itemIndex) => { this.setState({ academicProblem2: itemValue }) }}\r\n                        >\r\n                            <Picker.Item label=\"SELECT SUBJECT\" value=\"SELECT PROBLEM\" />\r\n                            <Picker.Item label=\"Science\" value=\"Science\" />\r\n                            <Picker.Item label=\"Maths\" value=\"Maths\" />\r\n                            <Picker.Item label=\"SST\" value=\"SST\" />\r\n                            <Picker.Item label=\"English\" value=\"English\" />\r\n                            <Picker.Item label=\"2L\" value=\"2L\" />\r\n                            <Picker.Item label=\"CS\" value=\"CS\" />\r\n                        </Picker>\r\n                    </View>\r\n                    {this.state.academicProblem2 == null ? (\r\n                        <View></View>\r\n                    ) : (\r\n                            <View>\r\n                                <View style={{ marginLeft: RFValue(20) }}>\r\n                                    <Input\r\n                                        style={styles.formTextInput}\r\n                                        label={\"Teacher Name\"}\r\n                                        placeholder={\"Teacher Name\"}\r\n                                        containerStyle={{ marginTop: RFValue(30) }}\r\n                                        onChangeText={(text) => this.setState({\r\n                                            subject: text\r\n                                        })}\r\n                                    />\r\n                                    <Input\r\n                                        style={styles.formTextInput}\r\n                                        multiline\r\n                                        label={\"Description\"}\r\n                                        placeholder={\"Description\"}\r\n                                        containerStyle={{ marginTop: RFValue(30) }}\r\n                                        onChangeText={(text) => this.setState({\r\n                                            description: text\r\n                                        })}\r\n                                    />\r\n                                </View>\r\n                                <View style={{ alignItems: 'center' }}>\r\n                                    <TouchableOpacity style={styles.registerButton} onPress={() => {\r\n                                        this.setState({\r\n                                            academicTeachingVisible: true,\r\n                                            view: 'academic/teaching'\r\n                                        })\r\n                                    }}>\r\n                                        <Text style={styles.registerButtonText}>SUBMIT</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </View>\r\n                        )\r\n\r\n                    }\r\n                </View>\r\n            );\r\n        }\r\n        if (this.state.academicProblem1 == 'Home Work') {\r\n            return (\r\n                <View style={{ marginLeft: RFValue(20) }}>\r\n                    <View style={styles.Picker}>\r\n                        <Picker\r\n                            selectedValue={this.state.hwProblem1}\r\n                            style={{ height: RFValue(50), width: RFValue(250) }}\r\n                            onValueChange={(itemValue, itemIndex) => { this.setState({ hwProblem1: itemValue }) }}\r\n                        >\r\n                            <Picker.Item label=\"SELECT SUBJECT\" value=\"SELECT SUBJECT\" />\r\n                            <Picker.Item label=\"Science\" value=\"Science\" />\r\n                            <Picker.Item label=\"Maths\" value=\"Maths\" />\r\n                            <Picker.Item label=\"SST\" value=\"SST\" />\r\n                            <Picker.Item label=\"English\" value=\"English\" />\r\n                            <Picker.Item label=\"2L\" value=\"2L\" />\r\n                            <Picker.Item label=\"CS\" value=\"CS\" />\r\n                        </Picker>\r\n                    </View>\r\n                    {this.state.hwProblem1 == null ? (<View></View>)\r\n                        : (\r\n                            <View style={{ marginLeft: RFValue(20) }}>\r\n                                <View style={styles.Picker}>\r\n                                    <Picker\r\n                                        selectedValue={this.state.hwProblem2}\r\n                                        style={{ height: RFValue(50), width: RFValue(250) }}\r\n                                        onValueChange={(itemValue, itemIndex) => { this.setState({ hwProblem2: itemValue }) }}\r\n                                    >\r\n                                        <Picker.Item label=\"SELECT PROBLEM\" value=\"SELECT PROBLEM\" />\r\n                                        <Picker.Item label=\"Lot of H/W\" value=\"Lot of H/W\" />\r\n                                        <Picker.Item label=\"Not completing H/W\" value=\"Not completing H/W\" />\r\n                                        <Picker.Item label=\"Not Correcting Homework\" value=\"Not Correcting Homework\" />\r\n                                    </Picker>\r\n                                </View>\r\n                                <View style={{ alignItems: 'center' }}>\r\n                                    <TouchableOpacity style={styles.registerButton} onPress={() => {\r\n                                        this.setState({\r\n                                            academicTeachingVisible: true,\r\n                                            view: 'academic/HomeWork'\r\n                                        })\r\n                                    }}>\r\n                                        <Text style={styles.registerButtonText}>SUBMIT</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </View>\r\n                        )}\r\n                </View>\r\n            );\r\n        }\r\n        if (this.state.academicProblem1 == 'Other') {\r\n            return (\r\n                <View>\r\n                    <Input\r\n                        style={styles.formTextInput}\r\n                        label={\"Subject\"}\r\n                        placeholder={\"Subject\"}\r\n                        containerStyle={{ marginTop: RFValue(30) }}\r\n                        onChangeText={(text) => this.setState({\r\n                            subject: text\r\n                        })}\r\n                        value={this.state.subject}\r\n                    />\r\n\r\n                    <Input\r\n                        style={[styles.formTextInput, { height: RFValue(200) }]}\r\n                        multiline\r\n                        numberOfLines={8}\r\n                        label={\"Description\"}\r\n                        placeholder={\"Description\"}\r\n                        onChangeText={(text) => {\r\n                            this.setState({\r\n                                description: text,\r\n                            });\r\n                        }}\r\n                        value={this.state.description}\r\n                    />\r\n                    <View style={{ alignItems: 'center' }}>\r\n                        <TouchableOpacity style={styles.registerButton} onPress={() => {\r\n                            this.setState({\r\n                                academicTeachingVisible: true,\r\n                                view: 'academic/other'\r\n                            })\r\n                        }}>\r\n                            <Text style={styles.registerButtonText}>SUBMIT</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            );\r\n        }\r\n    }\r\n    problem1 = () => {\r\n        if (this.state.problem1 == 'Academic') {\r\n            return (\r\n                <ScrollView>\r\n                    <View style={styles.Picker}>\r\n                        <Picker\r\n                            selectedValue={this.state.academicProblem1}\r\n                            style={{ height: RFValue(50), width: RFValue(250) }}\r\n                            onValueChange={(itemValue, itemIndex) => { this.setState({ academicProblem1: itemValue }) }}\r\n                        >\r\n                            <Picker.Item label=\"SELECT PROBLEM\" value=\"SELECT PROBLEM\" />\r\n                            <Picker.Item label=\"Teaching\" value=\"Teaching\" />\r\n                            <Picker.Item label=\"Home Work\" value=\"Home Work\" />\r\n                            <Picker.Item label=\"Other\" value=\"Other\" />\r\n                        </Picker>\r\n                    </View>\r\n                    <View>\r\n                        {this.academicProblem1()}\r\n                    </View>\r\n                </ScrollView>\r\n            );\r\n        }\r\n        if (this.state.problem1 == 'Facility') {\r\n            return (\r\n                <ScrollView>\r\n                    <View style={styles.Picker}>\r\n                        <Picker\r\n                            selectedValue={this.state.facilityProblem1}\r\n                            style={{ height: RFValue(50), width: RFValue(250) }}\r\n                            onValueChange={(itemValue, itemIndex) => { this.setState({ facilityProblem1: itemValue }) }}\r\n                        >\r\n                            <Picker.Item label=\"SELECT PROBLEM\" value=\"SELECT PROBLEM\" />\r\n                            <Picker.Item label=\"Transport\" value=\"Transport\" />\r\n                            <Picker.Item label=\"Food\" value=\"Food\" />\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={{ alignItems: 'flex-start', marginLeft: RFValue(40), marginTop: RFValue(20), fontSize: RFValue(15) }}>\r\n                        <Text>Due COVID-19 lockdown the Facility are not working so you can't Report Problem in Facility</Text>\r\n                    </View>\r\n                    <View style={{ alignItems: 'center', marginTop: RFValue(50) }}>\r\n                        <Button\r\n                            title=\"Reset    \"\r\n                            type=\"outline\"\r\n                            buttonStyle={{ width: '40%' }}\r\n                            titleStyle={{ textAlign: 'center' }}\r\n                            onPress={() => {\r\n                                this.setState({\r\n                                    problem1: null,\r\n                                    selectedIndex1: null\r\n                                })\r\n                            }}\r\n                        />\r\n                    </View>\r\n                </ScrollView>\r\n            );\r\n        }\r\n        if (this.state.problem1 == null) {\r\n            return (\r\n                <ScrollView>\r\n                    <View style={{ alignItems: 'center', marginTop: RFValue(20) }}>\r\n                        <TouchableOpacity\r\n                            style={{ backgroundColor: 'red', borderRadius: RFValue(10) }}\r\n                            onPress={() => {\r\n                                this.setState({\r\n                                    visible: true\r\n                                })\r\n                            }}>\r\n                            <Text style={{ fontSize: RFValue(20), marginLeft: RFValue(10), fontWeight: 'bold', marginRight: RFValue(10) }}>Parent Password Reset</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </ScrollView>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={{ flex: 1.12, backgroundColor: '#ffefff' }}>\r\n                <ScrollView>\r\n                    <View>\r\n                        <Header\r\n                            leftComponent={<Icon name='sign-out-alt' type='font-awesome-5' color='#fff' solid={false} size={RFValue(40)} onPress={() => {\r\n                                this.props.navigation.navigate(\"parentScreen\")\r\n                                ToastAndroid.showWithGravityAndOffset(\r\n                                    \"Sign out Successfully\",\r\n                                    ToastAndroid.LONG,\r\n                                    ToastAndroid.BOTTOM,\r\n                                    25,\r\n                                    50\r\n                                );\r\n                            }} />}\r\n                            centerComponent={{ text: 'Parent Corner', style: { color: '#fff', fontSize: 20, fontWeight: \"bold\", } }}\r\n                            rightComponent={<Image\r\n                                source={require('../assets/logo.png')}\r\n                                style={{ width: '92%', height: '100%' }}\r\n                            />}\r\n                            backgroundColor=\"#1338BF\"\r\n                        />\r\n                    </View>\r\n                    <View style={{ flex: 0.08 }}>\r\n                        <Text style={{ fontSize: RFValue(17), marginLeft: RFValue(10), fontWeight: 'bold' }}>Report a Problem</Text>\r\n                        <ButtonGroup\r\n                            onPress={this.updateIndex1}\r\n                            selectedIndex={this.state.selectedIndex1}\r\n                            buttons={['Academic', 'Facility']}\r\n                            containerStyle={{ height: RFValue(50), borderRadius: RFValue(10) }}\r\n                        />\r\n                    </View>\r\n                    <View style={{ flex: 0.8 }}>\r\n                        {this.problem1()}\r\n                        <Overlay\r\n                            isVisible={this.state.visible}\r\n                            overlayStyle={{ width: '80%', marginTop: RFValue(20), marginBottom: RFValue(20) }}\r\n                            onBackdropPress={() => {\r\n                                this.setState({\r\n                                    visible: false\r\n                                })\r\n                            }}>\r\n                            <View style={{ marginTop: RFValue(15), alignItems: 'center' }}>\r\n                                <Text style={styles.label}>Reset Password </Text>\r\n                                <View style={{ marginTop: RFValue(20) }}></View>\r\n                                <Input\r\n                                    style={styles.loginBox}\r\n                                    placeholder={'Old Password'}\r\n                                    secureTextEntry={true}\r\n                                    onChangeText={(text) => {\r\n                                        this.setState({\r\n                                            oldPassword: text,\r\n                                        });\r\n                                    }}\r\n                                    leftIcon={\r\n                                        <Icon\r\n                                            name=\"key\"\r\n                                            size={RFValue(35)}\r\n                                            color=\"#fabf10\"\r\n                                            type=\"font-awesome-5\"\r\n                                        />\r\n                                    }\r\n                                />\r\n                                <TouchableOpacity\r\n                                    style={styles.registerButton}\r\n                                    onPress={() => {\r\n                                        if (this.state.oldPassword == this.state.password) {\r\n                                            this.setState({\r\n                                                visible: false,\r\n                                                visible2: true\r\n                                            })\r\n                                        }\r\n                                        if (this.state.oldPassword.length == 0) {\r\n                                            Alert.alert(\r\n                                                \"Invalid password\",\r\n                                                \"Please Enter Passward\",\r\n                                                [\r\n                                                    {\r\n                                                        text: \"Forgot Password\",\r\n                                                        onPress: () => {\r\n                                                            Alert.alert(\r\n                                                                \"Forgot Password\",\r\n                                                                \"For Recovery Password Call School\",\r\n                                                                [\r\n                                                                    {\r\n                                                                        text: \"Call\",\r\n                                                                        onPress: () => { Linking.openURL(`tel:${9384507030}`) },\r\n                                                                    },\r\n                                                                    {\r\n                                                                        text: \"Cancel\",\r\n                                                                    },\r\n                                                                ])\r\n                                                        }\r\n                                                    },\r\n                                                    { text: \"OK\" }\r\n                                                ],\r\n                                            );\r\n                                            Vibration.vibrate()\r\n                                        }\r\n                                        if (this.state.oldPassword != this.state.password) {\r\n                                            Alert.alert(\r\n                                                \"Invalid password\",\r\n                                                \"Please Enter valid Passward\",\r\n                                                [\r\n                                                    {\r\n                                                        text: \"Forgot Password\",\r\n                                                        onPress: () => {\r\n                                                            Alert.alert(\r\n                                                                \"Forgot Password\",\r\n                                                                \"For Recovery Password Call School\",\r\n                                                                [\r\n                                                                    {\r\n                                                                        text: \"Call\",\r\n                                                                        onPress: () => { Linking.openURL(`tel:${9384507030}`) },\r\n                                                                    },\r\n                                                                    {\r\n                                                                        text: \"Cancel\",\r\n                                                                    },\r\n                                                                ])\r\n                                                        }\r\n                                                    },\r\n                                                    { text: \"OK\" }\r\n                                                ],\r\n                                            );\r\n                                            Vibration.vibrate()\r\n                                        }\r\n                                    }}>\r\n                                    <Text style={styles.registerButtonText}>NEXT</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </Overlay>\r\n\r\n                        <Overlay\r\n                            isVisible={this.state.visible2}\r\n                            overlayStyle={{ width: '80%', marginTop: RFValue(20), marginBottom: RFValue(20) }}\r\n                            onBackdropPress={() => {\r\n                                this.setState({\r\n                                    visible2: false\r\n                                })\r\n                            }}>\r\n                            <View style={{ marginTop: RFValue(15), alignItems: 'center' }}>\r\n                                <Text style={styles.label}>Reset Password </Text>\r\n                                <Input\r\n                                    style={styles.loginBox}\r\n                                    placeholder={'Password'}\r\n                                    secureTextEntry={true}\r\n                                    onChangeText={(text) => {\r\n                                        this.setState({\r\n                                            newPassword: text,\r\n                                        });\r\n                                    }}\r\n                                    leftIcon={\r\n                                        <Icon\r\n                                            name=\"user-lock\"\r\n                                            size={RFValue(35)}\r\n                                            color=\"#fabf10\"\r\n                                            type=\"font-awesome-5\"\r\n                                        />\r\n                                    }\r\n                                />\r\n                                <Input\r\n                                    style={styles.loginBox}\r\n                                    placeholder={'Confrim Password'}\r\n                                    secureTextEntry={true}\r\n                                    onChangeText={(text) => {\r\n                                        this.setState({\r\n                                            newPassword1: text,\r\n                                        });\r\n                                    }}\r\n                                    leftIcon={\r\n                                        <Icon\r\n                                            name=\"user-lock\"\r\n                                            size={RFValue(35)}\r\n                                            color=\"#fabf10\"\r\n                                            type=\"font-awesome-5\"\r\n                                        />\r\n                                    }\r\n                                />\r\n                                <TouchableOpacity\r\n                                    style={styles.registerButton}\r\n                                    onPress={() => {\r\n                                        if (this.state.newPassword.length == 0) {\r\n                                            Alert.alert(\r\n                                                \"Invalid New Password\",\r\n                                                \"Please Enter Passward\",\r\n                                                [\r\n                                                    {\r\n                                                        text: \"Ok\",\r\n                                                    },\r\n                                                ])\r\n                                            Vibration.vibrate()\r\n                                        }\r\n                                        if (this.state.newPassword != this.state.newPassword1) {\r\n                                            Alert.alert(\r\n                                                \"Invalid New Password\",\r\n                                                \"password doesn't match\\nCheck your password.\",\r\n                                                [\r\n                                                    {\r\n                                                        text: \"Ok\",\r\n                                                    },\r\n                                                ])\r\n                                            Vibration.vibrate()\r\n                                        }\r\n                                        if (this.state.newPassword == this.state.newPassword1) {\r\n                                            db.collection('students')\r\n                                                .doc(this.state.userid)\r\n                                                .update({\r\n                                                    password: this.state.newPassword\r\n                                                })\r\n                                            ToastAndroid.showWithGravityAndOffset(\r\n                                                \"Password updated Successfully\",\r\n                                                ToastAndroid.LONG,\r\n                                                ToastAndroid.BOTTOM,\r\n                                                25,\r\n                                                50\r\n                                            );\r\n\r\n                                            this.setState({\r\n                                                visible2: false,\r\n                                                oldPassword: '',\r\n                                                newPassword1: '',\r\n                                                newPassword: ''\r\n                                            })\r\n                                            this.props.navigation.navigate(\"parentScreen\")\r\n                                        }\r\n                                    }}>\r\n                                    <Text style={styles.registerButtonText}>Reset Password</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </Overlay>\r\n                    </View>\r\n                    <Overlay\r\n                        isVisible={this.state.academicTeachingVisible}\r\n                        overlayStyle={{ width: '80%', marginTop: RFValue(20), marginBottom: RFValue(20) }}\r\n                    >\r\n                        <View>\r\n                            <Text>Are you will to submit the Report will send to administrator</Text>\r\n                            <View style={{ alignItems: 'center' }}>\r\n                                <TouchableOpacity style={styles.registerButton} onPress={() => {\r\n                                    this.sendReport();\r\n                                    ToastAndroid.showWithGravityAndOffset(\r\n                                        \"Successfully Problem Reported\",\r\n                                        ToastAndroid.LONG,\r\n                                        ToastAndroid.BOTTOM,\r\n                                        25,\r\n                                        50\r\n                                    );\r\n                                    this.setState({\r\n                                        academicTeachingVisible: false,\r\n                                        selectedIndex1: null,\r\n                                        problem1: null,\r\n                                        academicProblem1: null,\r\n                                        description: null,\r\n                                        subject: null,\r\n                                        facilityProblem1: null,\r\n                                        academicProblem2: null,\r\n                                    })\r\n                                }}>\r\n                                    <Text style={styles.registerButtonText}>SUBMIT</Text>\r\n                                </TouchableOpacity>\r\n                                <Text\r\n                                    style={styles.cancelButtonText}\r\n                                    onPress={() => {\r\n                                        this.setState({\r\n                                            academicTeachingVisible: false,\r\n                                            selectedIndex1: null,\r\n                                            problem1: null,\r\n                                            academicProblem1: null,\r\n                                            description: null,\r\n                                            subject: null,\r\n                                            facilityProblem1: null,\r\n                                            academicProblem2: null,\r\n                                        })\r\n                                    }}\r\n                                >\r\n                                    Cancel</Text>\r\n                            </View>\r\n                        </View>\r\n                    </Overlay>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    Picker: {\r\n        backgroundColor: '#fff',\r\n        marginTop: RFValue(10),\r\n        height: RFValue(50),\r\n        width: RFValue(250),\r\n        borderRadius: RFValue(10),\r\n        marginLeft: RFValue(20)\r\n    },\r\n    registerButton: {\r\n        width: \"75%\",\r\n        height: RFValue(50),\r\n        marginTop: RFValue(20),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(3),\r\n        backgroundColor: \"#32867d\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.44,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n        marginTop: RFValue(10),\r\n    },\r\n    registerButtonText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: \"bold\",\r\n        color: \"#fff\",\r\n    },\r\n    label: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: \"bold\",\r\n        color: \"#32867d\"\r\n    },\r\n    formTextInput: {\r\n        width: \"75%\",\r\n        height: RFValue(45),\r\n        borderWidth: 1,\r\n        padding: 10,\r\n    },\r\n    cancelButtonText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: 'bold',\r\n        color: \"#32867d\",\r\n        marginTop: RFValue(10)\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}