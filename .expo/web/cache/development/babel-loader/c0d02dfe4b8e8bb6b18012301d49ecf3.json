{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\91944\\\\Dropbox\\\\My PC (LAPTOP-4MDLAJMG)\\\\Desktop\\\\vis app\\\\react_test2\\\\screens\\\\LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport { Icon, Input, Overlay } from \"react-native-elements\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport DatePicker from 'react-native-datepicker';\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this);\n\n    _this.getPermission = function () {\n      db.collection('login').where(\"version\", \"==\", \"1.0.10\").onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.setState({\n            PermissionGranted: doc.data().login,\n            PermissionText: doc.data().text,\n            headText: doc.data().headText\n          });\n        });\n      });\n    };\n\n    _this.getverificationCode = function () {\n      db.collection(\"students\").where(\"email_id\", \"==\", _this.state.verificationEmail).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.setState({\n            checkName2: doc.data().name,\n            checkGrade2: doc.data().grade,\n            checkSection2: doc.data().section,\n            checkContact2: doc.data().contact,\n            checkdob2: doc.data().dob,\n            checkPassId2: doc.data().id,\n            checkPass: doc.data().mainPassword\n          });\n\n          if (doc.data().mainPassword == undefined) {\n            _this.setState({\n              checkPass: doc.data().contact\n            });\n          }\n\n          if (doc.data().id != undefined) {\n            _this.setState({\n              verificationModalVisible: true,\n              overlay2Visible: false\n            });\n          }\n        });\n      });\n    };\n\n    _this.verificationModal = function () {\n      return React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: _this.state.verificationModalVisible,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.scrollview,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.signupView,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.signupText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, \"Verification\")), React.createElement(View, {\n        style: {\n          flex: 0.95\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.label,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, \"Name \"), React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'name',\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            checkName: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"id-badge\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }\n        }),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: styles.label,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      }, \"Grade\"), React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'Grade',\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            checkGrade: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"id-badge\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 33\n          }\n        }),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: styles.label,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }\n      }, \" section \"), React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'section',\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            checkSection: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"address-card\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }\n        }),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: styles.label,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      }, \" Pass ID \"), React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'Pass ID',\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            checkPassId: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"address-card\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 33\n          }\n        }),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: styles.label,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }\n      }, \"Contact \"), _this.state.checkContact.length !== 10 ? React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'Contact',\n        maxLength: 10,\n        keyboardType: 'numeric',\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            checkContact: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"phone\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 37\n          }\n        }),\n        errorMessage: \"Enter a Valid Phone Number\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }\n      }) : React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'Contact',\n        maxLength: 10,\n        keyboardType: 'numeric',\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            checkContact: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"phone\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 41\n          }\n        }),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.label,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }\n      }, \"Date of Birth \"), React.createElement(DatePicker, {\n        style: {\n          width: 200,\n          marginLeft: RFValue(10)\n        },\n        date: _this.state.checkdob,\n        mode: \"date\",\n        placeholder: \"select date\",\n        format: \"DD-MM-YYYY\",\n        minDate: _this.state.minDate,\n        maxDate: _this.state.maxDate,\n        confirmBtnText: \"Confirm\",\n        cancelBtnText: \"Cancel\",\n        customStyles: {\n          dateIcon: {\n            position: 'absolute',\n            left: 0,\n            top: 4,\n            marginLeft: 0\n          },\n          dateInput: {\n            marginLeft: 36\n          }\n        },\n        onDateChange: function onDateChange(date) {\n          _this.setState({\n            checkdob: date\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 0.2,\n          alignItems: 'center'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [styles.registerButton, {\n          width: '90%'\n        }],\n        onPress: function onPress() {\n          _this.getLogin();\n\n          _this.state({\n            verificationModalVisible: false\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.registerButtonText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 29\n        }\n      }, \"Confirm Verification\")), React.createElement(Text, {\n        style: styles.cancelButtonText,\n        onPress: function onPress() {\n          _this.setState({\n            verificationModalVisible: false\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }\n      }, \"Cancel\"))));\n    };\n\n    _this.getLogin = function () {\n      if (_this.state.checkName.toLocaleLowerCase() == _this.state.checkName2.toLocaleLowerCase() && _this.state.checkGrade.toLocaleLowerCase() == _this.state.checkGrade2.toLocaleLowerCase() && _this.state.checkSection.toLocaleLowerCase() == _this.state.checkSection2.toLocaleLowerCase() && _this.state.checkContact == _this.state.checkContact2 && _this.state.checkPassId == _this.state.checkPassId2) {\n        if (_this.state.checkdob == _this.state.checkdob2 || _this.state.checkdob2 == undefined) {\n          Alert.alert(\"Password\", _this.state.checkPass + 'is your password requesting to reset in profile screen');\n        } else {\n          Alert.alert('Information that you provided is wrong ');\n        }\n      } else {\n        Alert.alert('Information that you provided is wrong');\n      }\n    };\n\n    _this.userLogin = function (emailId, password) {\n      firebase.auth().signInWithEmailAndPassword(emailId, password).then(function () {\n        _this.setState({\n          loding: true\n        });\n\n        db.collection(\"teacher\").where(\"email_id\", \"==\", emailId).onSnapshot(function (querySnapshot) {\n          querySnapshot.forEach(function (doc) {\n            if (doc.data().state === \"hod\") {\n              _this.props.navigation.navigate('hodHome');\n            }\n\n            if (doc.data().state === \"teacher\") {\n              _this.props.navigation.navigate('teacherHome');\n            }\n          });\n        });\n        db.collection(\"students\").where(\"email_id\", \"==\", emailId).onSnapshot(function (querySnapshot) {\n          querySnapshot.forEach(function (doc) {\n            _this.props.navigation.navigate('Home');\n          });\n        });\n        db.collection(\"admin\").where(\"email_id\", \"==\", emailId).onSnapshot(function (querySnapshot) {\n          querySnapshot.forEach(function (doc) {\n            _this.props.navigation.navigate('FeedBackAdmin');\n          });\n        });\n      }).catch(function (error) {\n        _this.setState({\n          loding: false\n        });\n\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        return Alert.alert(\"\", errorMessage, [{\n          text: \"Forgot Password\",\n          onPress: function onPress() {\n            Alert.alert(\"Forgot Password\", \"For Recovery Password verification is Necessary\", [{\n              text: \"Start verification\",\n              onPress: function onPress() {\n                _this.setState({\n                  overlay2Visible: true\n                });\n              }\n            }, {\n              text: \"Cancel\"\n            }]);\n          }\n        }, {\n          text: \"OK\"\n        }]), Vibration.vibrate();\n      });\n    };\n\n    _this.state = {\n      emailId: '',\n      name: '',\n      grade: '',\n      section: '',\n      contact: '',\n      password: '',\n      confirmPassword: '',\n      user_id: '',\n      isModalVisible: false,\n      loding: false,\n      dob: '',\n      checkName: '',\n      checkGrade: '',\n      checkSection: '',\n      checkdob: '',\n      checkContact: '',\n      checkPassId: '',\n      verificationModalVisible: false,\n      overlay2Visible: false,\n      verificationEmail: '',\n      checkName2: '',\n      checkGrade2: '',\n      checkSection2: '',\n      checkdob2: '',\n      checkContact2: '',\n      checkPassId2: '',\n      checkPass: '',\n      PermissionGranted: true,\n      PermissionText: 'Please update the App',\n      headText: 'login error'\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPermission();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.PermissionGranted == true) {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }\n        }, this.verificationModal(), React.createElement(Overlay, {\n          isVisible: this.state.overlay2Visible,\n          overlayStyle: {\n            width: '90%'\n          },\n          onBackdropPress: function onBackdropPress() {\n            _this2.setState({\n              overlay2Visible: false\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 25\n          }\n        }, React.createElement(Input, {\n          style: styles.loginBox,\n          placeholder: \"abc@inbo.com\",\n          placeholderTextColor: \"#fabf10\",\n          leftIcon: React.createElement(Icon, {\n            name: \"envelope-open-text\",\n            size: RFValue(35),\n            color: \"black\",\n            type: \"font-awesome-5\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 37\n            }\n          }),\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              verificationEmail: text\n            });\n          },\n          label: \"USER ID\",\n          errorMessage: \"verification is only for students\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 29\n          }\n        }), React.createElement(View, {\n          style: {\n            alignItems: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: styles.cancelButtonText,\n          onPress: function onPress() {\n            if (_this2.state.verificationEmail.length != 0) {\n              _this2.getverificationCode();\n            } else {\n              Vibration.vibrate();\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 33\n          }\n        }, \"NEXT\")))), React.createElement(Overlay, {\n          isVisible: this.state.loding,\n          overlayStyle: {\n            width: '90%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 21\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/loding.gif\"),\n          style: {\n            width: '100%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 25\n          }\n        })), React.createElement(ScrollView, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 0.25\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 0.15\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 29\n          }\n        }), React.createElement(View, {\n          style: styles.logo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 29\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/logo.png\"),\n          style: styles.santaImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 33\n          }\n        }))), React.createElement(View, {\n          style: {\n            flex: 0.45,\n            marginTop: 20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: styles.TextInput,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 29\n          }\n        }, React.createElement(Input, {\n          style: styles.loginBox,\n          placeholder: \"abc@inbo.com\",\n          placeholderTextColor: \"#fabf10\",\n          leftIcon: React.createElement(Icon, {\n            name: \"envelope-open-text\",\n            size: RFValue(35),\n            color: \"black\",\n            type: \"font-awesome-5\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 41\n            }\n          }),\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              emailId: text\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 33\n          }\n        }), React.createElement(Input, {\n          style: [styles.loginBox, {\n            marginTop: RFValue(15)\n          }],\n          secureTextEntry: true,\n          placeholder: \"Enter Password\",\n          placeholderTextColor: \"#fabf10\",\n          leftIcon: React.createElement(Icon, {\n            name: \"user-lock\",\n            size: RFValue(30),\n            color: \"black\",\n            type: \"font-awesome-5\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 41\n            }\n          }),\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              password: text\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 33\n          }\n        })), React.createElement(View, {\n          style: {\n            flex: 0.5,\n            alignItems: \"center\",\n            marginTop: 20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 29\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            _this2.userLogin(_this2.state.emailId, _this2.state.password);\n\n            _this2.setState({\n              loding: true\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 37\n          }\n        }, \"Login\"))))));\n      }\n\n      if (this.state.PermissionGranted == false) {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 17\n          }\n        }, this.verificationModal(), React.createElement(Overlay, {\n          isVisible: this.state.overlay2Visible,\n          overlayStyle: {\n            width: '90%'\n          },\n          onBackdropPress: function onBackdropPress() {\n            _this2.setState({\n              overlay2Visible: false\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 25\n          }\n        }, React.createElement(Input, {\n          style: styles.loginBox,\n          placeholder: \"abc@inbo.com\",\n          placeholderTextColor: \"#fabf10\",\n          leftIcon: React.createElement(Icon, {\n            name: \"envelope-open-text\",\n            size: RFValue(35),\n            color: \"black\",\n            type: \"font-awesome-5\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 37\n            }\n          }),\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              verificationEmail: text\n            });\n          },\n          label: \"USER ID\",\n          errorMessage: \"verification is only for students\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 29\n          }\n        }), React.createElement(View, {\n          style: {\n            alignItems: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: styles.cancelButtonText,\n          onPress: function onPress() {\n            if (_this2.state.verificationEmail.length != 0) {\n              _this2.getverificationCode();\n            } else {\n              Vibration.vibrate();\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 33\n          }\n        }, \"NEXT\")))), React.createElement(Overlay, {\n          isVisible: this.state.loding,\n          overlayStyle: {\n            width: '90%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 21\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/loding.gif\"),\n          style: {\n            width: '100%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 25\n          }\n        })), React.createElement(ScrollView, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 0.25\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 0.15\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 29\n          }\n        }), React.createElement(View, {\n          style: styles.logo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 29\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/logo.png\"),\n          style: styles.santaImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 33\n          }\n        }))), React.createElement(View, {\n          style: {\n            flex: 0.45,\n            marginTop: 20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: styles.TextInput,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 29\n          }\n        }, React.createElement(Input, {\n          style: styles.loginBox,\n          placeholder: \"abc@inbo.com\",\n          placeholderTextColor: \"#fabf10\",\n          leftIcon: React.createElement(Icon, {\n            name: \"envelope-open-text\",\n            size: RFValue(35),\n            color: \"black\",\n            type: \"font-awesome-5\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 41\n            }\n          }),\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              emailId: text\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 33\n          }\n        }), React.createElement(Input, {\n          style: [styles.loginBox, {\n            marginTop: RFValue(15)\n          }],\n          secureTextEntry: true,\n          placeholder: \"Enter Password\",\n          placeholderTextColor: \"#fabf10\",\n          leftIcon: React.createElement(Icon, {\n            name: \"user-lock\",\n            size: RFValue(30),\n            color: \"black\",\n            type: \"font-awesome-5\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 41\n            }\n          }),\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              password: text\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 33\n          }\n        })), React.createElement(View, {\n          style: {\n            flex: 0.5,\n            alignItems: \"center\",\n            marginTop: 20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 29\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            Alert.alert(_this2.state.headText, _this2.state.PermissionText);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 37\n          }\n        }, \"Login\"))))));\n      }\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#E5F7FE\"\n  },\n  loginBox: {\n    width: \"80%\",\n    height: RFValue(50),\n    borderWidth: 1.5,\n    borderColor: \"#ffffff\",\n    fontSize: RFValue(20),\n    paddingLeft: RFValue(10)\n  },\n  button: {\n    width: \"80%\",\n    height: RFValue(50),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(25),\n    backgroundColor: \"#ffff\",\n    shadowColor: \"#000\",\n    marginBottom: RFValue(10),\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 10.32,\n    elevation: 16\n  },\n  buttonText: {\n    color: \"#32867d\",\n    fontWeight: \"200\",\n    fontSize: RFValue(20)\n  },\n  label: {\n    fontSize: RFValue(17),\n    color: \"#717D7E\",\n    fontWeight: 'bold',\n    paddingLeft: RFValue(10),\n    marginLeft: RFValue(20)\n  },\n  registerButton: {\n    width: \"75%\",\n    height: RFValue(50),\n    marginTop: RFValue(20),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(3),\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: RFValue(10)\n  },\n  registerButtonText: {\n    fontSize: RFValue(23),\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  cancelButtonText: {\n    fontSize: RFValue(20),\n    fontWeight: 'bold',\n    color: \"#32867d\",\n    marginTop: RFValue(10)\n  },\n  scrollview: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  signupView: {\n    flex: 0.05,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  signupText: {\n    fontSize: RFValue(20),\n    fontWeight: \"bold\",\n    color: \"#32867d\"\n  },\n  logo: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: RFValue(10),\n    height: RFValue(250),\n    marginTop: RFValue(20)\n  },\n  santaImage: {\n    width: \"70%\",\n    height: \"100%\",\n    resizeMode: \"stretch\"\n  },\n  TextInput: {\n    flex: 0.5,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/91944/Dropbox/My PC (LAPTOP-4MDLAJMG)/Desktop/vis app/react_test2/screens/LoginScreen.js"],"names":["React","Component","db","firebase","Icon","Input","Overlay","RFValue","DatePicker","LoginScreen","getPermission","collection","where","onSnapshot","querySnapshot","forEach","doc","setState","PermissionGranted","data","login","PermissionText","text","headText","getverificationCode","state","verificationEmail","checkName2","name","checkGrade2","grade","checkSection2","section","checkContact2","contact","checkdob2","dob","checkPassId2","id","checkPass","mainPassword","undefined","verificationModalVisible","overlay2Visible","verificationModal","styles","scrollview","signupView","signupText","flex","label","loginBox","checkName","checkGrade","checkSection","checkPassId","checkContact","length","width","marginLeft","checkdob","minDate","maxDate","dateIcon","position","left","top","dateInput","date","alignItems","registerButton","getLogin","registerButtonText","cancelButtonText","toLocaleLowerCase","Alert","alert","userLogin","emailId","password","auth","signInWithEmailAndPassword","then","loding","props","navigation","navigate","catch","error","errorCode","code","errorMessage","message","onPress","Vibration","vibrate","confirmPassword","user_id","isModalVisible","container","require","logo","santaImage","marginTop","TextInput","button","buttonText","StyleSheet","create","backgroundColor","height","borderWidth","borderColor","fontSize","paddingLeft","justifyContent","borderRadius","shadowColor","marginBottom","shadowOffset","shadowOpacity","shadowRadius","elevation","color","fontWeight","padding","resizeMode"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    Image,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Alert,\r\n    ScrollView,\r\n    Modal,\r\n    Vibration,\r\n    Linking\r\n} from \"react-native\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\nimport { Icon, Input, Overlay } from \"react-native-elements\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport DatePicker from 'react-native-datepicker'\r\n\r\nexport default class LoginScreen extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            emailId: '',\r\n            name: '',\r\n            grade: '',\r\n            section: '',\r\n            contact: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            user_id: '',\r\n            isModalVisible: false,\r\n            loding: false,\r\n            dob: '',\r\n            checkName: '',\r\n            checkGrade: '',\r\n            checkSection: '',\r\n            checkdob: '',\r\n            checkContact: '',\r\n            checkPassId: '',\r\n            verificationModalVisible: false,\r\n            overlay2Visible: false,\r\n            verificationEmail: '',\r\n            checkName2: '',\r\n            checkGrade2: '',\r\n            checkSection2: '',\r\n            checkdob2: '',\r\n            checkContact2: '',\r\n            checkPassId2: '',\r\n            checkPass: '',\r\n            PermissionGranted: true,\r\n            PermissionText: 'Please update the App',\r\n            headText: 'login error',\r\n        };\r\n    }\r\n\r\n    getPermission = () => {\r\n        db.collection('login')\r\n            .where(\"version\", \"==\", \"1.0.10\")\r\n            .onSnapshot((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    this.setState({\r\n                        PermissionGranted: doc.data().login,\r\n                        PermissionText: doc.data().text,\r\n                        headText: doc.data().headText,\r\n                    })\r\n                });\r\n            });\r\n    }\r\n\r\n    getverificationCode = () => {\r\n        db.collection(\"students\")\r\n            .where(\"email_id\", \"==\", this.state.verificationEmail)\r\n            .onSnapshot((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    this.setState({\r\n                        checkName2: doc.data().name,\r\n                        checkGrade2: doc.data().grade,\r\n                        checkSection2: doc.data().section,\r\n                        checkContact2: doc.data().contact,\r\n                        checkdob2: doc.data().dob,\r\n                        checkPassId2: doc.data().id,\r\n                        checkPass: doc.data().mainPassword,\r\n                    });\r\n                    if (doc.data().mainPassword == undefined) {\r\n                        this.setState({\r\n                            checkPass: doc.data().contact\r\n                        })\r\n                    }\r\n                    if (doc.data().id != undefined) {\r\n                        this.setState({\r\n                            verificationModalVisible: true,\r\n                            overlay2Visible: false,\r\n                        })\r\n                    }\r\n\r\n                });\r\n            });\r\n    }\r\n\r\n    verificationModal = () => {\r\n        return (\r\n            <Modal\r\n                animationType=\"slide\"\r\n                transparent={true}\r\n                visible={this.state.verificationModalVisible}\r\n            >\r\n                <ScrollView style={styles.scrollview}>\r\n                    <View style={styles.signupView}>\r\n                        <Text style={styles.signupText}>Verification</Text>\r\n                    </View>\r\n                    <View style={{ flex: 0.95 }}>\r\n                        <Text style={styles.label}>Name </Text>\r\n                        <Input\r\n                            style={styles.loginBox}\r\n                            placeholder={'name'}\r\n                            onChangeText={(text) => {\r\n                                this.setState({\r\n                                    checkName: text,\r\n                                });\r\n                            }}\r\n                            leftIcon={\r\n                                <Icon\r\n                                    name=\"id-badge\"\r\n                                    size={RFValue(35)}\r\n                                    color=\"#fabf10\"\r\n                                    type=\"font-awesome-5\"\r\n                                />\r\n                            }\r\n                        />\r\n\r\n                        <Text style={styles.label}>Grade</Text>\r\n                        <Input\r\n                            style={styles.loginBox}\r\n                            placeholder={'Grade'}\r\n                            onChangeText={(text) => {\r\n                                this.setState({\r\n                                    checkGrade: text,\r\n                                });\r\n                            }}\r\n                            leftIcon={\r\n                                <Icon\r\n                                    name=\"id-badge\"\r\n                                    size={RFValue(35)}\r\n                                    color=\"#fabf10\"\r\n                                    type=\"font-awesome-5\"\r\n                                />\r\n                            }\r\n                        />\r\n\r\n                        <Text style={styles.label}> section </Text>\r\n                        <Input\r\n                            style={styles.loginBox}\r\n                            placeholder={'section'}\r\n                            multiline={true}\r\n                            onChangeText={(text) => {\r\n                                this.setState({\r\n                                    checkSection: text,\r\n                                });\r\n                            }}\r\n                            leftIcon={\r\n                                <Icon\r\n                                    name=\"address-card\"\r\n                                    size={RFValue(35)}\r\n                                    color=\"#fabf10\"\r\n                                    type=\"font-awesome-5\"\r\n                                />\r\n                            }\r\n                        />\r\n\r\n                        <Text style={styles.label}> Pass ID </Text>\r\n                        <Input\r\n                            style={styles.loginBox}\r\n                            placeholder={'Pass ID'}\r\n                            multiline={true}\r\n                            onChangeText={(text) => {\r\n                                this.setState({\r\n                                    checkPassId: text,\r\n                                });\r\n                            }}\r\n                            leftIcon={\r\n                                <Icon\r\n                                    name=\"address-card\"\r\n                                    size={RFValue(35)}\r\n                                    color=\"#fabf10\"\r\n                                    type=\"font-awesome-5\"\r\n                                />\r\n                            }\r\n                        />\r\n\r\n                        <Text style={styles.label}>Contact </Text>\r\n\r\n                        {this.state.checkContact.length !== 10 ? (\r\n                            <Input\r\n                                style={styles.loginBox}\r\n                                placeholder={'Contact'}\r\n                                maxLength={10}\r\n                                keyboardType={'numeric'}\r\n                                onChangeText={(text) => {\r\n                                    this.setState({\r\n                                        checkContact: text,\r\n                                    });\r\n                                }}\r\n                                leftIcon={\r\n                                    <Icon\r\n                                        name=\"phone\"\r\n                                        size={RFValue(35)}\r\n                                        color=\"#fabf10\"\r\n                                        type=\"font-awesome-5\"\r\n                                    />\r\n                                }\r\n                                errorMessage=\"Enter a Valid Phone Number\"\r\n                            />\r\n                        ) : (\r\n                                <Input\r\n                                    style={styles.loginBox}\r\n                                    placeholder={'Contact'}\r\n                                    maxLength={10}\r\n                                    keyboardType={'numeric'}\r\n                                    onChangeText={(text) => {\r\n                                        this.setState({\r\n                                            checkContact: text,\r\n                                        });\r\n                                    }}\r\n                                    leftIcon={\r\n                                        <Icon\r\n                                            name=\"phone\"\r\n                                            size={RFValue(35)}\r\n                                            color=\"#fabf10\"\r\n                                            type=\"font-awesome-5\"\r\n                                        />\r\n                                    }\r\n                                />\r\n                            )}\r\n                        <Text style={styles.label}>Date of Birth </Text>\r\n                        <DatePicker\r\n                            style={{ width: 200, marginLeft: RFValue(10) }}\r\n                            date={this.state.checkdob}\r\n                            mode=\"date\"\r\n                            placeholder=\"select date\"\r\n                            format=\"DD-MM-YYYY\"\r\n                            minDate={this.state.minDate}\r\n                            maxDate={this.state.maxDate}\r\n                            confirmBtnText=\"Confirm\"\r\n                            cancelBtnText=\"Cancel\"\r\n                            customStyles={{\r\n                                dateIcon: {\r\n                                    position: 'absolute',\r\n                                    left: 0,\r\n                                    top: 4,\r\n                                    marginLeft: 0\r\n                                },\r\n                                dateInput: {\r\n                                    marginLeft: 36\r\n                                }\r\n                            }}\r\n                            onDateChange={(date) => { this.setState({ checkdob: date }) }}\r\n                        />\r\n                    </View>\r\n\r\n                    <View style={{ flex: 0.2, alignItems: 'center' }}>\r\n                        <TouchableOpacity\r\n                            style={[styles.registerButton, { width: '90%' }]}\r\n                            onPress={() => {\r\n                                this.getLogin()\r\n                                this.state({\r\n                                    verificationModalVisible: false\r\n                                })\r\n                            }}>\r\n                            <Text style={styles.registerButtonText}>Confirm Verification</Text>\r\n                        </TouchableOpacity>\r\n                        <Text\r\n                            style={styles.cancelButtonText}\r\n                            onPress={() => {\r\n                                this.setState({ verificationModalVisible: false })\r\n                            }}\r\n                        >\r\n                            Cancel</Text>\r\n                    </View>\r\n                </ScrollView>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    getLogin = () => {\r\n        if (this.state.checkName.toLocaleLowerCase() == this.state.checkName2.toLocaleLowerCase() && this.state.checkGrade.toLocaleLowerCase() == this.state.checkGrade2.toLocaleLowerCase()\r\n            && this.state.checkSection.toLocaleLowerCase() == this.state.checkSection2.toLocaleLowerCase() && this.state.checkContact == this.state.checkContact2\r\n            && this.state.checkPassId == this.state.checkPassId2) {\r\n            if (this.state.checkdob == this.state.checkdob2 || this.state.checkdob2 == undefined) {\r\n                Alert.alert(\r\n                    \"Password\",\r\n                    this.state.checkPass + 'is your password requesting to reset in profile screen'\r\n                )\r\n            }\r\n            else {\r\n                Alert.alert('Information that you provided is wrong ')\r\n            }\r\n        } else {\r\n            Alert.alert('Information that you provided is wrong')\r\n        }\r\n    }\r\n\r\n    userLogin = (emailId, password) => {\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(emailId, password)\r\n            .then(() => {\r\n                this.setState({\r\n                    loding: true\r\n                })\r\n                db.collection(\"teacher\")\r\n                    .where(\"email_id\", \"==\", emailId)\r\n                    .onSnapshot((querySnapshot) => {\r\n                        querySnapshot.forEach((doc) => {\r\n                            if (doc.data().state === \"hod\") {\r\n                                this.props.navigation.navigate('hodHome')\r\n                                //Alert.alert('hod')\r\n                            }\r\n                            if (doc.data().state === \"teacher\") {\r\n                                this.props.navigation.navigate('teacherHome')\r\n                            }\r\n                            //Alert.alert('teacher')\r\n                        });\r\n                    })\r\n                db.collection(\"students\")\r\n                    .where(\"email_id\", \"==\", emailId)\r\n                    .onSnapshot((querySnapshot) => {\r\n                        querySnapshot.forEach((doc) => {\r\n                            this.props.navigation.navigate('Home')\r\n                        });\r\n                    });\r\n                db.collection(\"admin\")\r\n                    .where(\"email_id\", \"==\", emailId)\r\n                    .onSnapshot((querySnapshot) => {\r\n                        querySnapshot.forEach((doc) => {\r\n                            this.props.navigation.navigate('FeedBackAdmin')\r\n                        });\r\n                    });\r\n\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    loding: false\r\n                })\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                return (\r\n                    Alert.alert(\r\n                        \"\",\r\n                        errorMessage,\r\n                        [\r\n                            {\r\n                                text: \"Forgot Password\",\r\n                                onPress: () => {\r\n                                    Alert.alert(\r\n                                        \"Forgot Password\",\r\n                                        \"For Recovery Password verification is Necessary\",\r\n                                        [\r\n                                            {\r\n                                                text: \"Start verification\",\r\n                                                onPress: () => { this.setState({ overlay2Visible: true }) },\r\n                                            },\r\n                                            {\r\n                                                text: \"Cancel\",\r\n                                            },\r\n                                        ])\r\n                                }\r\n                            },\r\n                            { text: \"OK\" }\r\n                        ],\r\n                    ),\r\n                    Vibration.vibrate()\r\n                )\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getPermission()\r\n    }\r\n\r\n    render() {\r\n        if (this.state.PermissionGranted == true) {\r\n            return (\r\n                <View style={styles.container}>\r\n                    {this.verificationModal()}\r\n\r\n                    <Overlay\r\n                        isVisible={this.state.overlay2Visible}\r\n                        overlayStyle={{ width: '90%' }}\r\n                        onBackdropPress={() => {\r\n                            this.setState({\r\n                                overlay2Visible: false\r\n                            })\r\n                        }}\r\n                    >\r\n                        <View>\r\n                            <Input\r\n                                style={styles.loginBox}\r\n                                placeholder=\"abc@inbo.com\"\r\n                                placeholderTextColor=\"#fabf10\"\r\n                                leftIcon={\r\n                                    <Icon\r\n                                        name='envelope-open-text'\r\n                                        size={RFValue(35)}\r\n                                        color='black'\r\n                                        type=\"font-awesome-5\"\r\n                                    />\r\n                                }\r\n                                keyboardType=\"email-address\"\r\n                                onChangeText={(text) => {\r\n                                    this.setState({\r\n                                        verificationEmail: text,\r\n                                    });\r\n                                }}\r\n                                label='USER ID'\r\n                                errorMessage='verification is only for students'\r\n                            />\r\n                            <View style={{ alignItems: 'center' }}>\r\n                                <Text\r\n                                    style={styles.cancelButtonText}\r\n                                    onPress={() => {\r\n                                        if (this.state.verificationEmail.length != 0) {\r\n                                            this.getverificationCode();\r\n                                        } else {\r\n                                            Vibration.vibrate()\r\n                                        }\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    NEXT</Text>\r\n                            </View>\r\n                        </View>\r\n                    </Overlay>\r\n                    <Overlay\r\n                        isVisible={this.state.loding}\r\n                        overlayStyle={{ width: '90%' }}\r\n                    >\r\n                        <Image\r\n                            source={require('../assets/loding.gif')}\r\n                            style={{ width: '100%' }}\r\n                        />\r\n                    </Overlay>\r\n                    <ScrollView>\r\n                        <View\r\n                            style={{ flex: 0.25 }}\r\n                        >\r\n                            <View style={{ flex: 0.15 }} />\r\n                            <View style={styles.logo}>\r\n                                <Image\r\n                                    source={require('../assets/logo.png')}\r\n                                    style={styles.santaImage}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                        <View style={{ flex: 0.45, marginTop: 20 }}>\r\n\r\n                            <View style={styles.TextInput}>\r\n                                <Input\r\n                                    style={styles.loginBox}\r\n                                    placeholder=\"abc@inbo.com\"\r\n                                    placeholderTextColor=\"#fabf10\"\r\n                                    leftIcon={\r\n                                        <Icon\r\n                                            name='envelope-open-text'\r\n                                            size={RFValue(35)}\r\n                                            color='black'\r\n                                            type=\"font-awesome-5\"\r\n                                        />\r\n                                    }\r\n                                    keyboardType=\"email-address\"\r\n                                    onChangeText={(text) => {\r\n                                        this.setState({\r\n                                            emailId: text,\r\n                                        });\r\n                                    }}\r\n\r\n                                />\r\n                                <Input\r\n                                    style={[styles.loginBox, { marginTop: RFValue(15) }]}\r\n                                    secureTextEntry={true}\r\n                                    placeholder=\"Enter Password\"\r\n                                    placeholderTextColor=\"#fabf10\"\r\n                                    leftIcon={\r\n                                        <Icon\r\n                                            name='user-lock'\r\n                                            size={RFValue(30)}\r\n                                            color='black'\r\n                                            type=\"font-awesome-5\"\r\n                                        />\r\n                                    }\r\n                                    onChangeText={(text) => {\r\n                                        this.setState({\r\n                                            password: text,\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 0.5, alignItems: \"center\", marginTop: 20 }}>\r\n                                <TouchableOpacity\r\n                                    style={styles.button}\r\n                                    onPress={() => {\r\n                                        this.userLogin(this.state.emailId, this.state.password);\r\n                                        this.setState({\r\n                                            loding: true\r\n                                        })\r\n                                    }}\r\n                                >\r\n                                    <Text style={styles.buttonText}>Login</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                    </ScrollView>\r\n                </View>\r\n            );\r\n        }\r\n        if (this.state.PermissionGranted == false) {\r\n            return (\r\n                <View style={styles.container}>\r\n                    {this.verificationModal()}\r\n\r\n                    <Overlay\r\n                        isVisible={this.state.overlay2Visible}\r\n                        overlayStyle={{ width: '90%' }}\r\n                        onBackdropPress={() => {\r\n                            this.setState({\r\n                                overlay2Visible: false\r\n                            })\r\n                        }}\r\n                    >\r\n                        <View>\r\n                            <Input\r\n                                style={styles.loginBox}\r\n                                placeholder=\"abc@inbo.com\"\r\n                                placeholderTextColor=\"#fabf10\"\r\n                                leftIcon={\r\n                                    <Icon\r\n                                        name='envelope-open-text'\r\n                                        size={RFValue(35)}\r\n                                        color='black'\r\n                                        type=\"font-awesome-5\"\r\n                                    />\r\n                                }\r\n                                keyboardType=\"email-address\"\r\n                                onChangeText={(text) => {\r\n                                    this.setState({\r\n                                        verificationEmail: text,\r\n                                    });\r\n                                }}\r\n                                label='USER ID'\r\n                                errorMessage='verification is only for students'\r\n                            />\r\n                            <View style={{ alignItems: 'center' }}>\r\n                                <Text\r\n                                    style={styles.cancelButtonText}\r\n                                    onPress={() => {\r\n                                        if (this.state.verificationEmail.length != 0) {\r\n                                            this.getverificationCode();\r\n                                        } else {\r\n                                            Vibration.vibrate()\r\n                                        }\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    NEXT</Text>\r\n                            </View>\r\n                        </View>\r\n                    </Overlay>\r\n                    <Overlay\r\n                        isVisible={this.state.loding}\r\n                        overlayStyle={{ width: '90%' }}\r\n                    >\r\n                        <Image\r\n                            source={require('../assets/loding.gif')}\r\n                            style={{ width: '100%' }}\r\n                        />\r\n                    </Overlay>\r\n                    <ScrollView>\r\n                        <View\r\n                            style={{ flex: 0.25 }}\r\n                        >\r\n                            <View style={{ flex: 0.15 }} />\r\n                            <View style={styles.logo}>\r\n                                <Image\r\n                                    source={require('../assets/logo.png')}\r\n                                    style={styles.santaImage}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                        <View style={{ flex: 0.45, marginTop: 20 }}>\r\n\r\n                            <View style={styles.TextInput}>\r\n                                <Input\r\n                                    style={styles.loginBox}\r\n                                    placeholder=\"abc@inbo.com\"\r\n                                    placeholderTextColor=\"#fabf10\"\r\n                                    leftIcon={\r\n                                        <Icon\r\n                                            name='envelope-open-text'\r\n                                            size={RFValue(35)}\r\n                                            color='black'\r\n                                            type=\"font-awesome-5\"\r\n                                        />\r\n                                    }\r\n                                    keyboardType=\"email-address\"\r\n                                    onChangeText={(text) => {\r\n                                        this.setState({\r\n                                            emailId: text,\r\n                                        });\r\n                                    }}\r\n                                />\r\n                                <Input\r\n                                    style={[styles.loginBox, { marginTop: RFValue(15) }]}\r\n                                    secureTextEntry={true}\r\n                                    placeholder=\"Enter Password\"\r\n                                    placeholderTextColor=\"#fabf10\"\r\n                                    leftIcon={\r\n                                        <Icon\r\n                                            name='user-lock'\r\n                                            size={RFValue(30)}\r\n                                            color='black'\r\n                                            type=\"font-awesome-5\"\r\n                                        />\r\n                                    }\r\n                                    onChangeText={(text) => {\r\n                                        this.setState({\r\n                                            password: text,\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </View>\r\n                            <View style={{ flex: 0.5, alignItems: \"center\", marginTop: 20 }}>\r\n                                <TouchableOpacity\r\n                                    style={styles.button}\r\n                                    onPress={() => {\r\n                                        Alert.alert(\r\n                                            this.state.headText,\r\n                                            this.state.PermissionText\r\n                                        )\r\n                                    }}\r\n                                >\r\n                                    <Text style={styles.buttonText}>Login</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                    </ScrollView>\r\n                </View>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#E5F7FE\",\r\n    },\r\n    loginBox: {\r\n        width: \"80%\",\r\n        height: RFValue(50),\r\n        borderWidth: 1.5,\r\n        borderColor: \"#ffffff\",\r\n        fontSize: RFValue(20),\r\n        paddingLeft: RFValue(10),\r\n    },\r\n    button: {\r\n        width: \"80%\",\r\n        height: RFValue(50),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(25),\r\n        backgroundColor: \"#ffff\",\r\n        shadowColor: \"#000\",\r\n        marginBottom: RFValue(10),\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n    },\r\n    buttonText: {\r\n        color: \"#32867d\",\r\n        fontWeight: \"200\",\r\n        fontSize: RFValue(20),\r\n    },\r\n    label: {\r\n        fontSize: RFValue(17),\r\n        color: \"#717D7E\",\r\n        fontWeight: 'bold',\r\n        paddingLeft: RFValue(10),\r\n        marginLeft: RFValue(20)\r\n    },\r\n    registerButton: {\r\n        width: \"75%\",\r\n        height: RFValue(50),\r\n        marginTop: RFValue(20),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(3),\r\n        backgroundColor: \"#32867d\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.44,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n        marginTop: RFValue(10),\r\n    },\r\n    registerButtonText: {\r\n        fontSize: RFValue(23),\r\n        fontWeight: \"bold\",\r\n        color: \"#fff\",\r\n    },\r\n    cancelButtonText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: 'bold',\r\n        color: \"#32867d\",\r\n        marginTop: RFValue(10)\r\n    },\r\n    scrollview: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\"\r\n    },\r\n    signupView: {\r\n        flex: 0.05,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    signupText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: \"bold\",\r\n        color: \"#32867d\"\r\n    },\r\n    logo: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: RFValue(10),\r\n        height: RFValue(250),\r\n        marginTop: RFValue(20)\r\n    },\r\n    santaImage: {\r\n        width: \"70%\",\r\n        height: \"100%\",\r\n        resizeMode: \"stretch\"\r\n    },\r\n    TextInput: {\r\n        flex: 0.5,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    }\r\n});\r\n\r\n/*<TouchableOpacity\r\nstyle={styles.button}\r\nonPress={() => this.setState({ isModalVisible: true })}\r\n>\r\n<Text style={styles.buttonText}>SignUp</Text>\r\n</TouchableOpacity>*/"]},"metadata":{},"sourceType":"module"}