{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\91944\\\\Dropbox\\\\My PC (LAPTOP-4MDLAJMG)\\\\Desktop\\\\react_test2\\\\studentScreens\\\\LeaderBoard2.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport { Header, Icon, Avatar, ListItem } from \"react-native-elements\";\n\nvar LeaderBoard2 = function (_Component) {\n  _inherits(LeaderBoard2, _Component);\n\n  var _super = _createSuper(LeaderBoard2);\n\n  function LeaderBoard2(props) {\n    var _this;\n\n    _classCallCheck(this, LeaderBoard2);\n\n    _this = _super.call(this, props);\n\n    _this.getUserDetails = function () {\n      db.collection(\"students\").where(\"email_id\", \"==\", _this.state.userId).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.setState({\n            grade: doc.data().grade\n          });\n        });\n\n        _this.getstudents();\n      });\n    };\n\n    _this.getstudents = function _callee() {\n      var d, dayNum, yearStart, lastWeek;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.sort === 'mainScore')) {\n                _context.next = 4;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(db.collection('students').where('grade', '==', _this.state.grade).limit(50).orderBy(_this.state.value, 'desc').onSnapshot(function (snapshot) {\n                var students = snapshot.docs.map(function (doc) {\n                  return doc.data();\n                });\n\n                _this.setState({\n                  students: students\n                });\n              }));\n\n            case 3:\n              _this.studentsRef = _context.sent;\n\n            case 4:\n              if (!(_this.state.sort === 'monthScore')) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(db.collection('students').where('grade', '==', _this.state.grade).where('lastMonth', '==', new Date().getMonth() + 1).limit(50).orderBy(_this.state.value, 'desc').onSnapshot(function (snapshot) {\n                var students = snapshot.docs.map(function (doc) {\n                  return doc.data();\n                });\n\n                _this.setState({\n                  students: students\n                });\n              }));\n\n            case 7:\n              _this.studentsRef = _context.sent;\n\n            case 8:\n              if (!(_this.state.sort === 'weekScore')) {\n                _context.next = 17;\n                break;\n              }\n\n              d = new Date(Date.UTC(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()));\n              dayNum = d.getUTCDay() || 7;\n              d.setUTCDate(d.getUTCDate() + 4 - dayNum);\n              yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n              lastWeek = Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\n              _context.next = 16;\n              return _regeneratorRuntime.awrap(db.collection('students').where('grade', '==', _this.state.grade).where('lastWeek', '==', lastWeek).limit(50).orderBy(_this.state.value, 'desc').onSnapshot(function (snapshot) {\n                var students = snapshot.docs.map(function (doc) {\n                  return doc.data();\n                });\n\n                _this.setState({\n                  students: students\n                });\n              }));\n\n            case 16:\n              _this.studentsRef = _context.sent;\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.keyExtractor = function (index) {\n      return index.toString();\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i,\n          index = _ref.index;\n\n      if (_this.state.sort === 'mainScore') {\n        return React.createElement(ListItem, {\n          key: i,\n          title: React.createElement(Text, {\n            style: {\n              fontSize: RFValue(20)\n            }\n          }, item.name),\n          subtitle: React.createElement(Text, null, item.grade, \" \", item.section),\n          rightElement: React.createElement(Text, null, item.mainScore),\n          leftAvatar: React.createElement(Avatar, {\n            rounded: true,\n            source: {\n              uri: item.imageurl\n            },\n            size: RFValue(50)\n          }),\n          leftElement: React.createElement(Text, {\n            style: {\n              fontSize: RFValue(20),\n              fontWeight: 'bold'\n            }\n          }, index + 1),\n          bottomDivider: true\n        });\n      }\n\n      if (_this.state.sort === 'monthScore') {\n        return React.createElement(ListItem, {\n          key: i,\n          title: React.createElement(Text, {\n            style: {\n              fontSize: RFValue(20)\n            }\n          }, item.name),\n          subtitle: React.createElement(Text, null, item.grade, \" \", item.section),\n          rightElement: React.createElement(Text, null, item.monthScore),\n          leftAvatar: React.createElement(Avatar, {\n            rounded: true,\n            source: {\n              uri: item.imageurl\n            },\n            size: RFValue(50),\n            title: item.name\n          }),\n          leftElement: React.createElement(Text, {\n            style: {\n              fontSize: RFValue(20),\n              fontWeight: 'bold'\n            }\n          }, index + 1),\n          bottomDivider: true\n        });\n      }\n\n      if (_this.state.sort === 'weekScore') {\n        return React.createElement(ListItem, {\n          key: i,\n          title: React.createElement(Text, {\n            style: {\n              fontSize: RFValue(20)\n            }\n          }, item.name),\n          subtitle: React.createElement(Text, null, item.grade, \" \", item.section),\n          rightElement: React.createElement(Text, null, item.weekScore),\n          leftAvatar: React.createElement(Avatar, {\n            rounded: true,\n            source: {\n              uri: item.imageurl\n            },\n            size: RFValue(50)\n          }),\n          leftElement: React.createElement(Text, {\n            style: {\n              fontSize: RFValue(20),\n              fontWeight: 'bold'\n            }\n          }, index + 1),\n          bottomDivider: true\n        });\n      }\n    };\n\n    var day = new Date().getDay();\n    var today = new Date(),\n        date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      field: _this.props.navigation.getParam(\"details\")[\"field\"],\n      value: _this.props.navigation.getParam(\"details\")[\"value\"],\n      sort: _this.props.navigation.getParam(\"details\")[\"sort\"],\n      students: [],\n      day: day,\n      date: date,\n      grade: ''\n    };\n    return _this;\n  }\n\n  _createClass(LeaderBoard2, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserDetails();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.students.length == 0) {\n        return React.createElement(View, null, React.createElement(View, {\n          style: {\n            flex: 0.12\n          }\n        }, React.createElement(Header, {\n          leftComponent: React.createElement(Icon, {\n            name: \"arrow-alt-circle-left\",\n            type: \"font-awesome-5\",\n            color: \"#fff\",\n            solid: false,\n            size: RFValue(40),\n            onPress: function onPress() {\n              return _this2.props.navigation.goBack();\n            }\n          }),\n          centerComponent: {\n            text: this.state.field,\n            style: {\n              color: '#fff',\n              fontSize: 20,\n              fontWeight: \"bold\"\n            }\n          },\n          rightComponent: React.createElement(Image, {\n            source: require(\"../assets/logo.png\"),\n            style: {\n              width: '92%',\n              height: '100%'\n            }\n          }),\n          backgroundColor: \"#1338BF\"\n        })), React.createElement(View, {\n          style: {\n            flex: 0.88,\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: RFValue(300)\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/emptyLeader.png\")\n        }), React.createElement(Text, {\n          style: {\n            fontSize: RFValue(20),\n            textAlign: 'center'\n          }\n        }, 'Getting more students for the Leaderboard!\\nplay daly Quiz to enter LeaderBoard')));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            backgroundColor: '#fff5dc'\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 0.12\n          }\n        }, React.createElement(Header, {\n          leftComponent: React.createElement(Icon, {\n            name: \"arrow-alt-circle-left\",\n            type: \"font-awesome-5\",\n            color: \"#fff\",\n            solid: false,\n            size: RFValue(40),\n            onPress: function onPress() {\n              return _this2.props.navigation.goBack();\n            }\n          }),\n          centerComponent: {\n            text: this.state.field,\n            style: {\n              color: '#fff',\n              fontSize: 20,\n              fontWeight: \"bold\"\n            }\n          },\n          rightComponent: React.createElement(Image, {\n            source: require(\"../assets/logo.png\"),\n            style: {\n              width: '92%',\n              height: '100%'\n            }\n          }),\n          backgroundColor: \"#1338BF\"\n        })), React.createElement(View, {\n          style: {\n            flex: 0.88\n          }\n        }, React.createElement(FlatList, {\n          keyExtractor: this.keyExtractor,\n          data: this.state.students,\n          renderItem: this.renderItem\n        })));\n      }\n    }\n  }]);\n\n  return LeaderBoard2;\n}(Component);\n\nexport { LeaderBoard2 as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#E5F7FE\"\n  },\n  formContainer: {\n    flex: 0.88,\n    justifyContent: 'center'\n  },\n  label: {\n    fontSize: RFValue(15),\n    color: \"#717D7E\",\n    fontWeight: 'bold',\n    padding: RFValue(10),\n    marginLeft: RFValue(20)\n  },\n  label1: {\n    fontSize: RFValue(18),\n    color: \"#a901ff\",\n    fontWeight: 'bold',\n    marginLeft: RFValue(50)\n  },\n  button1: {\n    width: \"75%\",\n    height: RFValue(60),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(50),\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: RFValue(35),\n    alignItems: \"center\"\n  },\n  buttonView: {\n    flex: 0.22,\n    alignItems: \"center\",\n    marginTop: RFValue(150)\n  },\n  buttonView1: {\n    flex: 0.22,\n    alignItems: \"center\",\n    marginTop: RFValue(50)\n  },\n  buttonText: {\n    fontSize: RFValue(23),\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  cancelButtonText: {\n    fontSize: RFValue(20),\n    fontWeight: 'bold',\n    color: \"#32867d\",\n    marginTop: RFValue(10),\n    textAlign: 'center'\n  },\n  scrollview: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  firstNameModal: {\n    flex: 0.5,\n    height: 150\n  },\n  logo: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: RFValue(10),\n    height: RFValue(280)\n  },\n  loginBox: {\n    width: \"80%\",\n    height: RFValue(50),\n    borderWidth: 1.5,\n    borderColor: \"#ffffff\",\n    fontSize: RFValue(20),\n    paddingLeft: RFValue(10)\n  },\n  formTextInput: {\n    width: \"75%\",\n    height: RFValue(45),\n    borderWidth: 1,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/91944/Dropbox/My PC (LAPTOP-4MDLAJMG)/Desktop/react_test2/studentScreens/LeaderBoard2.js"],"names":["React","Component","RFValue","db","firebase","Header","Icon","Avatar","ListItem","LeaderBoard2","props","getUserDetails","collection","where","state","userId","onSnapshot","querySnapshot","forEach","doc","setState","grade","data","getstudents","sort","limit","orderBy","value","snapshot","students","docs","map","studentsRef","Date","getMonth","d","UTC","getFullYear","getDate","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","lastWeek","Math","ceil","keyExtractor","index","toString","renderItem","item","i","fontSize","name","section","mainScore","uri","imageurl","fontWeight","monthScore","weekScore","day","getDay","today","date","auth","currentUser","email","field","navigation","getParam","length","flex","goBack","text","style","color","require","width","height","justifyContent","alignItems","marginTop","textAlign","backgroundColor","styles","StyleSheet","create","container","formContainer","label","padding","marginLeft","label1","button1","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","buttonView","buttonView1","buttonText","cancelButtonText","scrollview","firstNameModal","logo","loginBox","borderWidth","borderColor","paddingLeft","formTextInput"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Alert,\r\n    Image,\r\n    ScrollView,\r\n    Modal,\r\n    FlatList\r\n} from \"react-native\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\nimport { Header, Icon, Avatar, ListItem } from \"react-native-elements\"\r\n\r\nexport default class LeaderBoard2 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var day = new Date().getDay();\r\n        var today = new Date(),\r\n            date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n        this.state = {\r\n            userId: firebase.auth().currentUser.email,\r\n            field: this.props.navigation.getParam(\"details\")[\"field\"],\r\n            value: this.props.navigation.getParam(\"details\")[\"value\"],\r\n            sort: this.props.navigation.getParam(\"details\")[\"sort\"],\r\n            students: [],\r\n            day: day,\r\n            date: date,\r\n            grade: '',\r\n        };\r\n    }\r\n\r\n    getUserDetails = () => {\r\n        db.collection(\"students\")\r\n            .where(\"email_id\", \"==\", this.state.userId)\r\n            .onSnapshot((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    this.setState({\r\n                        grade: doc.data().grade,\r\n                    });\r\n                });\r\n                this.getstudents()\r\n            });\r\n    }\r\n\r\n    getstudents = async () => {\r\n        if (this.state.sort === 'mainScore') {\r\n            this.studentsRef = await db.collection('students')\r\n                .where('grade', '==', this.state.grade)\r\n                .limit(50)\r\n                .orderBy(this.state.value, 'desc')\r\n                .onSnapshot((snapshot) => {\r\n                    var students = snapshot.docs.map((doc) => doc.data())\r\n                    this.setState({\r\n                        students: students\r\n                    });\r\n                })\r\n        }\r\n        if (this.state.sort === 'monthScore') {\r\n            this.studentsRef = await db.collection('students')\r\n                .where('grade', '==', this.state.grade)\r\n                .where('lastMonth', '==', (new Date().getMonth() + 1))\r\n                .limit(50)\r\n                .orderBy(this.state.value, 'desc')\r\n                .onSnapshot((snapshot) => {\r\n                    var students = snapshot.docs.map((doc) => doc.data())\r\n                    this.setState({\r\n                        students: students\r\n                    });\r\n                })\r\n        }\r\n        if (this.state.sort === 'weekScore') {\r\n            var d = new Date(Date.UTC(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()));\r\n            var dayNum = d.getUTCDay() || 7;\r\n            d.setUTCDate(d.getUTCDate() + 4 - dayNum);\r\n            var yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n            var lastWeek = Math.ceil((((d - yearStart) / 86400000) + 1) / 7)\r\n            this.studentsRef = await db.collection('students')\r\n                .where('grade', '==', this.state.grade)\r\n                .where('lastWeek', '==', lastWeek)\r\n                .limit(50)\r\n                .orderBy(this.state.value, 'desc')\r\n                .onSnapshot((snapshot) => {\r\n                    var students = snapshot.docs.map((doc) => doc.data())\r\n                    this.setState({\r\n                        students: students\r\n                    });\r\n                })\r\n        }\r\n    }\r\n\r\n    keyExtractor = (index) => index.toString()\r\n\r\n    renderItem = ({ item, i, index }) => {\r\n        if (this.state.sort === 'mainScore') {\r\n            return (\r\n                <ListItem\r\n                    key={i}\r\n                    title={\r\n                        <Text\r\n                            style={{\r\n                                fontSize: RFValue(20)\r\n                            }}\r\n                        >{item.name}</Text>\r\n                    }\r\n                    subtitle={\r\n                        <Text>{item.grade} {item.section}</Text>\r\n                    }\r\n                    //titleStyle={{ color: 'black', fontWeight: 'bold' }}\r\n\r\n                    rightElement={\r\n                        <Text>{item.mainScore}</Text>\r\n                    }\r\n                    leftAvatar={\r\n                        <Avatar rounded source={{ uri: item.imageurl }} size={RFValue(50)} />\r\n                    }\r\n                    leftElement={\r\n                        <Text style={{ fontSize: RFValue(20), fontWeight: 'bold' }} >{index + 1}</Text>\r\n                    }\r\n                    bottomDivider\r\n                />\r\n            )\r\n        }\r\n        if (this.state.sort === 'monthScore') {\r\n            return (\r\n                <ListItem\r\n                    key={i}\r\n                    title={\r\n                        <Text\r\n                            style={{\r\n                                fontSize: RFValue(20)\r\n                            }}\r\n                        >{item.name}</Text>\r\n                    }\r\n                    subtitle={\r\n                        <Text>{item.grade} {item.section}</Text>\r\n                    }\r\n                    //titleStyle={{ color: 'black', fontWeight: 'bold' }}shining\r\n                    rightElement={\r\n                        <Text>{item.monthScore}</Text>\r\n                    }\r\n                    leftAvatar={\r\n                        <Avatar rounded source={{ uri: item.imageurl }} size={RFValue(50)} title={item.name} />\r\n                    }\r\n                    leftElement={\r\n                        <Text style={{ fontSize: RFValue(20), fontWeight: 'bold' }}>{index + 1}</Text>\r\n                    }\r\n                    bottomDivider\r\n                />\r\n            )\r\n        }\r\n        if (this.state.sort === 'weekScore') {\r\n            return (\r\n                <ListItem\r\n                    key={i}\r\n                    title={\r\n                        <Text\r\n                            style={{\r\n                                fontSize: RFValue(20)\r\n                            }}\r\n                        >{item.name}</Text>\r\n                    }\r\n                    subtitle={\r\n                        <Text>{item.grade} {item.section}</Text>\r\n                    }\r\n                    //titleStyle={{ color: 'black', fontWeight: 'bold' }}\r\n\r\n                    rightElement={\r\n                        <Text>{item.weekScore}</Text>\r\n                    }\r\n                    leftAvatar={\r\n                        <Avatar rounded source={{ uri: item.imageurl }} size={RFValue(50)} />\r\n                    }\r\n                    leftElement={\r\n                        <Text style={{ fontSize: RFValue(20), fontWeight: 'bold' }}>{index + 1}</Text>\r\n                    }\r\n                    bottomDivider\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserDetails()\r\n    }\r\n\r\n    render() {\r\n        if (this.state.students.length == 0) {\r\n            return (\r\n                <View>\r\n                    <View style={{ flex: 0.12 }}>\r\n                        <Header\r\n                            leftComponent={<Icon name='arrow-alt-circle-left' type='font-awesome-5' color='#fff' solid={false} size={RFValue(40)} onPress={() => this.props.navigation.goBack()} />}\r\n                            centerComponent={{ text: this.state.field, style: { color: '#fff', fontSize: 20, fontWeight: \"bold\", } }}\r\n                            rightComponent={<Image\r\n                                source={require('../assets/logo.png')}\r\n                                style={{ width: '92%', height: '100%' }}\r\n                            />}\r\n                            backgroundColor=\"#1338BF\"\r\n                        />\r\n                    </View>\r\n                    <View style={{\r\n                        flex: 0.88,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        marginTop: RFValue(300),\r\n                    }}>\r\n                        <Image\r\n                            source={require('../assets/emptyLeader.png')} />\r\n                        <Text style={{ fontSize: RFValue(20), textAlign: 'center' }}>{'Getting more students for the Leaderboard!\\nplay daly Quiz to enter LeaderBoard'}</Text>\r\n                    </View>\r\n                </View>\r\n            )\r\n        } else {\r\n            return (\r\n                <View style={{ flex: 1, backgroundColor: '#fff5dc' }}>\r\n                    <View style={{ flex: 0.12 }}>\r\n                        <Header\r\n                            leftComponent={<Icon name='arrow-alt-circle-left' type='font-awesome-5' color='#fff' solid={false} size={RFValue(40)} onPress={() => this.props.navigation.goBack()} />}\r\n                            centerComponent={{ text: this.state.field, style: { color: '#fff', fontSize: 20, fontWeight: \"bold\", } }}\r\n                            rightComponent={<Image\r\n                                source={require('../assets/logo.png')}\r\n                                style={{ width: '92%', height: '100%' }}\r\n                            />}\r\n                            backgroundColor=\"#1338BF\"\r\n                        />\r\n                    </View>\r\n                    <View style={{ flex: 0.88 }}>\r\n                        <FlatList\r\n                            keyExtractor={this.keyExtractor}\r\n                            data={this.state.students}\r\n                            renderItem={this.renderItem}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#E5F7FE\"\r\n    },\r\n    formContainer: {\r\n        flex: 0.88,\r\n        justifyContent: 'center',\r\n    },\r\n    label: {\r\n        fontSize: RFValue(15),\r\n        color: \"#717D7E\",\r\n        fontWeight: 'bold',\r\n        padding: RFValue(10),\r\n        marginLeft: RFValue(20)\r\n    },\r\n    label1: {\r\n        fontSize: RFValue(18),\r\n        color: \"#a901ff\",\r\n        fontWeight: 'bold',\r\n        marginLeft: RFValue(50)\r\n    },\r\n    button1: {\r\n        width: \"75%\",\r\n        height: RFValue(60),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(50),\r\n        backgroundColor: \"#32867d\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.44,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n        marginTop: RFValue(35),\r\n        alignItems: \"center\"\r\n    },\r\n    buttonView: {\r\n        flex: 0.22,\r\n        alignItems: \"center\",\r\n        marginTop: RFValue(150),\r\n    },\r\n    buttonView1: {\r\n        flex: 0.22,\r\n        alignItems: \"center\",\r\n        marginTop: RFValue(50),\r\n    },\r\n    buttonText: {\r\n        fontSize: RFValue(23),\r\n        fontWeight: \"bold\",\r\n        color: \"#fff\",\r\n    },\r\n    cancelButtonText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: 'bold',\r\n        color: \"#32867d\",\r\n        marginTop: RFValue(10),\r\n        textAlign: 'center'\r\n    },\r\n    scrollview: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\"\r\n    },\r\n    firstNameModal: {\r\n        flex: 0.5,\r\n        height: 150\r\n    },\r\n    logo: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: RFValue(10),\r\n        height: RFValue(280)\r\n    },\r\n    loginBox: {\r\n        width: \"80%\",\r\n        height: RFValue(50),\r\n        borderWidth: 1.5,\r\n        borderColor: \"#ffffff\",\r\n        fontSize: RFValue(20),\r\n        paddingLeft: RFValue(10),\r\n    },\r\n    formTextInput: {\r\n        width: \"75%\",\r\n        height: RFValue(45),\r\n        borderWidth: 1,\r\n        padding: 10,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}