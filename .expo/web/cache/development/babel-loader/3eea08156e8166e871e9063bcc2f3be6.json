{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\91944\\\\Dropbox\\\\My PC (LAPTOP-4MDLAJMG)\\\\Desktop\\\\react_test2\\\\studentScreens\\\\parentScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport { Input, Icon, ListItem, Avatar } from \"react-native-elements\";\nimport MyHeader from \"../components/MyHeader\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\n\nvar parentScreen = function (_Component) {\n  _inherits(parentScreen, _Component);\n\n  var _super = _createSuper(parentScreen);\n\n  function parentScreen() {\n    var _this;\n\n    _classCallCheck(this, parentScreen);\n\n    _this = _super.call(this);\n\n    _this.getUserDetails = function () {\n      db.collection(\"students\").where(\"email_id\", \"==\", _this.state.userid).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.setState({\n            name: doc.data().name,\n            grade: doc.data().grade,\n            section: doc.data().section,\n            contact: doc.data().contact,\n            id: doc.data().id,\n            docId: doc.id,\n            password: doc.data().password\n          });\n\n          _this.updatePassword(doc.data().password);\n        });\n      });\n    };\n\n    _this.updatePassword = function (password) {\n      if (password === undefined) {\n        db.collection(\"students\").doc(_this.state.userid).update({\n          password: _this.state.contact\n        });\n      }\n    };\n\n    _this.login = function () {\n      if (_this.state.textPassword.length == 0) {\n        Alert.alert(\"Invalid password\", \"Please Enter Passward\", [{\n          text: \"Forgot Password\",\n          onPress: function onPress() {\n            Alert.alert(\"Forgot Password\", \"For Recovery Password Call School\", [{\n              text: \"Call\",\n              onPress: function onPress() {\n                Linking.openURL(\"tel:\" + 9384507030);\n              }\n            }, {\n              text: \"Cancel\"\n            }]);\n          }\n        }, {\n          text: \"OK\"\n        }]);\n        Vibration.vibrate();\n      }\n\n      if (_this.state.textPassword != _this.state.password) {\n        Alert.alert(\"Invalid password\", \"Please Enter valid Passward\", [{\n          text: \"Forgot Password\",\n          onPress: function onPress() {\n            Alert.alert(\"Forgot Password\", \"For Recovery Password Call School\", [{\n              text: \"Call\",\n              onPress: function onPress() {\n                Linking.openURL(\"tel:\" + +919384507030);\n              }\n            }, {\n              text: \"Cancel\"\n            }]);\n          }\n        }, {\n          text: \"OK\"\n        }]);\n        Vibration.vibrate();\n      }\n\n      if (_this.state.textPassword == _this.state.password) {\n        _this.props.navigation.navigate(\"parentScreen1\");\n\n        _this.setState({\n          textPassword: ''\n        });\n      }\n    };\n\n    _this.state = {\n      contact: \"\",\n      docId: \"\",\n      userid: firebase.auth().currentUser.email,\n      name: \"\",\n      section: '',\n      grade: '',\n      id: '',\n      newPassword: '',\n      password: null,\n      textPassword: ''\n    };\n    return _this;\n  }\n\n  _createClass(parentScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserDetails();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(ScrollView, null, React.createElement(View, {\n        style: {\n          flex: 0.12\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Parent Login\",\n        navigation: this.props.navigation\n      })), React.createElement(View, {\n        style: {\n          flex: 0.25\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.15\n        }\n      }), React.createElement(View, {\n        style: styles.logo\n      }, React.createElement(Image, {\n        source: require(\"../assets/logo.png\"),\n        style: styles.santaImage\n      }))), React.createElement(View, {\n        style: {\n          flex: 0.45,\n          marginTop: 20\n        }\n      }, React.createElement(View, {\n        style: styles.TextInput\n      }, React.createElement(Input, {\n        style: [styles.loginBox, {\n          marginTop: RFValue(15)\n        }],\n        secureTextEntry: true,\n        placeholder: \"Enter Parent Password\",\n        placeholderTextColor: \"#fabf10\",\n        leftIcon: React.createElement(Icon, {\n          name: \"user-lock\",\n          size: RFValue(30),\n          color: \"black\",\n          type: \"font-awesome-5\"\n        }),\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            textPassword: text\n          });\n        },\n        value: this.state.textPassword\n      })), React.createElement(View, {\n        style: {\n          flex: 0.5,\n          alignItems: \"center\",\n          marginTop: 20\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          _this2.login();\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText\n      }, \"Parent Login\"))))));\n    }\n  }]);\n\n  return parentScreen;\n}(Component);\n\nexport { parentScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1.12,\n    backgroundColor: \"#E5F7FE\"\n  },\n  loginBox: {\n    width: \"80%\",\n    height: RFValue(50),\n    borderWidth: 1.5,\n    borderColor: \"#ffffff\",\n    fontSize: RFValue(20),\n    paddingLeft: RFValue(10)\n  },\n  button: {\n    width: \"80%\",\n    height: RFValue(50),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(25),\n    backgroundColor: \"#ffff\",\n    shadowColor: \"#000\",\n    marginBottom: RFValue(10),\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 10.32,\n    elevation: 16\n  },\n  buttonText: {\n    color: \"#32867d\",\n    fontWeight: \"200\",\n    fontSize: RFValue(20)\n  },\n  label: {\n    fontSize: RFValue(17),\n    color: \"#717D7E\",\n    fontWeight: 'bold',\n    paddingLeft: RFValue(10),\n    marginLeft: RFValue(20)\n  },\n  registerButton: {\n    width: \"75%\",\n    height: RFValue(50),\n    marginTop: RFValue(20),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(3),\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: RFValue(10)\n  },\n  registerButtonText: {\n    fontSize: RFValue(23),\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  cancelButtonText: {\n    fontSize: RFValue(20),\n    fontWeight: 'bold',\n    color: \"#32867d\",\n    marginTop: RFValue(10)\n  },\n  scrollview: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  signupView: {\n    flex: 0.05,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  signupText: {\n    fontSize: RFValue(20),\n    fontWeight: \"bold\",\n    color: \"#32867d\"\n  },\n  logo: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: RFValue(10),\n    height: RFValue(250),\n    marginTop: RFValue(20)\n  },\n  santaImage: {\n    width: \"70%\",\n    height: \"100%\",\n    resizeMode: \"stretch\"\n  },\n  TextInput: {\n    flex: 0.5,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/91944/Dropbox/My PC (LAPTOP-4MDLAJMG)/Desktop/react_test2/studentScreens/parentScreen.js"],"names":["React","Component","Input","Icon","ListItem","Avatar","MyHeader","db","firebase","RFValue","parentScreen","getUserDetails","collection","where","state","userid","onSnapshot","querySnapshot","forEach","doc","setState","name","data","grade","section","contact","id","docId","password","updatePassword","undefined","update","login","textPassword","length","Alert","alert","text","onPress","Linking","openURL","Vibration","vibrate","props","navigation","navigate","auth","currentUser","email","newPassword","styles","container","flex","logo","require","santaImage","marginTop","TextInput","loginBox","alignItems","button","buttonText","StyleSheet","create","backgroundColor","width","height","borderWidth","borderColor","fontSize","paddingLeft","justifyContent","borderRadius","shadowColor","marginBottom","shadowOffset","shadowOpacity","shadowRadius","elevation","color","fontWeight","label","marginLeft","registerButton","registerButtonText","cancelButtonText","scrollview","signupView","signupText","padding","resizeMode"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    Modal,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Alert,\r\n    Image,\r\n    ScrollView,\r\n    FlatList,\r\n    Linking,\r\n    Vibration\r\n} from \"react-native\";\r\nimport { Input, Icon, ListItem, Avatar } from \"react-native-elements\";\r\nimport MyHeader from \"../components/MyHeader\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nexport default class parentScreen extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            contact: \"\",\r\n            docId: \"\",\r\n            userid: firebase.auth().currentUser.email,\r\n            name: \"\",\r\n            section: '',\r\n            grade: '',\r\n            id: '',\r\n            newPassword: '',\r\n            password: null,\r\n            textPassword: ''\r\n        }\r\n    }\r\n\r\n    getUserDetails = () => {\r\n        db.collection(\"students\")\r\n            .where(\"email_id\", \"==\", this.state.userid)\r\n            .onSnapshot((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    this.setState({\r\n                        name: doc.data().name,\r\n                        grade: doc.data().grade,\r\n                        section: doc.data().section,\r\n                        contact: doc.data().contact,\r\n                        id: doc.data().id,\r\n                        docId: doc.id,\r\n                        password: doc.data().password,\r\n                    });\r\n                    this.updatePassword(doc.data().password)\r\n                });\r\n            });\r\n    }\r\n\r\n    updatePassword = (password) => {\r\n        if (password === undefined) {\r\n            db.collection(\"students\")\r\n                .doc(this.state.userid)\r\n                .update({\r\n                    password: this.state.contact\r\n                })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserDetails();\r\n    }\r\n\r\n    login = () => {\r\n        if (this.state.textPassword.length == 0) {\r\n            Alert.alert(\r\n                \"Invalid password\",\r\n                \"Please Enter Passward\",\r\n                [\r\n                    {\r\n                        text: \"Forgot Password\",\r\n                        onPress: () => {\r\n                            Alert.alert(\r\n                                \"Forgot Password\",\r\n                                \"For Recovery Password Call School\",\r\n                                [\r\n                                    {\r\n                                        text: \"Call\",\r\n                                        onPress: () => { Linking.openURL(`tel:${9384507030}`) },\r\n                                    },\r\n                                    {\r\n                                        text: \"Cancel\",\r\n                                    },\r\n                                ])\r\n                        }\r\n                    },\r\n                    { text: \"OK\" }\r\n                ],\r\n            );\r\n            Vibration.vibrate()\r\n        }\r\n        if (this.state.textPassword != this.state.password) {\r\n            Alert.alert(\r\n                \"Invalid password\",\r\n                \"Please Enter valid Passward\",\r\n                [\r\n                    {\r\n                        text: \"Forgot Password\",\r\n                        onPress: () => {\r\n                            Alert.alert(\r\n                                \"Forgot Password\",\r\n                                \"For Recovery Password Call School\",\r\n                                [\r\n                                    {\r\n                                        text: \"Call\",\r\n                                        onPress: () => { Linking.openURL(`tel:${+919384507030}`) },\r\n                                    },\r\n                                    {\r\n                                        text: \"Cancel\",\r\n                                    },\r\n                                ])\r\n                        }\r\n                    },\r\n                    { text: \"OK\" }\r\n                ],\r\n            );\r\n            Vibration.vibrate()\r\n        }\r\n        if (this.state.textPassword == this.state.password) {\r\n            this.props.navigation.navigate(\"parentScreen1\")\r\n            this.setState({\r\n                textPassword: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <ScrollView>\r\n                    <View style={{ flex: 0.12 }}>\r\n                        <MyHeader title=\"Parent Login\" navigation={this.props.navigation} />\r\n                    </View>\r\n                    <View\r\n                        style={{ flex: 0.25 }}\r\n                    >\r\n                        <View style={{ flex: 0.15 }} />\r\n                        <View style={styles.logo}>\r\n                            <Image\r\n                                source={require('../assets/logo.png')}\r\n                                style={styles.santaImage}\r\n                            />\r\n                        </View>\r\n                    </View>\r\n                    <View style={{ flex: 0.45, marginTop: 20 }}>\r\n\r\n                        <View style={styles.TextInput}>\r\n                            <Input\r\n                                style={[styles.loginBox, { marginTop: RFValue(15) }]}\r\n                                secureTextEntry={true}\r\n                                placeholder=\"Enter Parent Password\"\r\n                                placeholderTextColor=\"#fabf10\"\r\n                                leftIcon={\r\n                                    <Icon\r\n                                        name='user-lock'\r\n                                        size={RFValue(30)}\r\n                                        color='black'\r\n                                        type=\"font-awesome-5\"\r\n                                    />\r\n                                }\r\n                                onChangeText={(text) => {\r\n                                    this.setState({\r\n                                        textPassword: text,\r\n                                    });\r\n                                }}\r\n                                value={this.state.textPassword}\r\n                            />\r\n                        </View>\r\n                        <View style={{ flex: 0.5, alignItems: \"center\", marginTop: 20 }}>\r\n                            <TouchableOpacity\r\n                                style={styles.button}\r\n                                onPress={() => {\r\n                                    this.login();\r\n                                }}\r\n                            >\r\n                                <Text style={styles.buttonText}>Parent Login</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1.12,\r\n        backgroundColor: \"#E5F7FE\",\r\n    },\r\n    loginBox: {\r\n        width: \"80%\",\r\n        height: RFValue(50),\r\n        borderWidth: 1.5,\r\n        borderColor: \"#ffffff\",\r\n        fontSize: RFValue(20),\r\n        paddingLeft: RFValue(10),\r\n    },\r\n    button: {\r\n        width: \"80%\",\r\n        height: RFValue(50),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(25),\r\n        backgroundColor: \"#ffff\",\r\n        shadowColor: \"#000\",\r\n        marginBottom: RFValue(10),\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n    },\r\n    buttonText: {\r\n        color: \"#32867d\",\r\n        fontWeight: \"200\",\r\n        fontSize: RFValue(20),\r\n    },\r\n    label: {\r\n        fontSize: RFValue(17),\r\n        color: \"#717D7E\",\r\n        fontWeight: 'bold',\r\n        paddingLeft: RFValue(10),\r\n        marginLeft: RFValue(20)\r\n    },\r\n    registerButton: {\r\n        width: \"75%\",\r\n        height: RFValue(50),\r\n        marginTop: RFValue(20),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(3),\r\n        backgroundColor: \"#32867d\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.44,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n        marginTop: RFValue(10),\r\n    },\r\n    registerButtonText: {\r\n        fontSize: RFValue(23),\r\n        fontWeight: \"bold\",\r\n        color: \"#fff\",\r\n    },\r\n    cancelButtonText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: 'bold',\r\n        color: \"#32867d\",\r\n        marginTop: RFValue(10)\r\n    },\r\n    scrollview: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\"\r\n    },\r\n    signupView: {\r\n        flex: 0.05,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    signupText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: \"bold\",\r\n        color: \"#32867d\"\r\n    },\r\n    logo: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: RFValue(10),\r\n        height: RFValue(250),\r\n        marginTop: RFValue(20)\r\n    },\r\n    santaImage: {\r\n        width: \"70%\",\r\n        height: \"100%\",\r\n        resizeMode: \"stretch\"\r\n    },\r\n    TextInput: {\r\n        flex: 0.5,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}