{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\91944\\\\Dropbox\\\\My PC (LAPTOP-4MDLAJMG)\\\\Desktop\\\\react_test2\\\\screens\\\\addTeacher.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport db from \"../config\";\nimport firebase from 'firebase';\nimport { Icon, Input, Header } from 'react-native-elements';\nimport { RFValue } from 'react-native-responsive-fontsize';\n\nvar addTeacher = function (_Component) {\n  _inherits(addTeacher, _Component);\n\n  var _super = _createSuper(addTeacher);\n\n  function addTeacher() {\n    var _this;\n\n    _classCallCheck(this, addTeacher);\n\n    _this = _super.call(this);\n\n    _this.userSignUp = function (emailId, password, confirmPassword) {\n      var id = Math.random().toString(36).substring(7);\n\n      if (password !== confirmPassword) {\n        return Alert.alert(\"password doesn't match\\nCheck your password.\");\n      } else {\n        firebase.auth().createUserWithEmailAndPassword(emailId, password).then(function () {\n          db.collection('teacher').doc(emailId).set({\n            name: _this.state.name,\n            class_teacher_grade: _this.state.grade,\n            contact: _this.state.contact,\n            email_id: _this.state.emailId,\n            class_teacher_section: _this.state.section,\n            id: id,\n            imageurl: 'https://firebasestorage.googleapis.com/v0/b/inbo-chat-a81c7.appspot.com/o/user_profiles%2F0c3b3adb1a7530892e55ef36d3be6cb8.png?alt=media&token=7818f4b2-e6cf-4342-8666-424c4636a430'\n          });\n          Alert.alert('Added Teacher Successfully');\n        });\n      }\n\n      ;\n    };\n\n    _this.state = {\n      emailId: '',\n      name: '',\n      grade: '',\n      section: '',\n      contact: '',\n      password: '',\n      confirmPassword: '',\n      user_id: ''\n    };\n    return _this;\n  }\n\n  _createClass(addTeacher, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(ScrollView, {\n        style: styles.scrollview\n      }, React.createElement(View, {\n        style: styles.signupView\n      }, React.createElement(Text, {\n        style: styles.signupText\n      }, \" ADD TEACHER \")), React.createElement(View, {\n        style: {\n          flex: 0.95\n        }\n      }, React.createElement(Text, {\n        style: styles.label\n      }, \"Name \"), React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'name',\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            name: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"id-badge\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\"\n        })\n      }), React.createElement(Text, {\n        style: styles.label\n      }, \"Class Teacher Grade\"), React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'Grade of Class teacher',\n        maxLength: 2,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            grade: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"id-badge\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\"\n        })\n      }), React.createElement(Text, {\n        style: styles.label\n      }, \"Class Teacher section \"), React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'Section of Class teacher',\n        maxLength: 2,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            section: text.toUpperCase().trim()\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"address-card\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\"\n        }),\n        value: this.state.section\n      }), React.createElement(Text, {\n        style: styles.label\n      }, \"Contact \"), this.state.contact.length !== 10 ? React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'Contact',\n        maxLength: 10,\n        keyboardType: 'numeric',\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            contact: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"phone\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\"\n        }),\n        errorMessage: \"Enter a Valid Phone Number\"\n      }) : React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'Contact',\n        maxLength: 10,\n        keyboardType: 'numeric',\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            contact: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"phone\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\"\n        })\n      }), React.createElement(Text, {\n        style: styles.label\n      }, \"USER ID \"), React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'name@inbo.com',\n        keyboardType: 'email-address',\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            emailId: text.toLowerCase().trim()\n          });\n        },\n        value: this.state.emailId,\n        leftIcon: React.createElement(Icon, {\n          name: \"envelope-open-text\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\"\n        })\n      }), React.createElement(Text, {\n        style: styles.label\n      }, \" Password \"), React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'Password',\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"user-lock\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\"\n        })\n      }), React.createElement(Text, {\n        style: styles.label\n      }, \"Confirm Password\"), React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'Confrim Password',\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            confirmPassword: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"key\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\"\n        })\n      })), React.createElement(View, {\n        style: {\n          flex: 0.2,\n          alignItems: 'center'\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.registerButton,\n        onPress: function onPress() {\n          _this2.state.contact.length !== 10 ? alert('Enter a Valid Phone Number') : _this2.userSignUp(_this2.state.emailId, _this2.state.password, _this2.state.confirmPassword);\n        }\n      }, React.createElement(Text, {\n        style: styles.registerButtonText\n      }, \"Register\")))));\n    }\n  }]);\n\n  return addTeacher;\n}(Component);\n\nexport { addTeacher as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#E5F7FE\"\n  },\n  loginBox: {\n    width: \"80%\",\n    height: RFValue(50),\n    borderWidth: 1.5,\n    borderColor: \"#ffffff\",\n    fontSize: RFValue(20),\n    paddingLeft: RFValue(10)\n  },\n  label: {\n    fontSize: RFValue(17),\n    color: \"#717D7E\",\n    fontWeight: 'bold',\n    paddingLeft: RFValue(10),\n    marginLeft: RFValue(20)\n  },\n  registerButton: {\n    width: \"75%\",\n    height: RFValue(50),\n    marginTop: RFValue(20),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(3),\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16\n  },\n  registerButtonText: {\n    fontSize: RFValue(23),\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  cancelButtonText: {\n    fontSize: RFValue(20),\n    fontWeight: 'bold',\n    color: \"#32867d\",\n    marginTop: RFValue(10)\n  },\n  scrollview: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  signupView: {\n    flex: 0.05,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  signupText: {\n    fontSize: RFValue(20),\n    fontWeight: \"bold\",\n    color: \"#32867d\"\n  }\n});","map":{"version":3,"sources":["C:/Users/91944/Dropbox/My PC (LAPTOP-4MDLAJMG)/Desktop/react_test2/screens/addTeacher.js"],"names":["React","Component","db","firebase","Icon","Input","Header","RFValue","addTeacher","userSignUp","emailId","password","confirmPassword","id","Math","random","toString","substring","Alert","alert","auth","createUserWithEmailAndPassword","then","collection","doc","set","name","state","class_teacher_grade","grade","contact","email_id","class_teacher_section","section","imageurl","user_id","styles","container","scrollview","signupView","signupText","flex","label","loginBox","text","setState","toUpperCase","trim","length","toLowerCase","alignItems","registerButton","registerButtonText","StyleSheet","create","backgroundColor","width","height","borderWidth","borderColor","fontSize","paddingLeft","color","fontWeight","marginLeft","marginTop","justifyContent","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","cancelButtonText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    Image,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Alert,\r\n    ScrollView,\r\n    Modal,\r\n    Picker\r\n} from 'react-native';\r\nimport db from '../config';\r\nimport firebase from 'firebase';\r\nimport { Icon, Input, Header } from 'react-native-elements';\r\nimport { RFValue } from 'react-native-responsive-fontsize';\r\n\r\nexport default class addTeacher extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            emailId: '',\r\n            name: '',\r\n            grade: '',\r\n            section: '',\r\n            contact: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            user_id: '',\r\n        };\r\n    }\r\n\r\n    userSignUp = (emailId, password, confirmPassword) => {\r\n        var id = Math.random().toString(36).substring(7);\r\n        if (password !== confirmPassword) {\r\n            return Alert.alert(\"password doesn't match\\nCheck your password.\");\r\n        } else {\r\n            firebase\r\n                .auth()\r\n                .createUserWithEmailAndPassword(emailId, password)\r\n                .then(() => {\r\n                    db.collection('teacher').doc(emailId).set({\r\n                        name: this.state.name,\r\n                        class_teacher_grade: this.state.grade,\r\n                        contact: this.state.contact,\r\n                        email_id: this.state.emailId,\r\n                        class_teacher_section: this.state.section,\r\n                        id: id,\r\n                        imageurl:\r\n                            'https://firebasestorage.googleapis.com/v0/b/inbo-chat-a81c7.appspot.com/o/user_profiles%2F0c3b3adb1a7530892e55ef36d3be6cb8.png?alt=media&token=7818f4b2-e6cf-4342-8666-424c4636a430',\r\n                    });\r\n                    Alert.alert('Added Teacher Successfully')\r\n                })\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <ScrollView style={styles.scrollview}>\r\n                    <View style={styles.signupView}>\r\n                        <Text style={styles.signupText}> ADD TEACHER </Text>\r\n                    </View>\r\n                    <View style={{ flex: 0.95 }}>\r\n                        <Text style={styles.label}>Name </Text>\r\n                        <Input\r\n                            style={styles.loginBox}\r\n                            placeholder={'name'}\r\n                            onChangeText={(text) => {\r\n                                this.setState({\r\n                                    name: text,\r\n                                });\r\n                            }}\r\n                            leftIcon={\r\n                                <Icon\r\n                                    name=\"id-badge\"\r\n                                    size={RFValue(35)}\r\n                                    color=\"#fabf10\"\r\n                                    type=\"font-awesome-5\"\r\n                                />\r\n                            }\r\n                        />\r\n\r\n                        <Text style={styles.label}>Class Teacher Grade</Text>\r\n                        <Input\r\n                            style={styles.loginBox}\r\n                            placeholder={'Grade of Class teacher'}\r\n                            maxLength={2}\r\n                            onChangeText={(text) => {\r\n                                this.setState({\r\n                                    grade: text,\r\n                                });\r\n                            }}\r\n                            leftIcon={\r\n                                <Icon\r\n                                    name=\"id-badge\"\r\n                                    size={RFValue(35)}\r\n                                    color=\"#fabf10\"\r\n                                    type=\"font-awesome-5\"\r\n                                />\r\n                            }\r\n                        />\r\n\r\n                        <Text style={styles.label}>Class Teacher section </Text>\r\n                        <Input\r\n                            style={styles.loginBox}\r\n                            placeholder={'Section of Class teacher'}\r\n                            maxLength={2}\r\n                            onChangeText={(text) => {\r\n                                this.setState({\r\n                                    section: text.toUpperCase().trim(),\r\n                                });\r\n                            }}\r\n                            leftIcon={\r\n                                <Icon\r\n                                    name=\"address-card\"\r\n                                    size={RFValue(35)}\r\n                                    color=\"#fabf10\"\r\n                                    type=\"font-awesome-5\"\r\n                                />\r\n                            }\r\n                            value={this.state.section}\r\n                        />\r\n\r\n                        <Text style={styles.label}>Contact </Text>\r\n\r\n                        {this.state.contact.length !== 10 ? (\r\n                            <Input\r\n                                style={styles.loginBox}\r\n                                placeholder={'Contact'}\r\n                                maxLength={10}\r\n                                keyboardType={'numeric'}\r\n                                onChangeText={(text) => {\r\n                                    this.setState({\r\n                                        contact: text,\r\n                                    });\r\n                                }}\r\n                                leftIcon={\r\n                                    <Icon\r\n                                        name=\"phone\"\r\n                                        size={RFValue(35)}\r\n                                        color=\"#fabf10\"\r\n                                        type=\"font-awesome-5\"\r\n                                    />\r\n                                }\r\n                                errorMessage=\"Enter a Valid Phone Number\"\r\n                            />\r\n                        ) : (\r\n                                <Input\r\n                                    style={styles.loginBox}\r\n                                    placeholder={'Contact'}\r\n                                    maxLength={10}\r\n                                    keyboardType={'numeric'}\r\n                                    onChangeText={(text) => {\r\n                                        this.setState({\r\n                                            contact: text,\r\n                                        });\r\n                                    }}\r\n                                    leftIcon={\r\n                                        <Icon\r\n                                            name=\"phone\"\r\n                                            size={RFValue(35)}\r\n                                            color=\"#fabf10\"\r\n                                            type=\"font-awesome-5\"\r\n                                        />\r\n                                    }\r\n                                />\r\n                            )}\r\n\r\n                        <Text style={styles.label}>USER ID </Text>\r\n                        <Input\r\n                            style={styles.loginBox}\r\n                            placeholder={'name@inbo.com'}\r\n                            keyboardType={'email-address'}\r\n                            onChangeText={(text) => {\r\n                                this.setState({\r\n                                    emailId: text.toLowerCase().trim(),\r\n                                });\r\n                            }}\r\n                            value={this.state.emailId}\r\n                            leftIcon={\r\n                                <Icon\r\n                                    name=\"envelope-open-text\"\r\n                                    size={RFValue(35)}\r\n                                    color=\"#fabf10\"\r\n                                    type=\"font-awesome-5\"\r\n                                />\r\n                            }\r\n                        />\r\n\r\n                        <Text style={styles.label}> Password </Text>\r\n                        <Input\r\n                            style={styles.loginBox}\r\n                            placeholder={'Password'}\r\n                            secureTextEntry={true}\r\n                            onChangeText={(text) => {\r\n                                this.setState({\r\n                                    password: text,\r\n                                });\r\n                            }}\r\n                            leftIcon={\r\n                                <Icon\r\n                                    name=\"user-lock\"\r\n                                    size={RFValue(35)}\r\n                                    color=\"#fabf10\"\r\n                                    type=\"font-awesome-5\"\r\n                                />\r\n                            }\r\n                        />\r\n\r\n                        <Text style={styles.label}>Confirm Password</Text>\r\n                        <Input\r\n                            style={styles.loginBox}\r\n                            placeholder={'Confrim Password'}\r\n                            secureTextEntry={true}\r\n                            onChangeText={(text) => {\r\n                                this.setState({\r\n                                    confirmPassword: text,\r\n                                });\r\n                            }}\r\n                            leftIcon={\r\n                                <Icon\r\n                                    name=\"key\"\r\n                                    size={RFValue(35)}\r\n                                    color=\"#fabf10\"\r\n                                    type=\"font-awesome-5\"\r\n                                />\r\n                            }\r\n                        />\r\n                    </View>\r\n\r\n                    <View style={{ flex: 0.2, alignItems: 'center' }}>\r\n                        <TouchableOpacity\r\n                            style={styles.registerButton}\r\n                            onPress={() => {\r\n                                this.state.contact.length !== 10\r\n                                    ? alert('Enter a Valid Phone Number')\r\n                                    : this.userSignUp(\r\n                                        this.state.emailId,\r\n                                        this.state.password,\r\n                                        this.state.confirmPassword\r\n                                    );\r\n                            }}>\r\n                            <Text style={styles.registerButtonText}>Register</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#E5F7FE\",\r\n    },\r\n    loginBox: {\r\n        width: \"80%\",\r\n        height: RFValue(50),\r\n        borderWidth: 1.5,\r\n        borderColor: \"#ffffff\",\r\n        fontSize: RFValue(20),\r\n        paddingLeft: RFValue(10),\r\n    },\r\n    label: {\r\n        fontSize: RFValue(17),\r\n        color: \"#717D7E\",\r\n        fontWeight: 'bold',\r\n        paddingLeft: RFValue(10),\r\n        marginLeft: RFValue(20)\r\n    },\r\n    registerButton: {\r\n        width: \"75%\",\r\n        height: RFValue(50),\r\n        marginTop: RFValue(20),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(3),\r\n        backgroundColor: \"#32867d\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.44,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n    },\r\n    registerButtonText: {\r\n        fontSize: RFValue(23),\r\n        fontWeight: \"bold\",\r\n        color: \"#fff\",\r\n    },\r\n    cancelButtonText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: 'bold',\r\n        color: \"#32867d\",\r\n        marginTop: RFValue(10)\r\n    },\r\n    scrollview: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\"\r\n    },\r\n    signupView: {\r\n        flex: 0.05,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    signupText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: \"bold\",\r\n        color: \"#32867d\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}