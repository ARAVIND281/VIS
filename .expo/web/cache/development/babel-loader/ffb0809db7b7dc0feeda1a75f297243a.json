{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\91944\\\\Dropbox\\\\My PC (LAPTOP-4MDLAJMG)\\\\Desktop\\\\react_test2\\\\teacherScreens\\\\addPoint.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Input, Icon, ListItem, Avatar, Overlay, ButtonGroup } from \"react-native-elements\";\nimport MyHeader from \"../components/MyHeader\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nvar ChatClassStudent1 = function (_Component) {\n  _inherits(ChatClassStudent1, _Component);\n\n  var _super = _createSuper(ChatClassStudent1);\n\n  function ChatClassStudent1() {\n    var _this;\n\n    _classCallCheck(this, ChatClassStudent1);\n\n    _this = _super.call(this);\n\n    _this.keyExtractor = function (index) {\n      return index.toString();\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i;\n      return React.createElement(ListItem, {\n        key: i,\n        title: React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this.setState({\n              selectedName: item.name,\n              selectedUserid: item.email_id,\n              pointVisible: true,\n              selectedPoint: item.mainScore\n            });\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: RFValue(20)\n          }\n        }, item.name)),\n        rightElement: React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this.setState({\n              selectedName: item.name,\n              selectedUserid: item.email_id,\n              pointVisible: true,\n              selectedPoint: item.mainScore\n            });\n          }\n        }, React.createElement(Icon, {\n          name: \"gifts\",\n          type: \"font-awesome-5\",\n          solid: true,\n          size: RFValue(35)\n        })),\n        leftAvatar: React.createElement(Avatar, {\n          rounded: true,\n          source: {\n            uri: item.imageurl\n          },\n          size: RFValue(50)\n        }),\n        bottomDivider: true\n      });\n    };\n\n    _this.getUserDetails = function () {\n      db.collection(\"teacher\").where(\"email_id\", \"==\", _this.state.userid).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.setState({\n            name: doc.data().name,\n            class_teacher_grade: doc.data().class_teacher_grade,\n            class_teacher_section: doc.data().class_teacher_section,\n            contact: doc.data().contact,\n            id: doc.data().id,\n            docId: doc.id\n          });\n\n          _this.getClassStudents();\n        });\n      });\n    };\n\n    _this.getClassStudents = function () {\n      var grade = _this.state.class_teacher_grade;\n      var section = _this.state.class_teacher_section;\n      _this.studentsRef = db.collection('students').where(\"grade\", \"==\", grade).where(\"section\", \"==\", section).orderBy(\"first\", \"desc\").orderBy(\"name\", \"asc\").onSnapshot(function (snapshot) {\n        var students = snapshot.docs.map(function (doc) {\n          return doc.data();\n        });\n\n        _this.setState({\n          students: students\n        });\n      });\n    };\n\n    _this.updateIndex1 = function (selectedIndex1) {\n      _this.setState({\n        selectedIndex1: selectedIndex1\n      });\n\n      if (selectedIndex1 == 0) {\n        _this.setState({\n          points: 5\n        });\n      }\n\n      if (selectedIndex1 == 1) {\n        _this.setState({\n          points: 10\n        });\n      }\n\n      if (selectedIndex1 == 2) {\n        _this.setState({\n          points: 20\n        });\n      }\n    };\n\n    _this.state = {\n      contact: \"\",\n      userid: firebase.auth().currentUser.email,\n      name: \"\",\n      docId: \"\",\n      class_teacher_section: '',\n      class_teacher_grade: '',\n      id: '',\n      students: [],\n      pointVisible: false,\n      selectedUserid: '',\n      selectedName: '',\n      points: null,\n      message: ''\n    };\n    return _this;\n  }\n\n  _createClass(ChatClassStudent1, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserDetails();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.students.length == 0) {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 0.12\n          }\n        }, React.createElement(MyHeader, {\n          title: \"Add Point\",\n          navigation: this.props.navigation\n        })), React.createElement(View, {\n          style: {\n            flex: 0.88,\n            justifyContent: 'center',\n            alignItems: 'center'\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/Notification.png\")\n        }), React.createElement(Text, {\n          style: {\n            fontSize: RFValue(23)\n          }\n        }, \"Hope! Your not class Teacher\")));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            backgroundColor: '#fff5dc'\n          }\n        }, React.createElement(Overlay, {\n          isVisible: this.state.pointVisible,\n          overlayStyle: {\n            width: '90%',\n            marginTop: RFValue(20),\n            marginBottom: RFValue(20)\n          },\n          onBackdropPress: function onBackdropPress() {\n            _this2.setState({\n              pointVisible: false,\n              points: null,\n              selectedIndex1: null\n            });\n          }\n        }, React.createElement(ScrollView, null, React.createElement(View, {\n          style: {\n            marginTop: RFValue(15)\n          }\n        }, React.createElement(View, {\n          style: styles.signupView\n        }, React.createElement(Text, {\n          style: styles.signupText\n        }, \"Gift To \", this.state.selectedName)), React.createElement(View, {\n          style: {\n            marginTop: RFValue(20)\n          }\n        }, React.createElement(Text, {\n          style: styles.label\n        }, \"Points \"), React.createElement(ButtonGroup, {\n          onPress: this.updateIndex1,\n          selectedIndex: this.state.selectedIndex1,\n          buttons: [5, 10, 20],\n          containerStyle: {\n            height: RFValue(50),\n            borderRadius: RFValue(10)\n          }\n        }), React.createElement(Text, {\n          style: styles.label\n        }, \"Message to \", this.state.selectedName, \" \"), React.createElement(Input, {\n          style: styles.loginBox,\n          placeholder: 'Message',\n          multiline: true,\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              message: text\n            });\n          },\n          leftIcon: React.createElement(Icon, {\n            name: \"address-card\",\n            size: RFValue(35),\n            color: \"#fabf10\",\n            type: \"font-awesome-5\"\n          }),\n          value: this.state.section\n        }))), React.createElement(TouchableOpacity, null, React.createElement(Text, {\n          style: styles.cancelButtonText,\n          onPress: function onPress() {\n            db.collection('students').doc(_this2.state.selectedUserid).update({\n              mainScore: _this2.state.selectedPoint + _this2.state.points,\n              messageVisible: true,\n              message: _this2.state.message,\n              submessage: 'Your class Teacher have added ' + _this2.state.points + ' points in Shining Star LeaderBoard',\n              pointAdded: _this2.state.points,\n              messageTopic: 'Gift from class Teacher'\n            });\n\n            _this2.setState({\n              pointVisible: false,\n              points: null,\n              selectedIndex1: null,\n              message: null\n            });\n          }\n        }, \"SEND\")))), React.createElement(View, {\n          style: {\n            flex: 0.12\n          }\n        }, React.createElement(MyHeader, {\n          title: \"Add Point\",\n          navigation: this.props.navigation\n        })), React.createElement(View, {\n          style: {\n            flex: 0.88\n          }\n        }, React.createElement(FlatList, {\n          keyExtractor: this.keyExtractor,\n          data: this.state.students,\n          renderItem: this.renderItem\n        })));\n      }\n    }\n  }]);\n\n  return ChatClassStudent1;\n}(Component);\n\nexport { ChatClassStudent1 as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#E5F7FE\"\n  },\n  formContainer: {\n    flex: 0.88,\n    justifyContent: 'center'\n  },\n  label: {\n    fontSize: RFValue(15),\n    color: \"#717D7E\",\n    fontWeight: 'bold',\n    padding: RFValue(10),\n    marginLeft: RFValue(20)\n  },\n  label1: {\n    fontSize: RFValue(18),\n    color: \"#a901ff\",\n    fontWeight: 'bold',\n    marginLeft: RFValue(50)\n  },\n  button: {\n    width: \"75%\",\n    height: RFValue(60),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(50),\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: RFValue(35)\n  },\n  buttonView: {\n    flex: 0.22,\n    alignItems: \"center\",\n    marginTop: RFValue(150)\n  },\n  buttonView1: {\n    flex: 0.22,\n    alignItems: \"center\",\n    marginTop: RFValue(50)\n  },\n  buttonText: {\n    fontSize: RFValue(23),\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  cancelButtonText: {\n    fontSize: RFValue(20),\n    fontWeight: 'bold',\n    color: \"#32867d\",\n    marginTop: RFValue(10),\n    textAlign: 'center'\n  },\n  scrollview: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  firstNameModal: {\n    flex: 0.5,\n    height: 150\n  },\n  logo: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: RFValue(10),\n    height: RFValue(280)\n  },\n  loginBox: {\n    width: \"80%\",\n    height: RFValue(50),\n    borderWidth: 1.5,\n    borderColor: \"#ffffff\",\n    fontSize: RFValue(20),\n    paddingLeft: RFValue(10)\n  },\n  buttonView: {\n    flex: 0.22,\n    alignItems: \"center\",\n    marginTop: RFValue(150)\n  },\n  buttonView1: {\n    flex: 0.22,\n    alignItems: \"center\",\n    marginTop: RFValue(50)\n  },\n  buttonText: {\n    fontSize: RFValue(23),\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  cancelButtonText: {\n    fontSize: RFValue(20),\n    fontWeight: 'bold',\n    color: \"#32867d\",\n    marginTop: RFValue(10),\n    textAlign: 'center'\n  },\n  signupView: {\n    flex: 0.05,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  signupText: {\n    fontSize: RFValue(20),\n    fontWeight: \"bold\",\n    color: \"#32867d\"\n  }\n});","map":{"version":3,"sources":["C:/Users/91944/Dropbox/My PC (LAPTOP-4MDLAJMG)/Desktop/react_test2/teacherScreens/addPoint.js"],"names":["React","Component","Input","Icon","ListItem","Avatar","Overlay","ButtonGroup","MyHeader","db","firebase","RFValue","ImagePicker","ChatClassStudent1","keyExtractor","index","toString","renderItem","item","i","setState","selectedName","name","selectedUserid","email_id","pointVisible","selectedPoint","mainScore","fontSize","uri","imageurl","getUserDetails","collection","where","state","userid","onSnapshot","querySnapshot","forEach","doc","data","class_teacher_grade","class_teacher_section","contact","id","docId","getClassStudents","grade","section","studentsRef","orderBy","snapshot","students","docs","map","updateIndex1","selectedIndex1","points","auth","currentUser","email","message","length","flex","props","navigation","justifyContent","alignItems","require","backgroundColor","width","marginTop","marginBottom","styles","signupView","signupText","label","height","borderRadius","loginBox","text","cancelButtonText","update","messageVisible","submessage","pointAdded","messageTopic","StyleSheet","create","container","formContainer","color","fontWeight","padding","marginLeft","label1","button","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","buttonView","buttonView1","buttonText","textAlign","scrollview","firstNameModal","logo","borderWidth","borderColor","paddingLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    Modal,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Alert,\r\n    ScrollView,\r\n    FlatList,\r\n    Image\r\n} from \"react-native\";\r\nimport { Input, Icon, ListItem, Avatar, Overlay, ButtonGroup } from \"react-native-elements\";\r\nimport MyHeader from \"../components/MyHeader\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nexport default class ChatClassStudent1 extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            contact: \"\",\r\n            userid: firebase.auth().currentUser.email,\r\n            name: \"\",\r\n            docId: \"\",\r\n            class_teacher_section: '',\r\n            class_teacher_grade: '',\r\n            id: '',\r\n            students: [],\r\n            pointVisible: false,\r\n            selectedUserid: '',\r\n            selectedName: '',\r\n            points: null,\r\n            message: '',\r\n        };\r\n    }\r\n\r\n    keyExtractor = (index) => index.toString()\r\n\r\n    renderItem = ({ item, i }) => {\r\n        return (\r\n            <ListItem\r\n                key={i}\r\n                title={\r\n                    <TouchableOpacity\r\n                        onPress={() => {\r\n                            this.setState({\r\n                                selectedName: item.name,\r\n                                selectedUserid: item.email_id,\r\n                                pointVisible: true,\r\n                                selectedPoint: item.mainScore\r\n                            })\r\n                        }}\r\n                    >\r\n                        <Text\r\n                            style={{\r\n                                fontSize: RFValue(20)\r\n                            }}\r\n                        >{item.name}</Text>\r\n                    </TouchableOpacity>}\r\n                //titleStyle={{ color: 'black', fontWeight: 'bold' }}\r\n                rightElement={\r\n                    <TouchableOpacity\r\n                        onPress={() => {\r\n                            this.setState({\r\n                                selectedName: item.name,\r\n                                selectedUserid: item.email_id,\r\n                                pointVisible: true,\r\n                                selectedPoint: item.mainScore\r\n                            })\r\n                        }}\r\n                    >\r\n                        <Icon name=\"gifts\" type=\"font-awesome-5\" solid={true} size={RFValue(35)} />\r\n                    </TouchableOpacity>\r\n                }\r\n                leftAvatar={\r\n                    <Avatar rounded source={{ uri: item.imageurl }} size={RFValue(50)} />\r\n                }\r\n                bottomDivider\r\n            />\r\n        )\r\n    }\r\n\r\n    getUserDetails = () => {\r\n        db.collection(\"teacher\")\r\n            .where(\"email_id\", \"==\", this.state.userid)\r\n            .onSnapshot((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    this.setState({\r\n                        name: doc.data().name,\r\n                        class_teacher_grade: doc.data().class_teacher_grade,\r\n                        class_teacher_section: doc.data().class_teacher_section,\r\n                        contact: doc.data().contact,\r\n                        id: doc.data().id,\r\n                        docId: doc.id,\r\n                    });\r\n                    this.getClassStudents()\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserDetails()\r\n    }\r\n\r\n    getClassStudents = () => {\r\n        var grade = this.state.class_teacher_grade\r\n        var section = this.state.class_teacher_section\r\n        this.studentsRef = db.collection('students')\r\n            .where(\"grade\", \"==\", grade)\r\n            .where(\"section\", \"==\", section)\r\n            .orderBy(\"first\", \"desc\")\r\n            .orderBy(\"name\", \"asc\")\r\n            .onSnapshot((snapshot) => {\r\n                var students = snapshot.docs.map((doc) => doc.data())\r\n                this.setState({\r\n                    students: students\r\n                });\r\n            })\r\n    }\r\n\r\n    updateIndex1 = (selectedIndex1) => {\r\n        this.setState({ selectedIndex1 })\r\n        if (selectedIndex1 == 0) {\r\n            this.setState({\r\n                points: 5\r\n            })\r\n        }\r\n        if (selectedIndex1 == 1) {\r\n            this.setState({\r\n                points: 10,\r\n            })\r\n        }\r\n        if (selectedIndex1 == 2) {\r\n            this.setState({\r\n                points: 20,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.students.length == 0) {\r\n            return (\r\n                <View style={{ flex: 1 }}>\r\n                    <View style={{ flex: 0.12 }}>\r\n                        <MyHeader title=\"Add Point\" navigation={this.props.navigation} />\r\n                    </View>\r\n                    <View style={{\r\n                        flex: 0.88,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                    }}>\r\n                        <Image\r\n                            source={require('../assets/Notification.png')} />\r\n                        <Text style={{ fontSize: RFValue(23) }}>Hope! Your not class Teacher</Text>\r\n                    </View>\r\n                </View>\r\n            );\r\n        } else {\r\n            return (\r\n                <View style={{ flex: 1, backgroundColor: '#fff5dc' }}>\r\n                    <Overlay\r\n                        isVisible={this.state.pointVisible}\r\n                        overlayStyle={{ width: '90%', marginTop: RFValue(20), marginBottom: RFValue(20) }}\r\n                        onBackdropPress={() => {\r\n                            this.setState({\r\n                                pointVisible: false,\r\n                                points: null,\r\n                                selectedIndex1: null\r\n                            })\r\n                        }}\r\n                    >\r\n                        <ScrollView>\r\n                            <View style={{ marginTop: RFValue(15), }}>\r\n                                <View style={styles.signupView}>\r\n                                    <Text style={styles.signupText}>Gift To {this.state.selectedName}</Text>\r\n                                </View>\r\n                                <View style={{ marginTop: RFValue(20) }}>\r\n                                    <Text style={styles.label}>Points </Text>\r\n                                    <ButtonGroup\r\n                                        onPress={this.updateIndex1}\r\n                                        selectedIndex={this.state.selectedIndex1}\r\n                                        buttons={[5, 10, 20]}\r\n                                        containerStyle={{ height: RFValue(50), borderRadius: RFValue(10) }}\r\n                                    />\r\n                                    <Text style={styles.label}>Message to {this.state.selectedName} </Text>\r\n                                    <Input\r\n                                        style={styles.loginBox}\r\n                                        placeholder={'Message'}\r\n                                        multiline={true}\r\n                                        onChangeText={(text) => {\r\n                                            this.setState({\r\n                                                message: text\r\n                                            });\r\n                                        }}\r\n                                        leftIcon={\r\n                                            <Icon\r\n                                                name=\"address-card\"\r\n                                                size={RFValue(35)}\r\n                                                color=\"#fabf10\"\r\n                                                type=\"font-awesome-5\"\r\n                                            />\r\n                                        }\r\n                                        value={this.state.section}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                            <TouchableOpacity>\r\n                                <Text style={styles.cancelButtonText}\r\n                                    onPress={() => {\r\n                                        db.collection('students')\r\n                                            .doc(this.state.selectedUserid)\r\n                                            .update({\r\n                                                mainScore: this.state.selectedPoint + this.state.points,\r\n                                                messageVisible: true,\r\n                                                message: this.state.message,\r\n                                                submessage: 'Your class Teacher have added ' + this.state.points + ' points in Shining Star LeaderBoard',\r\n                                                pointAdded: this.state.points,\r\n                                                messageTopic: 'Gift from class Teacher',\r\n                                            })\r\n                                        this.setState({\r\n                                            pointVisible: false,\r\n                                            points: null,\r\n                                            selectedIndex1: null,\r\n                                            message: null\r\n                                        })\r\n                                    }}\r\n                                >SEND</Text>\r\n                            </TouchableOpacity>\r\n                        </ScrollView>\r\n                    </Overlay>\r\n                    <View style={{ flex: 0.12 }}>\r\n                        <MyHeader title=\"Add Point\" navigation={this.props.navigation} />\r\n                    </View>\r\n                    <View style={{ flex: 0.88 }}>\r\n                        <FlatList\r\n                            keyExtractor={this.keyExtractor}\r\n                            data={this.state.students}\r\n                            renderItem={this.renderItem}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#E5F7FE\"\r\n    },\r\n    formContainer: {\r\n        flex: 0.88,\r\n        justifyContent: 'center',\r\n    },\r\n    label: {\r\n        fontSize: RFValue(15),\r\n        color: \"#717D7E\",\r\n        fontWeight: 'bold',\r\n        padding: RFValue(10),\r\n        marginLeft: RFValue(20)\r\n    },\r\n    label1: {\r\n        fontSize: RFValue(18),\r\n        color: \"#a901ff\",\r\n        fontWeight: 'bold',\r\n        marginLeft: RFValue(50)\r\n    },\r\n    button: {\r\n        width: \"75%\",\r\n        height: RFValue(60),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(50),\r\n        backgroundColor: \"#32867d\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.44,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n        marginTop: RFValue(35),\r\n    },\r\n    buttonView: {\r\n        flex: 0.22,\r\n        alignItems: \"center\",\r\n        marginTop: RFValue(150),\r\n    },\r\n    buttonView1: {\r\n        flex: 0.22,\r\n        alignItems: \"center\",\r\n        marginTop: RFValue(50),\r\n    },\r\n    buttonText: {\r\n        fontSize: RFValue(23),\r\n        fontWeight: \"bold\",\r\n        color: \"#fff\",\r\n    },\r\n    cancelButtonText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: 'bold',\r\n        color: \"#32867d\",\r\n        marginTop: RFValue(10),\r\n        textAlign: 'center'\r\n    },\r\n    scrollview: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\"\r\n    },\r\n    firstNameModal: {\r\n        flex: 0.5,\r\n        height: 150\r\n    },\r\n    logo: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: RFValue(10),\r\n        height: RFValue(280)\r\n    },\r\n    loginBox: {\r\n        width: \"80%\",\r\n        height: RFValue(50),\r\n        borderWidth: 1.5,\r\n        borderColor: \"#ffffff\",\r\n        fontSize: RFValue(20),\r\n        paddingLeft: RFValue(10),\r\n    },\r\n    buttonView: {\r\n        flex: 0.22,\r\n        alignItems: \"center\",\r\n        marginTop: RFValue(150),\r\n    },\r\n    buttonView1: {\r\n        flex: 0.22,\r\n        alignItems: \"center\",\r\n        marginTop: RFValue(50),\r\n    },\r\n    buttonText: {\r\n        fontSize: RFValue(23),\r\n        fontWeight: \"bold\",\r\n        color: \"#fff\",\r\n    },\r\n    cancelButtonText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: 'bold',\r\n        color: \"#32867d\",\r\n        marginTop: RFValue(10),\r\n        textAlign: 'center'\r\n    },\r\n    signupView: {\r\n        flex: 0.05,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    signupText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: \"bold\",\r\n        color: \"#32867d\"\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}