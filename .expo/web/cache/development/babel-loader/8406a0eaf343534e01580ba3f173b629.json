{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\91944\\\\Dropbox\\\\My PC (LAPTOP-4MDLAJMG)\\\\Desktop\\\\vis app\\\\react_test2\\\\admin\\\\achievement.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport { Icon, Input } from \"react-native-elements\";\nimport MyHeader from \"../components/MyHeader\";\n\nvar achievement = function (_Component) {\n  _inherits(achievement, _Component);\n\n  var _super = _createSuper(achievement);\n\n  function achievement(props) {\n    var _this;\n\n    _classCallCheck(this, achievement);\n\n    _this = _super.call(this, props);\n\n    _this.getAchievement = function () {\n      db.collection('achievement').orderBy('time', 'desc').limit(1).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.setState({\n            achievementText: doc.data().achievementText,\n            achievementTextChange: doc.data().achievementText\n          });\n        });\n      });\n    };\n\n    _this.updateAchievement = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              db.collection('achievement').add({\n                time: firebase.firestore.FieldValue.serverTimestamp(),\n                name: _this.state.name,\n                state: _this.state.state,\n                contact: _this.state.contact,\n                achievementText: _this.state.achievementTextChange\n              });\n              return _context.abrupt(\"return\", ToastAndroid.showWithGravityAndOffset(\"Successfully updated achievement\", ToastAndroid.LONG, ToastAndroid.BOTTOM, 25, 50));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getUserDetails = function () {\n      db.collection(\"admin\").where(\"email_id\", \"==\", _this.state.userId).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.setState({\n            name: doc.data().name,\n            state: doc.data().state,\n            contact: doc.data().contact,\n            id: doc.data().id,\n            docId: doc.id\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      achievementText: '',\n      name: '',\n      state: '',\n      contact: '',\n      id: '',\n      docId: '',\n      achievementTextChange: ''\n    };\n    return _this;\n  }\n\n  _createClass(achievement, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAchievement();\n      this.getUserDetails();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: '#fff5dc'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Achievement\",\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, \"Previous Achievement\"), React.createElement(Text, {\n        style: styles.label1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, this.state.achievementText), React.createElement(Text, {\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, \"Update Achievement\"), React.createElement(Input, {\n        style: styles.loginBox,\n        placeholder: 'Update Achievement',\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            achievementTextChange: text\n          });\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"id-badge\",\n          size: RFValue(35),\n          color: \"#fabf10\",\n          type: \"font-awesome-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }\n        }),\n        value: this.state.achievementTextChange,\n        style: [styles.formTextInput, {\n          height: RFValue(200)\n        }],\n        multiline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button1,\n        onPress: function onPress() {\n          _this2.updateAchievement();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      }, \"UPDATE\")))));\n    }\n  }]);\n\n  return achievement;\n}(Component);\n\nexport { achievement as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#E5F7FE\"\n  },\n  formContainer: {\n    flex: 0.88,\n    justifyContent: 'center'\n  },\n  label: {\n    fontSize: RFValue(15),\n    color: \"#717D7E\",\n    fontWeight: 'bold',\n    padding: RFValue(10),\n    marginLeft: RFValue(20)\n  },\n  label1: {\n    fontSize: RFValue(18),\n    color: \"#FD6A02\",\n    fontWeight: 'bold',\n    marginLeft: RFValue(50)\n  },\n  button1: {\n    width: \"75%\",\n    height: RFValue(60),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(50),\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: RFValue(35),\n    alignItems: \"center\"\n  },\n  buttonView: {\n    flex: 0.22,\n    alignItems: \"center\",\n    marginTop: RFValue(150)\n  },\n  buttonView1: {\n    flex: 0.22,\n    alignItems: \"center\",\n    marginTop: RFValue(50)\n  },\n  buttonText: {\n    fontSize: RFValue(23),\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  cancelButtonText: {\n    fontSize: RFValue(20),\n    fontWeight: 'bold',\n    color: \"#32867d\",\n    marginTop: RFValue(10),\n    textAlign: 'center'\n  },\n  scrollview: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  firstNameModal: {\n    flex: 0.5,\n    height: 150\n  },\n  logo: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: RFValue(10),\n    height: RFValue(280)\n  },\n  loginBox: {\n    width: \"80%\",\n    height: RFValue(50),\n    borderWidth: 1.5,\n    borderColor: \"#ffffff\",\n    fontSize: RFValue(20),\n    paddingLeft: RFValue(10)\n  },\n  formTextInput: {\n    width: \"75%\",\n    height: RFValue(45),\n    borderWidth: 1,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/91944/Dropbox/My PC (LAPTOP-4MDLAJMG)/Desktop/vis app/react_test2/admin/achievement.js"],"names":["React","Component","RFValue","db","firebase","Icon","Input","MyHeader","achievement","props","getAchievement","collection","orderBy","limit","onSnapshot","querySnapshot","forEach","doc","setState","achievementText","data","achievementTextChange","updateAchievement","add","time","firestore","FieldValue","serverTimestamp","name","state","contact","ToastAndroid","showWithGravityAndOffset","LONG","BOTTOM","getUserDetails","where","userId","id","docId","auth","currentUser","email","flex","backgroundColor","navigation","styles","label","label1","loginBox","text","formTextInput","height","alignItems","button1","buttonText","StyleSheet","create","container","justifyContent","formContainer","fontSize","color","fontWeight","padding","marginLeft","width","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginTop","buttonView","buttonView1","cancelButtonText","textAlign","scrollview","firstNameModal","logo","borderWidth","borderColor","paddingLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Alert,\r\n    Image,\r\n    ScrollView,\r\n    ToastAndroid\r\n} from \"react-native\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\nimport { Icon, Input } from \"react-native-elements\"\r\nimport MyHeader from \"../components/MyHeader\";\r\n\r\nexport default class achievement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userId: firebase.auth().currentUser.email,\r\n            achievementText: '',\r\n            name: '',\r\n            state: '',\r\n            contact: '',\r\n            id: '',\r\n            docId: '',\r\n            achievementTextChange: ''\r\n        };\r\n    }\r\n\r\n    getAchievement = () => {\r\n        db.collection('achievement')\r\n            .orderBy('time', 'desc')\r\n            .limit(1)\r\n            .onSnapshot((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    this.setState({\r\n                        achievementText: doc.data().achievementText,\r\n                        achievementTextChange: doc.data().achievementText,\r\n                    });\r\n                });\r\n            });\r\n    }\r\n\r\n    updateAchievement = async () => {\r\n        db.collection('achievement')\r\n            .add({\r\n                time: firebase.firestore.FieldValue.serverTimestamp(),\r\n                name: this.state.name,\r\n                state: this.state.state,\r\n                contact: this.state.contact,\r\n                achievementText: this.state.achievementTextChange,\r\n            })\r\n        return ToastAndroid.showWithGravityAndOffset(\r\n            \"Successfully updated achievement\",\r\n            ToastAndroid.LONG,\r\n            ToastAndroid.BOTTOM,\r\n            25,\r\n            50\r\n        );\r\n    }\r\n\r\n    getUserDetails = () => {\r\n        db.collection(\"admin\")\r\n            .where(\"email_id\", \"==\", this.state.userId)\r\n            .onSnapshot((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    this.setState({\r\n                        name: doc.data().name,\r\n                        state: doc.data().state,\r\n                        contact: doc.data().contact,\r\n                        id: doc.data().id,\r\n                        docId: doc.id,\r\n                    });\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAchievement()\r\n        this.getUserDetails()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={{ flex: 1, backgroundColor: '#fff5dc' }}>\r\n                <View>\r\n                    <MyHeader title=\"Achievement\" navigation={this.props.navigation} />\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.label}>Previous Achievement</Text>\r\n                    <Text style={styles.label1}>{this.state.achievementText}</Text>\r\n                    <Text style={styles.label}>Update Achievement</Text>\r\n                    <Input\r\n                        style={styles.loginBox}\r\n                        placeholder={'Update Achievement'}\r\n                        onChangeText={(text) => {\r\n                            this.setState({\r\n                                achievementTextChange: text,\r\n                            });\r\n                        }}\r\n                        leftIcon={\r\n                            <Icon\r\n                                name=\"id-badge\"\r\n                                size={RFValue(35)}\r\n                                color=\"#fabf10\"\r\n                                type=\"font-awesome-5\"\r\n                            />\r\n                        }\r\n                        value={this.state.achievementTextChange}\r\n                        style={[styles.formTextInput, { height: RFValue(200) }]}\r\n                        multiline\r\n                    />\r\n                    <View style={{ alignItems: \"center\" }}>\r\n                        <TouchableOpacity\r\n                            style={styles.button1}\r\n                            onPress={() => {\r\n                                this.updateAchievement();\r\n                            }}\r\n                        >\r\n                            <Text style={styles.buttonText}>UPDATE</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#E5F7FE\"\r\n    },\r\n    formContainer: {\r\n        flex: 0.88,\r\n        justifyContent: 'center',\r\n    },\r\n    label: {\r\n        fontSize: RFValue(15),\r\n        color: \"#717D7E\",\r\n        fontWeight: 'bold',\r\n        padding: RFValue(10),\r\n        marginLeft: RFValue(20)\r\n    },\r\n    label1: {\r\n        fontSize: RFValue(18),\r\n        color: \"#FD6A02\",\r\n        fontWeight: 'bold',\r\n        marginLeft: RFValue(50)\r\n    },\r\n    button1: {\r\n        width: \"75%\",\r\n        height: RFValue(60),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: RFValue(50),\r\n        backgroundColor: \"#32867d\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 8,\r\n        },\r\n        shadowOpacity: 0.44,\r\n        shadowRadius: 10.32,\r\n        elevation: 16,\r\n        marginTop: RFValue(35),\r\n        alignItems: \"center\"\r\n    },\r\n    buttonView: {\r\n        flex: 0.22,\r\n        alignItems: \"center\",\r\n        marginTop: RFValue(150),\r\n    },\r\n    buttonView1: {\r\n        flex: 0.22,\r\n        alignItems: \"center\",\r\n        marginTop: RFValue(50),\r\n    },\r\n    buttonText: {\r\n        fontSize: RFValue(23),\r\n        fontWeight: \"bold\",\r\n        color: \"#fff\",\r\n    },\r\n    cancelButtonText: {\r\n        fontSize: RFValue(20),\r\n        fontWeight: 'bold',\r\n        color: \"#32867d\",\r\n        marginTop: RFValue(10),\r\n        textAlign: 'center'\r\n    },\r\n    scrollview: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\"\r\n    },\r\n    firstNameModal: {\r\n        flex: 0.5,\r\n        height: 150\r\n    },\r\n    logo: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: RFValue(10),\r\n        height: RFValue(280)\r\n    },\r\n    loginBox: {\r\n        width: \"80%\",\r\n        height: RFValue(50),\r\n        borderWidth: 1.5,\r\n        borderColor: \"#ffffff\",\r\n        fontSize: RFValue(20),\r\n        paddingLeft: RFValue(10),\r\n    },\r\n    formTextInput: {\r\n        width: \"75%\",\r\n        height: RFValue(45),\r\n        borderWidth: 1,\r\n        padding: 10,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}