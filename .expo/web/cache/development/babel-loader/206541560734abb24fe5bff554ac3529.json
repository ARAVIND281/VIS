{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\91944\\\\Dropbox\\\\My PC (LAPTOP-4MDLAJMG)\\\\Desktop\\\\react_test2\\\\studentScreens\\\\LeaderBoard1.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport MyHeader from \"../components/MyHeader\";\nimport { Input, Icon, ListItem, Avatar } from \"react-native-elements\";\n\nvar LeaderBoard1 = function (_Component) {\n  _inherits(LeaderBoard1, _Component);\n\n  var _super = _createSuper(LeaderBoard1);\n\n  function LeaderBoard1() {\n    var _this;\n\n    _classCallCheck(this, LeaderBoard1);\n\n    _this = _super.call(this);\n\n    _this.getLeaderBoard = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(db.collection('leaderBoard').onSnapshot(function (snapshot) {\n                var leaderBoard = snapshot.docs.map(function (doc) {\n                  return doc.data();\n                });\n\n                _this.setState({\n                  leaderBoard: leaderBoard\n                });\n              }));\n\n            case 2:\n              _this.studentsRef = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.keyExtractor = function (index) {\n      return index.toString();\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i;\n      return React.createElement(ListItem, {\n        key: i,\n        title: React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this.props.navigation.navigate(\"LeaderBoard2\", {\n              \"details\": item\n            });\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: RFValue(20)\n          }\n        }, item.field)),\n        rightElement: React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this.props.navigation.navigate(\"LeaderBoard2\", {\n              \"details\": item\n            });\n          }\n        }, React.createElement(Icon, {\n          name: \"arrow-alt-circle-right\",\n          type: \"font-awesome-5\",\n          solid: true,\n          size: RFValue(35)\n        })),\n        leftElement: React.createElement(Icon, {\n          name: \"award\",\n          type: \"font-awesome-5\",\n          solid: true,\n          size: RFValue(35)\n        }),\n        bottomDivider: true\n      });\n    };\n\n    var today = new Date(),\n        date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    _this.state = {\n      time: date,\n      leaderBoard: [],\n      userId: firebase.auth().currentUser.email\n    };\n    return _this;\n  }\n\n  _createClass(LeaderBoard1, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLeaderBoard();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.leaderBoard == 0) {\n        return React.createElement(View, null, React.createElement(View, {\n          style: {\n            flex: 0.12\n          }\n        }, React.createElement(MyHeader, {\n          title: \"Leader Board\",\n          navigation: this.props.navigation\n        })), React.createElement(View, {\n          style: {\n            flex: 0.88,\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: RFValue(300)\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/Notification.png\")\n        }), React.createElement(Text, {\n          style: {\n            fontSize: RFValue(20),\n            textAlign: 'center'\n          }\n        }, 'No leaderBoard found')));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            backgroundColor: '#fff5dc'\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 0.12\n          }\n        }, React.createElement(MyHeader, {\n          title: \"Leader Board\",\n          navigation: this.props.navigation\n        })), React.createElement(View, {\n          style: {\n            flex: 0.88\n          }\n        }, React.createElement(FlatList, {\n          keyExtractor: this.keyExtractor,\n          data: this.state.leaderBoard,\n          renderItem: this.renderItem\n        })));\n      }\n    }\n  }]);\n\n  return LeaderBoard1;\n}(Component);\n\nexport { LeaderBoard1 as default };","map":{"version":3,"sources":["C:/Users/91944/Dropbox/My PC (LAPTOP-4MDLAJMG)/Desktop/react_test2/studentScreens/LeaderBoard1.js"],"names":["React","Component","db","firebase","RFValue","MyHeader","Input","Icon","ListItem","Avatar","LeaderBoard1","getLeaderBoard","collection","onSnapshot","snapshot","leaderBoard","docs","map","doc","data","setState","studentsRef","keyExtractor","index","toString","renderItem","item","i","props","navigation","navigate","fontSize","field","today","Date","date","getFullYear","getMonth","getDate","state","time","userId","auth","currentUser","email","flex","justifyContent","alignItems","marginTop","require","textAlign","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Alert,\r\n    Image,\r\n    ScrollView,\r\n    FlatList\r\n} from \"react-native\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport MyHeader from \"../components/MyHeader\";\r\nimport { Input, Icon, ListItem, Avatar } from \"react-native-elements\";\r\n\r\nexport default class LeaderBoard1 extends Component {\r\n    constructor() {\r\n        super();\r\n        var today = new Date(),\r\n            date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n        this.state = {\r\n            time: date,\r\n            leaderBoard: [],\r\n            userId: firebase.auth().currentUser.email,\r\n        };\r\n    }\r\n\r\n    getLeaderBoard = async () => {\r\n        this.studentsRef = await db.collection('leaderBoard')\r\n            .onSnapshot((snapshot) => {\r\n                var leaderBoard = snapshot.docs.map((doc) => doc.data())\r\n                this.setState({\r\n                    leaderBoard: leaderBoard\r\n                });\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLeaderBoard()\r\n    }\r\n\r\n    keyExtractor = (index) => index.toString()\r\n\r\n    renderItem = ({ item, i }) => {\r\n        return (\r\n            <ListItem\r\n                key={i}\r\n                title={\r\n                    <TouchableOpacity\r\n                        onPress={() => {\r\n                            this.props.navigation.navigate(\"LeaderBoard2\", { \"details\": item })\r\n                        }}\r\n                    >\r\n                        <Text\r\n                            style={{\r\n                                fontSize: RFValue(20)\r\n                            }}\r\n                        >{item.field}</Text>\r\n                    </TouchableOpacity>}\r\n                //titleStyle={{ color: 'black', fontWeight: 'bold' }}\r\n                rightElement={\r\n                    <TouchableOpacity\r\n                        onPress={() => {\r\n                            this.props.navigation.navigate(\"LeaderBoard2\", { \"details\": item })\r\n                        }}\r\n                    >\r\n                        <Icon name=\"arrow-alt-circle-right\" type=\"font-awesome-5\" solid={true} size={RFValue(35)} />\r\n                    </TouchableOpacity>\r\n                }\r\n                leftElement={\r\n                    <Icon name=\"award\" type=\"font-awesome-5\" solid={true} size={RFValue(35)} />\r\n                }\r\n                bottomDivider\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (this.state.leaderBoard == 0) {\r\n            return (\r\n                <View>\r\n                    <View style={{ flex: 0.12 }}>\r\n                        <MyHeader title=\"Leader Board\" navigation={this.props.navigation} />\r\n                    </View>\r\n                    <View style={{\r\n                        flex: 0.88,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        marginTop: RFValue(300),\r\n                    }}>\r\n                        <Image\r\n                            source={require('../assets/Notification.png')} />\r\n                        <Text style={{ fontSize: RFValue(20), textAlign: 'center' }}>{'No leaderBoard found'}</Text>\r\n                    </View>\r\n                </View>\r\n            )\r\n        } else {\r\n            return (\r\n                <View style={{ flex: 1, backgroundColor: '#fff5dc' }}>\r\n                    <View style={{ flex: 0.12 }}>\r\n                        <MyHeader title=\"Leader Board\" navigation={this.props.navigation} />\r\n                    </View>\r\n                    <View style={{ flex: 0.88 }}>\r\n                        <FlatList\r\n                            keyExtractor={this.keyExtractor}\r\n                            data={this.state.leaderBoard}\r\n                            renderItem={this.renderItem}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            );\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}